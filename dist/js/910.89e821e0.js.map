{"version":3,"file":"js/910.89e821e0.js","mappings":"iQAgDE,MAAMA,GAAQC,EAAAA,EAAAA,IAAS,IAEjBC,EAAWC,UACf,MAAMC,cAAsBC,MAAM,8BAA+B,CAACC,OAAQ,SAASC,OACnF,OAAOH,CAAM,E,OAGfF,IAAWM,MAAMJ,IACfJ,EAAMS,OAAO,EAAGT,EAAMU,UAAWN,EAAO,I,i5CCnDtCO,EAAc,EAEpB,G","sources":["webpack://GC-App2/./src/views/PollsPage.vue","webpack://GC-App2/./src/views/PollsPage.vue?341d"],"sourcesContent":["<template>\r\n    <ion-page>\r\n      <ion-header :translucent=\"true\">\r\n        <ion-toolbar>\r\n          <ion-buttons slot=\"start\">\r\n            <ion-menu-button color=\"primary\"></ion-menu-button>\r\n          </ion-buttons>\r\n          <ion-title>Polls</ion-title>\r\n        </ion-toolbar>\r\n      </ion-header>\r\n  \r\n      <ion-content :fullscreen=\"true\">\r\n        <ion-header collapse=\"condense\">\r\n          <ion-toolbar>\r\n            <ion-title size=\"large\">Polls</ion-title>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n  \r\n        <div id=\"cards\">\r\n          <div v-for=\"(p, i) in polls\" :key=\"i\">\r\n\r\n            <ion-card>\r\n              <ion-card-header>\r\n                <ion-card-title> {{ p.title }} </ion-card-title>\r\n              </ion-card-header>\r\n\r\n              <ion-card-content>\r\n                {{ p.desc }}\r\n              </ion-card-content>\r\n              \r\n              <div id=\"voteButton\">\r\n                <ion-button :href=\"'/poll?index=' + i\" :disabled=\"p.disabled\" id=\"vote\" >{{ p.button }}</ion-button>\r\n              </div>\r\n            </ion-card>\r\n\r\n          </div>\r\n\r\n          \r\n        </div>\r\n        \r\n  \r\n      </ion-content>\r\n    </ion-page>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar, IonCard } from '@ionic/vue';\r\nimport { reactive } from 'vue';\r\n  const polls = reactive([]);\r\n\r\n  const getPolls = async () => {\r\n    const result = await (await fetch(\"http://localhost:3000/polls\", {method: \"GET\"})).json();\r\n    return result;\r\n  };\r\n\r\n  getPolls().then((result) => {\r\n    polls.splice(0, polls.length, ...result)\r\n  })\r\n\r\n  </script>\r\n  \r\n  <style>\r\n  #container {\r\n    text-align: center;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 65px;\r\n  }\r\n  #vote {\r\n  }\r\n  #voteButton {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  \r\n  #cards {\r\n  \r\n  }\r\n  \r\n  #container strong {\r\n    font-size: 20px;\r\n    line-height: 26px;\r\n  }\r\n  \r\n  #container p {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n    color: #5c1e1e;\r\n    margin: 0;\r\n  }\r\n  \r\n  #container a {\r\n    text-decoration: none;\r\n  }\r\n  </style>\r\n  ","import script from \"./PollsPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PollsPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PollsPage.vue?vue&type=style&index=0&id=53fac468&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["polls","reactive","getPolls","async","result","fetch","method","json","then","splice","length","__exports__"],"sourceRoot":""}