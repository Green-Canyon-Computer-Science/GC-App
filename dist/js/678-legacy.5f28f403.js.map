{"version":3,"file":"js/678-legacy.5f28f403.js","mappings":"uGACA,IAAIA,EAAS,eAIbC,EAAOC,QAAU,SAAUC,EAAGC,EAAOC,GACnC,OAAOD,GAASC,EAAUL,EAAOG,EAAGC,GAAOE,OAAS,EACtD,C,8BCLA,EAAQ,MACR,IAAIC,EAAc,EAAQ,MACtBC,EAAgB,EAAQ,MACxBC,EAAa,EAAQ,MACrBC,EAAQ,EAAQ,MAChBC,EAAkB,EAAQ,MAC1BC,EAA8B,EAAQ,MAEtCC,EAAUF,EAAgB,WAC1BG,EAAkBC,OAAOC,UAE7Bf,EAAOC,QAAU,SAAUe,EAAKC,EAAMC,EAAQC,GAC5C,IAAIC,EAASV,EAAgBM,GAEzBK,GAAuBZ,GAAM,WAE/B,IAAIa,EAAI,CAAC,EAET,OADAA,EAAEF,GAAU,WAAc,OAAO,CAAG,EACf,GAAd,GAAGJ,GAAKM,EACjB,IAEIC,EAAoBF,IAAwBZ,GAAM,WAEpD,IAAIe,GAAa,EACbC,EAAK,IAkBT,MAhBY,UAART,IAIFS,EAAK,CAAC,EAGNA,EAAGC,YAAc,CAAC,EAClBD,EAAGC,YAAYd,GAAW,WAAc,OAAOa,CAAI,EACnDA,EAAGE,MAAQ,GACXF,EAAGL,GAAU,IAAIA,IAGnBK,EAAGR,KAAO,WAAiC,OAAnBO,GAAa,EAAa,IAAM,EAExDC,EAAGL,GAAQ,KACHI,CACV,IAEA,IACGH,IACAE,GACDL,EACA,CACA,IAAIU,EAA8BtB,EAAY,IAAIc,IAC9CS,EAAUZ,EAAKG,EAAQ,GAAGJ,IAAM,SAAUc,EAAcC,EAAQC,EAAKC,EAAMC,GAC7E,IAAIC,EAAwB7B,EAAYwB,GACpCM,EAAQL,EAAOd,KACnB,OAAImB,IAAU5B,GAAc4B,IAAUvB,EAAgBI,KAChDI,IAAwBa,EAInB,CAAEG,MAAM,EAAMC,MAAOV,EAA4BG,EAAQC,EAAKC,IAEhE,CAAEI,MAAM,EAAMC,MAAOH,EAAsBH,EAAKD,EAAQE,IAE1D,CAAEI,MAAM,EACjB,IAEA9B,EAAcgC,OAAOxB,UAAWC,EAAKa,EAAQ,IAC7CtB,EAAcM,EAAiBO,EAAQS,EAAQ,GACjD,CAEIV,GAAMR,EAA4BE,EAAgBO,GAAS,QAAQ,EACzE,C,gBCzEA,IAAId,EAAc,EAAQ,MACtBkC,EAAW,EAAQ,MAEnBC,EAAQC,KAAKD,MACb1C,EAASO,EAAY,GAAGP,QACxB4C,EAAUrC,EAAY,GAAGqC,SACzBC,EAActC,EAAY,GAAGuC,OAE7BC,EAAuB,8BACvBC,EAAgC,sBAIpC/C,EAAOC,QAAU,SAAU+C,EAAShB,EAAKiB,EAAUC,EAAUC,EAAeC,GAC1E,IAAIC,EAAUJ,EAAWD,EAAQ3C,OAC7BiD,EAAIJ,EAAS7C,OACbkD,EAAUR,EAKd,YAJsBS,IAAlBL,IACFA,EAAgBX,EAASW,GACzBI,EAAUT,GAELH,EAAQS,EAAaG,GAAS,SAAUE,EAAOC,GACpD,IAAIC,EACJ,OAAQ5D,EAAO2D,EAAI,IACjB,IAAK,IAAK,MAAO,IACjB,IAAK,IAAK,OAAOV,EACjB,IAAK,IAAK,OAAOJ,EAAYZ,EAAK,EAAGiB,GACrC,IAAK,IAAK,OAAOL,EAAYZ,EAAKqB,GAClC,IAAK,IACHM,EAAUR,EAAcP,EAAYc,EAAI,GAAI,IAC5C,MACF,QACE,IAAIE,GAAKF,EACT,GAAU,IAANE,EAAS,OAAOH,EACpB,GAAIG,EAAIN,EAAG,CACT,IAAIO,EAAIpB,EAAMmB,EAAI,IAClB,OAAU,IAANC,EAAgBJ,EAChBI,GAAKP,OAA8BE,IAApBN,EAASW,EAAI,GAAmB9D,EAAO2D,EAAI,GAAKR,EAASW,EAAI,GAAK9D,EAAO2D,EAAI,GACzFD,CACT,CACAE,EAAUT,EAASU,EAAI,GAE3B,YAAmBJ,IAAZG,EAAwB,GAAKA,CACtC,GACF,C,iBC5CA,IAAIG,EAAO,EAAQ,MACfC,EAAW,EAAQ,MACnBC,EAAa,EAAQ,KACrBC,EAAU,EAAQ,MAClBzD,EAAa,EAAQ,MAErB0D,EAAaC,UAIjBnE,EAAOC,QAAU,SAAUmE,EAAGlE,GAC5B,IAAIe,EAAOmD,EAAEnD,KACb,GAAI+C,EAAW/C,GAAO,CACpB,IAAIoD,EAASP,EAAK7C,EAAMmD,EAAGlE,GAE3B,OADe,OAAXmE,GAAiBN,EAASM,GACvBA,CACT,CACA,GAAmB,WAAfJ,EAAQG,GAAiB,OAAON,EAAKtD,EAAY4D,EAAGlE,GACxD,MAAMgE,EAAW,8CACnB,C,8BChBA,IAAIJ,EAAO,EAAQ,MACfxD,EAAc,EAAQ,MACtBgE,EAAW,EAAQ,MACnBC,EAAc,EAAQ,MACtBC,EAAgB,EAAQ,MACxBC,EAAS,EAAQ,MACjBC,EAAS,EAAQ,IACjBC,EAAmB,YACnBC,EAAsB,EAAQ,MAC9BC,EAAkB,EAAQ,MAE1BC,EAAgBL,EAAO,wBAAyBlC,OAAOxB,UAAU4B,SACjEoC,EAAajE,OAAOC,UAAUE,KAC9B+D,EAAcD,EACdhF,EAASO,EAAY,GAAGP,QACxBkF,EAAU3E,EAAY,GAAG2E,SACzBtC,EAAUrC,EAAY,GAAGqC,SACzBC,EAActC,EAAY,GAAGuC,OAE7BqC,EAA2B,WAC7B,IAAIC,EAAM,IACNC,EAAM,MAGV,OAFAtB,EAAKiB,EAAYI,EAAK,KACtBrB,EAAKiB,EAAYK,EAAK,KACG,IAAlBD,EAAIE,WAAqC,IAAlBD,EAAIC,SACnC,CAN8B,GAQ3BC,EAAgBd,EAAce,aAG9BC,OAAuChC,IAAvB,OAAOvC,KAAK,IAAI,GAEhCwE,EAAQP,GAA4BM,GAAiBF,GAAiBV,GAAuBC,EAE7FY,IACFT,EAAc,SAAcU,GAC1B,IAIIrB,EAAQsB,EAAQN,EAAW5B,EAAOmC,EAAGC,EAAQC,EAJ7CrE,EAAKsE,KACLC,EAAQrB,EAAiBlD,GACzBO,EAAMsC,EAASoB,GACfO,EAAMD,EAAMC,IAGhB,GAAIA,EAIF,OAHAA,EAAIZ,UAAY5D,EAAG4D,UACnBhB,EAASP,EAAKkB,EAAaiB,EAAKjE,GAChCP,EAAG4D,UAAYY,EAAIZ,UACZhB,EAGT,IAAI6B,EAASF,EAAME,OACfC,EAASb,GAAiB7D,EAAG0E,OAC7BxE,EAAQmC,EAAKS,EAAa9C,GAC1B2E,EAAS3E,EAAG2E,OACZC,EAAa,EACbC,EAAUtE,EA+Cd,GA7CImE,IACFxE,EAAQgB,EAAQhB,EAAO,IAAK,KACC,IAAzBsD,EAAQtD,EAAO,OACjBA,GAAS,KAGX2E,EAAU1D,EAAYZ,EAAKP,EAAG4D,WAE1B5D,EAAG4D,UAAY,KAAO5D,EAAG8E,WAAa9E,EAAG8E,WAA+C,OAAlCxG,EAAOiC,EAAKP,EAAG4D,UAAY,MACnFe,EAAS,OAASA,EAAS,IAC3BE,EAAU,IAAMA,EAChBD,KAIFV,EAAS,IAAI7E,OAAO,OAASsF,EAAS,IAAKzE,IAGzC6D,IACFG,EAAS,IAAI7E,OAAO,IAAMsF,EAAS,WAAYzE,IAE7CuD,IAA0BG,EAAY5D,EAAG4D,WAE7C5B,EAAQK,EAAKiB,EAAYoB,EAASR,EAASlE,EAAI6E,GAE3CH,EACE1C,GACFA,EAAM+C,MAAQ5D,EAAYa,EAAM+C,MAAOH,GACvC5C,EAAM,GAAKb,EAAYa,EAAM,GAAI4C,GACjC5C,EAAMtD,MAAQsB,EAAG4D,UACjB5D,EAAG4D,WAAa5B,EAAM,GAAGpD,QACpBoB,EAAG4D,UAAY,EACbH,GAA4BzB,IACrChC,EAAG4D,UAAY5D,EAAGgF,OAAShD,EAAMtD,MAAQsD,EAAM,GAAGpD,OAASgF,GAEzDG,GAAiB/B,GAASA,EAAMpD,OAAS,GAG3CyD,EAAKgB,EAAerB,EAAM,GAAIkC,GAAQ,WACpC,IAAKC,EAAI,EAAGA,EAAIc,UAAUrG,OAAS,EAAGuF,SACfpC,IAAjBkD,UAAUd,KAAkBnC,EAAMmC,QAAKpC,EAE/C,IAGEC,GAASyC,EAEX,IADAzC,EAAMyC,OAASL,EAASnB,EAAO,MAC1BkB,EAAI,EAAGA,EAAIM,EAAO7F,OAAQuF,IAC7BE,EAAQI,EAAON,GACfC,EAAOC,EAAM,IAAMrC,EAAMqC,EAAM,IAInC,OAAOrC,CACT,GAGFzD,EAAOC,QAAU+E,C,8BCnHjB,IAAIjB,EAAW,EAAQ,MAIvB/D,EAAOC,QAAU,WACf,IAAI0G,EAAO5C,EAASgC,MAChB1B,EAAS,GASb,OARIsC,EAAKC,aAAYvC,GAAU,KAC3BsC,EAAKF,SAAQpC,GAAU,KACvBsC,EAAKE,aAAYxC,GAAU,KAC3BsC,EAAKJ,YAAWlC,GAAU,KAC1BsC,EAAKG,SAAQzC,GAAU,KACvBsC,EAAKvG,UAASiE,GAAU,KACxBsC,EAAKI,cAAa1C,GAAU,KAC5BsC,EAAKR,SAAQ9B,GAAU,KACpBA,CACT,C,iBCjBA,IAAI5D,EAAQ,EAAQ,MAChBgG,EAAS,EAAQ,MAGjBO,EAAUP,EAAO3F,OAEjBwE,EAAgB7E,GAAM,WACxB,IAAIgB,EAAKuF,EAAQ,IAAK,KAEtB,OADAvF,EAAG4D,UAAY,EACW,MAAnB5D,EAAGR,KAAK,OACjB,IAIIgG,EAAgB3B,GAAiB7E,GAAM,WACzC,OAAQuG,EAAQ,IAAK,KAAKb,MAC5B,IAEIZ,EAAeD,GAAiB7E,GAAM,WAExC,IAAIgB,EAAKuF,EAAQ,KAAM,MAEvB,OADAvF,EAAG4D,UAAY,EACU,MAAlB5D,EAAGR,KAAK,MACjB,IAEAjB,EAAOC,QAAU,CACfsF,aAAcA,EACd0B,cAAeA,EACf3B,cAAeA,E,iBC5BjB,IAAI7E,EAAQ,EAAQ,MAChBgG,EAAS,EAAQ,MAGjBO,EAAUP,EAAO3F,OAErBd,EAAOC,QAAUQ,GAAM,WACrB,IAAIgB,EAAKuF,EAAQ,IAAK,KACtB,QAASvF,EAAGqF,QAAUrF,EAAGR,KAAK,OAAsB,MAAbQ,EAAGE,MAC5C,G,iBCTA,IAAIlB,EAAQ,EAAQ,MAChBgG,EAAS,EAAQ,MAGjBO,EAAUP,EAAO3F,OAErBd,EAAOC,QAAUQ,GAAM,WACrB,IAAIgB,EAAKuF,EAAQ,UAAW,KAC5B,MAAiC,MAA1BvF,EAAGR,KAAK,KAAKiF,OAAOgB,GACI,OAA7B,IAAIvE,QAAQlB,EAAI,QACpB,G,iBCVA,IAAInB,EAAc,EAAQ,MACtB6G,EAAsB,EAAQ,MAC9B7C,EAAW,EAAQ,MACnB8C,EAAyB,EAAQ,MAEjCrH,EAASO,EAAY,GAAGP,QACxBsH,EAAa/G,EAAY,GAAG+G,YAC5BzE,EAActC,EAAY,GAAGuC,OAE7ByE,EAAe,SAAUC,GAC3B,OAAO,SAAUC,EAAOC,GACtB,IAGIC,EAAOC,EAHPzH,EAAIoE,EAAS8C,EAAuBI,IACpCvE,EAAWkE,EAAoBM,GAC/BG,EAAO1H,EAAEG,OAEb,OAAI4C,EAAW,GAAKA,GAAY2E,EAAaL,EAAoB,QAAK/D,GACtEkE,EAAQL,EAAWnH,EAAG+C,GACfyE,EAAQ,OAAUA,EAAQ,OAAUzE,EAAW,IAAM2E,IACtDD,EAASN,EAAWnH,EAAG+C,EAAW,IAAM,OAAU0E,EAAS,MAC3DJ,EACExH,EAAOG,EAAG+C,GACVyE,EACFH,EACE3E,EAAY1C,EAAG+C,EAAUA,EAAW,GACV0E,EAAS,OAAlCD,EAAQ,OAAU,IAA0B,MACvD,CACF,EAEA1H,EAAOC,QAAU,CAGf4H,OAAQP,GAAa,GAGrBvH,OAAQuH,GAAa,G,iBClCvB,IAAIrD,EAAU,EAAQ,KAElB6D,EAAUvF,OAEdvC,EAAOC,QAAU,SAAU8H,GACzB,GAA0B,WAAtB9D,EAAQ8D,GAAwB,MAAM5D,UAAU,6CACpD,OAAO2D,EAAQC,EACjB,C,8BCNA,IAAIC,EAAI,EAAQ,MACZ/G,EAAO,EAAQ,MAInB+G,EAAE,CAAEC,OAAQ,SAAUC,OAAO,EAAMC,OAAQ,IAAIlH,OAASA,GAAQ,CAC9DA,KAAMA,G,8BCNR,IAAImH,EAAQ,EAAQ,MAChBtE,EAAO,EAAQ,MACfxD,EAAc,EAAQ,MACtB+H,EAAgC,EAAQ,MACxC5H,EAAQ,EAAQ,MAChBsD,EAAW,EAAQ,MACnBC,EAAa,EAAQ,KACrBsE,EAAoB,EAAQ,MAC5BnB,EAAsB,EAAQ,MAC9BoB,EAAW,EAAQ,MACnBjE,EAAW,EAAQ,MACnB8C,EAAyB,EAAQ,MACjCoB,EAAqB,EAAQ,MAC7BC,EAAY,EAAQ,MACpBC,EAAkB,EAAQ,KAC1BC,EAAa,EAAQ,MACrBjI,EAAkB,EAAQ,MAE1BkI,EAAUlI,EAAgB,WAC1BmI,EAAMnG,KAAKmG,IACXC,EAAMpG,KAAKoG,IACXC,EAASzI,EAAY,GAAGyI,QACxBC,EAAO1I,EAAY,GAAG0I,MACtBC,EAAgB3I,EAAY,GAAG2E,SAC/BrC,EAActC,EAAY,GAAGuC,OAE7BqG,EAAgB,SAAUC,GAC5B,YAAc3F,IAAP2F,EAAmBA,EAAK5G,OAAO4G,EACxC,EAIIC,EAAmB,WAErB,MAAkC,OAA3B,IAAIzG,QAAQ,IAAK,KACzB,CAHsB,GAMnB0G,EAA+C,WACjD,QAAI,IAAIT,IAC6B,KAA5B,IAAIA,GAAS,IAAK,KAG5B,CALkD,GAO/CU,GAAiC7I,GAAM,WACzC,IAAIgB,EAAK,IAOT,OANAA,EAAGR,KAAO,WACR,IAAIoD,EAAS,GAEb,OADAA,EAAO6B,OAAS,CAAEgB,EAAG,KACd7C,CACT,EAEkC,MAA3B,GAAG1B,QAAQlB,EAAI,OACxB,IAGA4G,EAA8B,WAAW,SAAUkB,EAAGzE,EAAe0E,GACnE,IAAIC,EAAoBJ,EAA+C,IAAM,KAE7E,MAAO,CAGL,SAAiBK,EAAaC,GAC5B,IAAIrI,EAAI8F,EAAuBrB,MAC3B6D,EAAWtB,EAAkBoB,QAAelG,EAAYiF,EAAUiB,EAAad,GACnF,OAAOgB,EACH9F,EAAK8F,EAAUF,EAAapI,EAAGqI,GAC/B7F,EAAKgB,EAAeR,EAAShD,GAAIoI,EAAaC,EACpD,EAGA,SAAUjE,EAAQiE,GAChB,IAAIE,EAAK9F,EAASgC,MACd7F,EAAIoE,EAASoB,GAEjB,GACyB,iBAAhBiE,IAC6C,IAApDV,EAAcU,EAAcF,KACW,IAAvCR,EAAcU,EAAc,MAC5B,CACA,IAAIG,EAAMN,EAAgB1E,EAAe+E,EAAI3J,EAAGyJ,GAChD,GAAIG,EAAIzH,KAAM,OAAOyH,EAAIxH,KAC3B,CAEA,IAAIyH,EAAoB/F,EAAW2F,GAC9BI,IAAmBJ,EAAerF,EAASqF,IAEhD,IAAIlD,EAASoD,EAAGpD,OAChB,GAAIA,EAAQ,CACV,IAAIuD,EAAcH,EAAGzJ,QACrByJ,EAAGxE,UAAY,CACjB,CACA,IAAI4E,EAAU,GACd,MAAO,EAAM,CACX,IAAI5F,EAASsE,EAAWkB,EAAI3J,GAC5B,GAAe,OAAXmE,EAAiB,MAGrB,GADA2E,EAAKiB,EAAS5F,IACToC,EAAQ,MAEb,IAAIyD,EAAW5F,EAASD,EAAO,IACd,KAAb6F,IAAiBL,EAAGxE,UAAYmD,EAAmBtI,EAAGqI,EAASsB,EAAGxE,WAAY2E,GACpF,CAIA,IAFA,IAAIG,EAAoB,GACpBC,EAAqB,EAChBxE,EAAI,EAAGA,EAAIqE,EAAQ5J,OAAQuF,IAAK,CACvCvB,EAAS4F,EAAQrE,GAUjB,IARA,IAAI5C,EAAUsB,EAASD,EAAO,IAC1BpB,EAAW4F,EAAIC,EAAI3B,EAAoB9C,EAAOlE,OAAQD,EAAEG,QAAS,GACjE6C,EAAW,GAMNmH,EAAI,EAAGA,EAAIhG,EAAOhE,OAAQgK,IAAKrB,EAAK9F,EAAUgG,EAAc7E,EAAOgG,KAC5E,IAAIlH,EAAgBkB,EAAO6B,OAC3B,GAAI6D,EAAmB,CACrB,IAAIO,EAAevB,EAAO,CAAC/F,GAAUE,EAAUD,EAAU/C,QACnCsD,IAAlBL,GAA6B6F,EAAKsB,EAAcnH,GACpD,IAAIC,EAAckB,EAAS8D,EAAMuB,OAAcnG,EAAW8G,GAC5D,MACElH,EAAcsF,EAAgB1F,EAAS9C,EAAG+C,EAAUC,EAAUC,EAAewG,GAE3E1G,GAAYmH,IACdD,GAAqBvH,EAAY1C,EAAGkK,EAAoBnH,GAAYG,EACpEgH,EAAqBnH,EAAWD,EAAQ3C,OAE5C,CACA,OAAO8J,EAAoBvH,EAAY1C,EAAGkK,EAC5C,EAEJ,IAAId,IAAkCF,GAAoBC,E,8BChI1D,SAASkB,EAAOC,GACd,IAAIC,EAAUC,MAAM3J,UAAU8B,MAAMiB,KAAK4C,UAAW,GAUpD,OARA+D,EAAQE,SAAQ,SAAUvE,GACnBA,GAELwE,OAAOC,KAAKzE,GAAQuE,SAAQ,SAAUG,GACpCN,EAAIM,GAAO1E,EAAO0E,EACpB,GACF,IAEON,CACT,CAEA,SAASO,EAAOP,GAAO,OAAOI,OAAO7J,UAAUuD,SAASR,KAAK0G,EAAM,CACnE,SAASQ,EAASR,GAAO,MAAuB,oBAAhBO,EAAOP,EAA4B,CACnE,SAASS,EAAST,GAAO,MAAuB,oBAAhBO,EAAOP,EAA4B,CACnE,SAASU,EAASV,GAAO,MAAuB,oBAAhBO,EAAOP,EAA4B,CACnE,SAASW,EAAWX,GAAO,MAAuB,sBAAhBO,EAAOP,EAA8B,CAGvE,SAASY,EAASpJ,GAAO,OAAOA,EAAIW,QAAQ,uBAAwB,OAAS,CAK7E,IAAI0I,EAAiB,CACnBC,WAAW,EACXC,YAAY,EACZC,SAAS,GAIX,SAASC,EAAajB,GACpB,OAAOI,OAAOC,KAAKL,GAAO,CAAC,GAAGkB,QAAO,SAAUC,EAAKC,GAClD,OAAOD,GAAON,EAAeQ,eAAeD,EAC9C,IAAG,EACL,CAGA,IAAIE,EAAiB,CACnB,QAAS,CACPC,SAAU,SAAUC,EAAMvE,EAAKwE,GAC7B,IAAIC,EAAOF,EAAKnJ,MAAM4E,GAQtB,OANKwE,EAAKxK,GAAG0K,OAEXF,EAAKxK,GAAG0K,KAAQ,IAAIrL,OAClB,UAAYmL,EAAKxK,GAAG2K,SAAWH,EAAKxK,GAAG4K,qBAAuBJ,EAAKxK,GAAG6K,SAAU,MAGhFL,EAAKxK,GAAG0K,KAAKI,KAAKL,GACbA,EAAKzI,MAAMwI,EAAKxK,GAAG0K,MAAM,GAAG9L,OAE9B,CACT,GAEF,SAAW,QACX,OAAW,QACX,KAAW,CACT0L,SAAU,SAAUC,EAAMvE,EAAKwE,GAC7B,IAAIC,EAAOF,EAAKnJ,MAAM4E,GAkBtB,OAhBKwE,EAAKxK,GAAG+K,UAEXP,EAAKxK,GAAG+K,QAAW,IAAI1L,OACrB,IACAmL,EAAKxK,GAAG2K,SAGR,sBAAwBH,EAAKxK,GAAGgL,WAAa,SAAWR,EAAKxK,GAAGiL,gBAAkB,IAClFT,EAAKxK,GAAGkL,SACRV,EAAKxK,GAAGmL,oBACRX,EAAKxK,GAAG6K,SAER,MAIAL,EAAKxK,GAAG+K,QAAQD,KAAKL,GAEnBzE,GAAO,GAAuB,MAAlBuE,EAAKvE,EAAM,IACvBA,GAAO,GAAuB,MAAlBuE,EAAKvE,EAAM,GADqB,EAEzCyE,EAAKzI,MAAMwI,EAAKxK,GAAG+K,SAAS,GAAGnM,OAEjC,CACT,GAEF,UAAW,CACT0L,SAAU,SAAUC,EAAMvE,EAAKwE,GAC7B,IAAIC,EAAOF,EAAKnJ,MAAM4E,GAOtB,OALKwE,EAAKxK,GAAGoL,SACXZ,EAAKxK,GAAGoL,OAAU,IAAI/L,OACpB,IAAMmL,EAAKxK,GAAGqL,eAAiB,IAAMb,EAAKxK,GAAGsL,gBAAiB,MAG9Dd,EAAKxK,GAAGoL,OAAON,KAAKL,GACfA,EAAKzI,MAAMwI,EAAKxK,GAAGoL,QAAQ,GAAGxM,OAEhC,CACT,IAOA2M,EAAkB,0VAGlBC,EAAe,8EAA8EC,MAAM,KAMvG,SAASC,EAAelB,GACtBA,EAAKmB,WAAa,EAClBnB,EAAKoB,eAAmB,EAC1B,CAEA,SAASC,EAAgB7L,GACvB,OAAO,SAAUuK,EAAMvE,GACrB,IAAIyE,EAAOF,EAAKnJ,MAAM4E,GAEtB,OAAIhG,EAAG8K,KAAKL,GACHA,EAAKzI,MAAMhC,GAAI,GAAGpB,OAEpB,CACT,CACF,CAEA,SAASkN,IACP,OAAO,SAAU9J,EAAOwI,GACtBA,EAAKuB,UAAU/J,EACjB,CACF,CAIA,SAASgK,EAAQxB,GAGf,IAAIxK,EAAKwK,EAAKxK,GAAK,EAAQ,KAAR,CAAoBwK,EAAKyB,UAGxCC,EAAO1B,EAAK2B,SAAS/K,QAWzB,SAASgL,EAAMC,GAAO,OAAOA,EAAInL,QAAQ,SAAUlB,EAAGsM,SAAW,CATjE9B,EAAK+B,YAEA/B,EAAKgC,mBACRN,EAAK3E,KAAKgE,GAEZW,EAAK3E,KAAKvH,EAAGyM,QAEbzM,EAAGsM,SAAWJ,EAAKQ,KAAK,KAIxB1M,EAAG2M,YAAmBtN,OAAO+M,EAAMpM,EAAG4M,iBAAkB,KACxD5M,EAAG6M,WAAmBxN,OAAO+M,EAAMpM,EAAG8M,gBAAiB,KACvD9M,EAAG+M,iBAAmB1N,OAAO+M,EAAMpM,EAAGgN,sBAAuB,KAC7DhN,EAAGiN,gBAAmB5N,OAAO+M,EAAMpM,EAAGkN,qBAAsB,KAM5D,IAAIC,EAAU,GAId,SAASC,EAAYC,EAAMC,GACzB,MAAM,IAAIC,MAAM,+BAAiCF,EAAO,MAAQC,EAClE,CAJA9C,EAAKgD,aAAe,CAAC,EAMrBrE,OAAOC,KAAKoB,EAAKiD,aAAavE,SAAQ,SAAUmE,GAC9C,IAAIC,EAAM9C,EAAKiD,YAAYJ,GAG3B,GAAY,OAARC,EAAJ,CAEA,IAAII,EAAW,CAAEpD,SAAU,KAAMqD,KAAM,MAIvC,GAFAnD,EAAKgD,aAAaH,GAAQK,EAEtBlE,EAAS8D,GAiBX,OAhBI7D,EAAS6D,EAAIhD,UACfoD,EAASpD,SAAWuB,EAAgByB,EAAIhD,UAC/BZ,EAAW4D,EAAIhD,UACxBoD,EAASpD,SAAWgD,EAAIhD,SAExB8C,EAAYC,EAAMC,QAGhB5D,EAAW4D,EAAIvB,WACjB2B,EAAS3B,UAAYuB,EAAIvB,UACfuB,EAAIvB,UAGdqB,EAAYC,EAAMC,GAFlBI,EAAS3B,UAAYD,KAQrBvC,EAAS+D,GACXH,EAAQ5F,KAAK8F,GAIfD,EAAYC,EAAMC,EA/BU,CAgC9B,IAMAH,EAAQjE,SAAQ,SAAU0E,GACnBpD,EAAKgD,aAAahD,EAAKiD,YAAYG,MAMxCpD,EAAKgD,aAAaI,GAAOtD,SACvBE,EAAKgD,aAAahD,EAAKiD,YAAYG,IAAQtD,SAC7CE,EAAKgD,aAAaI,GAAO7B,UACvBvB,EAAKgD,aAAahD,EAAKiD,YAAYG,IAAQ7B,UAC/C,IAKAvB,EAAKgD,aAAa,IAAM,CAAElD,SAAU,KAAMyB,UAAWD,KAKrD,IAAI+B,EAAQ1E,OAAOC,KAAKoB,EAAKgD,cACRM,QAAO,SAAUT,GAEhB,OAAOA,EAAKzO,OAAS,GAAK4L,EAAKgD,aAAaH,EAC9C,IACCU,IAAIpE,GACJ+C,KAAK,KAE1BlC,EAAKxK,GAAGgO,YAAgB3O,OAAO,oBAA2BW,EAAGiO,SAAW,MAAQJ,EAAQ,IAAK,KAC7FrD,EAAKxK,GAAGkO,cAAgB7O,OAAO,oBAA2BW,EAAGiO,SAAW,MAAQJ,EAAQ,IAAK,MAE7FrD,EAAKxK,GAAGmO,QAAU9O,OAChB,IAAMmL,EAAKxK,GAAGgO,YAAYrJ,OAAS,MAAQ6F,EAAKxK,GAAGiN,gBAAgBtI,OAAS,MAC5E,KAOF+G,EAAelB,EACjB,CAOA,SAAS4D,EAAM5D,EAAM6D,GACnB,IAAIC,EAAQ9D,EAAKmB,UACb4C,EAAQ/D,EAAKgE,eACbjE,EAAQC,EAAKoB,eAAexK,MAAMkN,EAAOC,GAO7CjK,KAAKmK,OAAYjE,EAAKkE,WAAWC,cAMjCrK,KAAK5F,MAAY4P,EAAQD,EAMzB/J,KAAKV,UAAY2K,EAAMF,EAMvB/J,KAAKE,IAAY+F,EAMjBjG,KAAKiG,KAAYA,EAMjBjG,KAAKsK,IAAYrE,CACnB,CAEA,SAASsE,EAAYrE,EAAM6D,GACzB,IAAIrM,EAAQ,IAAIoM,EAAM5D,EAAM6D,GAI5B,OAFA7D,EAAKgD,aAAaxL,EAAMyM,QAAQ1C,UAAU/J,EAAOwI,GAE1CxI,CACT,CAyCA,SAAS8M,EAAUC,EAASC,GAC1B,KAAM1K,gBAAgBwK,GACpB,OAAO,IAAIA,EAAUC,EAASC,GAG3BA,GACChF,EAAa+E,KACfC,EAAUD,EACVA,EAAU,CAAC,GAIfzK,KAAK2H,SAAqBnD,EAAO,CAAC,EAAGc,EAAgBoF,GAGrD1K,KAAKqH,WAAsB,EAC3BrH,KAAKkK,gBAAsB,EAC3BlK,KAAKoK,WAAqB,GAC1BpK,KAAKsH,eAAqB,GAE1BtH,KAAKmJ,YAAqB3E,EAAO,CAAC,EAAGuB,EAAgB0E,GACrDzK,KAAKkJ,aAAqB,CAAC,EAE3BlJ,KAAK6H,SAAqBX,EAC1BlH,KAAKkI,mBAAqB,EAE1BlI,KAAKtE,GAAK,CAAC,EAEXgM,EAAQ1H,KACV,CAUAwK,EAAUxP,UAAU2P,IAAM,SAAaR,EAAQS,GAG7C,OAFA5K,KAAKmJ,YAAYgB,GAAUS,EAC3BlD,EAAQ1H,MACDA,IACT,EASAwK,EAAUxP,UAAU6P,IAAM,SAAaH,GAErC,OADA1K,KAAK2H,SAAWnD,EAAOxE,KAAK2H,SAAU+C,GAC/B1K,IACT,EAQAwK,EAAUxP,UAAUwL,KAAO,SAAcP,GAKvC,GAHAjG,KAAKsH,eAAiBrB,EACtBjG,KAAKqH,WAAkB,GAElBpB,EAAK3L,OAAU,OAAO,EAE3B,IAAIiD,EAAGuN,EAAIC,EAAIC,EAAKjB,EAAOkB,EAAMvP,EAAIwP,EAASC,EAG9C,GAAInL,KAAKtE,GAAGgO,YAAYlD,KAAKP,GAAO,CAClCvK,EAAKsE,KAAKtE,GAAGkO,cACblO,EAAG4D,UAAY,EACf,MAA+B,QAAvB/B,EAAI7B,EAAGR,KAAK+K,IAElB,GADA+E,EAAMhL,KAAKoL,aAAanF,EAAM1I,EAAE,GAAI7B,EAAG4D,WACnC0L,EAAK,CACPhL,KAAKoK,WAAiB7M,EAAE,GACxByC,KAAKqH,UAAiB9J,EAAEnD,MAAQmD,EAAE,GAAGjD,OACrC0F,KAAKkK,eAAiB3M,EAAEnD,MAAQmD,EAAE,GAAGjD,OAAS0Q,EAC9C,KACF,CAEJ,CA2CA,OAzCIhL,KAAK2H,SAASpC,WAAavF,KAAKkJ,aAAa,WAE/CgC,EAAUjF,EAAKoF,OAAOrL,KAAKtE,GAAGiN,iBAC1BuC,GAAW,IAETlL,KAAKqH,UAAY,GAAK6D,EAAUlL,KAAKqH,YAC0D,QAA5FyD,EAAK7E,EAAKvI,MAAMsC,KAAK2H,SAASlC,QAAUzF,KAAKtE,GAAG6M,WAAavI,KAAKtE,GAAG+M,qBAExEsB,EAAQe,EAAG1Q,MAAQ0Q,EAAG,GAAGxQ,QAErB0F,KAAKqH,UAAY,GAAK0C,EAAQ/J,KAAKqH,aACrCrH,KAAKoK,WAAiB,GACtBpK,KAAKqH,UAAiB0C,EACtB/J,KAAKkK,eAAiBY,EAAG1Q,MAAQ0Q,EAAG,GAAGxQ,UAO7C0F,KAAK2H,SAASnC,YAAcxF,KAAKkJ,aAAa,aAEhDiC,EAASlF,EAAK/G,QAAQ,KAClBiM,GAAU,GAGmC,QAA1CJ,EAAK9E,EAAKvI,MAAMsC,KAAKtE,GAAG2M,gBAE3B0B,EAAQgB,EAAG3Q,MAAQ2Q,EAAG,GAAGzQ,OACzB2Q,EAAQF,EAAG3Q,MAAQ2Q,EAAG,GAAGzQ,QAErB0F,KAAKqH,UAAY,GAAK0C,EAAQ/J,KAAKqH,WAClC0C,IAAU/J,KAAKqH,WAAa4D,EAAOjL,KAAKkK,kBAC3ClK,KAAKoK,WAAiB,UACtBpK,KAAKqH,UAAiB0C,EACtB/J,KAAKkK,eAAiBe,KAMvBjL,KAAKqH,WAAa,CAC3B,EAUAmD,EAAUxP,UAAU6O,QAAU,SAAiB5D,GAC7C,OAAOjG,KAAKtE,GAAGmO,QAAQrD,KAAKP,EAC9B,EAYAuE,EAAUxP,UAAUoQ,aAAe,SAAsBnF,EAAMkE,EAAQzI,GAErE,OAAK1B,KAAKkJ,aAAaiB,EAAOE,eAGvBrK,KAAKkJ,aAAaiB,EAAOE,eAAerE,SAASC,EAAMvE,EAAK1B,MAF1D,CAGX,EAmBAwK,EAAUxP,UAAU0C,MAAQ,SAAeuI,GACzC,IAAI8D,EAAQ,EAAGzL,EAAS,GAGpB0B,KAAKqH,WAAa,GAAKrH,KAAKsH,iBAAmBrB,IACjD3H,EAAO2E,KAAKsH,EAAYvK,KAAM+J,IAC9BA,EAAQ/J,KAAKkK,gBAIf,IAAI/D,EAAO4D,EAAQ9D,EAAKnJ,MAAMiN,GAAS9D,EAGvC,MAAOjG,KAAKwG,KAAKL,GACf7H,EAAO2E,KAAKsH,EAAYvK,KAAM+J,IAE9B5D,EAAOA,EAAKrJ,MAAMkD,KAAKkK,gBACvBH,GAAS/J,KAAKkK,eAGhB,OAAI5L,EAAOhE,OACFgE,EAGF,IACT,EAkBAkM,EAAUxP,UAAU4M,KAAO,SAAc0D,EAAMC,GAG7C,OAFAD,EAAO3G,MAAM6G,QAAQF,GAAQA,EAAO,CAAEA,GAEjCC,GAOLvL,KAAK6H,SAAW7H,KAAK6H,SAAS7E,OAAOsI,GACJG,OACAjC,QAAO,SAAUkC,EAAIC,EAAKC,GACzB,OAAOF,IAAOE,EAAID,EAAM,EAC1B,IACCE,UAEjCnE,EAAQ1H,MACDA,OAdLA,KAAK6H,SAAWyD,EAAKxO,QACrBkD,KAAKkI,mBAAoB,EACzBR,EAAQ1H,MACDA,KAYX,EAOAwK,EAAUxP,UAAUyM,UAAY,SAAmB/J,GAK5CA,EAAMyM,SAAUzM,EAAM4M,IAAM,UAAY5M,EAAM4M,KAE9B,YAAjB5M,EAAMyM,QAAyB,YAAY3D,KAAK9I,EAAM4M,OACxD5M,EAAM4M,IAAM,UAAY5M,EAAM4M,IAElC,EAQAE,EAAUxP,UAAUiN,UAAY,WAChC,EAGAhO,EAAOC,QAAUsQ,C,8BCxnBjBvQ,EAAOC,QAAU,SAAU4R,GACzB,IAAIpQ,EAAK,CAAC,EAGVA,EAAGqQ,QAAU,eACbrQ,EAAGsQ,OAAU,eACbtQ,EAAGuQ,MAAU,eACbvQ,EAAGwQ,MAAU,eAGbxQ,EAAGiO,SAAW,CAAEjO,EAAGuQ,MAAOvQ,EAAGwQ,MAAOxQ,EAAGsQ,QAAS5D,KAAK,KAGrD1M,EAAGyQ,QAAU,CAAEzQ,EAAGuQ,MAAOvQ,EAAGsQ,QAAS5D,KAAK,KAI1C,IAAIgE,EAAkB,QA+JtB,OA1JA1Q,EAAG2Q,kBAA0B,SAAWD,EAAkB,IAAM1Q,EAAGiO,SAAW,IAAMjO,EAAGqQ,QAAU,IAMjGrQ,EAAG4Q,QAED,yFAGF5Q,EAAG2K,SAAc,YAAc3K,EAAGyQ,QAAU,uBAE5CzQ,EAAGkL,SAED,kFAEFlL,EAAGmL,oBAED,QAAUuF,EAAkB,IAAM1Q,EAAGiO,SAAW,6BAA+BjO,EAAGiO,SAAW,KAE/FjO,EAAG6K,SAED,iBAGc7K,EAAGyQ,QAAU,IAAMC,EAHjC,qCAIoB1Q,EAAGyQ,QAJvB,wBAKoBzQ,EAAGyQ,QALvB,wBAMoBzQ,EAAGyQ,QANvB,wBAOoBzQ,EAAGyQ,QAPvB,yBAQoBzQ,EAAGyQ,QARvB,qBASiBzQ,EAAG2Q,kBATpB,sCAkBiB3Q,EAAGyQ,QAAU,WACvBL,GAAQA,EAAK,OACZ,6BAEA,SAEF,OAASpQ,EAAGyQ,QAxBlB,UAyBezQ,EAAGyQ,QAzBlB,aA0BkBzQ,EAAGyQ,QA1BrB,gBA2BiBzQ,EAAGyQ,QA3BpB,iBAkCFzQ,EAAGqL,eAED,iEAEFrL,EAAGyM,OAED,wBAKFzM,EAAGiL,gBAGD,MACEjL,EAAGyM,OACH,IACAzM,EAAG2Q,kBAHL,UAMF3Q,EAAGgL,WAED,MACEhL,EAAGyM,OADL,OAGUzM,EAAG2Q,kBAHb,QAKU3Q,EAAG2Q,kBAAoB,QAAU3Q,EAAG2Q,kBAAoB,UAAY3Q,EAAG2Q,kBALjF,KAQF3Q,EAAG6Q,SAED,eAIgB7Q,EAAGgL,WAAa,SAAWhL,EAAGgL,WAJ9C,KAOFhL,EAAG8Q,eAED,MACE9Q,EAAG4Q,QADL,aAGgB5Q,EAAGgL,WAHnB,qBAMFhL,EAAG+Q,qBAED,YAAc/Q,EAAGgL,WAAa,oBAEhChL,EAAGsL,gBAEDtL,EAAG6Q,SAAW7Q,EAAGmL,oBAEnBnL,EAAGgR,sBAEDhR,EAAG8Q,eAAiB9Q,EAAGmL,oBAEzBnL,EAAG4K,qBAED5K,EAAG6Q,SAAW7Q,EAAGkL,SAAWlL,EAAGmL,oBAEjCnL,EAAGiR,2BAEDjR,EAAG8Q,eAAiB9Q,EAAGkL,SAAWlL,EAAGmL,oBAEvCnL,EAAGkR,iCAEDlR,EAAG+Q,qBAAuB/Q,EAAGkL,SAAWlL,EAAGmL,oBAO7CnL,EAAGkN,oBAED,sDAAwDlN,EAAGiO,SAAW,SAExEjO,EAAG4M,gBAEC,MAAQ8D,EAAkB,UAAY1Q,EAAGyQ,QAAzC,KACMzQ,EAAGqL,eAAiB,IAAMrL,EAAGgR,sBAAwB,IAE/DhR,EAAG8M,eAGC,mCAA0C9M,EAAGiO,SAA7C,qBAC0BjO,EAAGiR,2BAA6BjR,EAAG6K,SAAW,IAE5E7K,EAAGgN,qBAGC,mCAA0ChN,EAAGiO,SAA7C,qBAC0BjO,EAAGkR,iCAAmClR,EAAG6K,SAAW,IAE3E7K,CACT,C,8BCjLAzB,EAAOC,QAAU,EAAjB,K,8BCEAD,EAAOC,QAAU,EAAjB,K,uBCCAD,EAAOC,QAAU,CACf,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,SACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,K,wBChEF,IAAI2S,EAAgB,6BAEhBC,EAAgB,yBAChBC,EAAgB,UAChBC,EAAgB,UAEhBC,EAAc,MAAQH,EAAW,IAAMC,EAAgB,IAAMC,EAAgB,IAE7EE,EAAc,UAAYL,EAAY,eAAiBI,EAAa,MAEpEE,EAAc,2BAA6BD,EAAY,aAEvDE,EAAc,mCACdC,EAAc,oDACdC,EAAc,qBACdC,EAAc,qBACdC,EAAc,iCAEdC,EAAc,IAAI1S,OAAO,OAASoS,EAAW,IAAMC,EAAY,IAAMC,EACjD,IAAMC,EAAa,IAAMC,EAAc,IAAMC,EAAQ,KACzEE,EAAyB,IAAI3S,OAAO,OAASoS,EAAW,IAAMC,EAAY,KAE9EnT,EAAOC,QAAQ,EAAcuT,EAC7BxT,EAAOC,QAAQ,EAAyBwT,C,8BCtBxC,SAAS1I,EAAOP,GAAO,OAAOI,OAAO7J,UAAUuD,SAASR,KAAK0G,EAAM,CAEnE,SAASQ,EAASR,GAAO,MAAuB,oBAAhBO,EAAOP,EAA4B,CAEnE,IAAIkJ,EAAkB9I,OAAO7J,UAAU8K,eAEvC,SAAS8H,EAAI9N,EAAQiF,GACnB,OAAO4I,EAAgB5P,KAAK+B,EAAQiF,EACtC,CAIA,SAASP,EAAOC,GACd,IAAIC,EAAUC,MAAM3J,UAAU8B,MAAMiB,KAAK4C,UAAW,GAcpD,OAZA+D,EAAQE,SAAQ,SAAUvE,GACxB,GAAKA,EAAL,CAEA,GAAsB,kBAAXA,EACT,MAAM,IAAIjC,UAAUiC,EAAS,kBAG/BwE,OAAOC,KAAKzE,GAAQuE,SAAQ,SAAUG,GACpCN,EAAIM,GAAO1E,EAAO0E,EACpB,GARuB,CASzB,IAEON,CACT,CAIA,SAASoJ,EAAeC,EAAKpM,EAAKqM,GAChC,MAAO,GAAG/K,OAAO8K,EAAIhR,MAAM,EAAG4E,GAAMqM,EAAaD,EAAIhR,MAAM4E,EAAM,GACnE,CAIA,SAASsM,EAAkBC,GAGzB,QAAIA,GAAK,OAAUA,GAAK,WAEpBA,GAAK,OAAUA,GAAK,SACH,SAAZ,MAAJA,IAA2C,SAAZ,MAAJA,OAE5BA,GAAK,GAAQA,GAAK,KACZ,KAANA,MACAA,GAAK,IAAQA,GAAK,QAClBA,GAAK,KAAQA,GAAK,QAElBA,EAAI,cAEV,CAEA,SAASC,EAAcD,GAErB,GAAIA,EAAI,MAAQ,CACdA,GAAK,MACL,IAAIE,EAAa,OAAUF,GAAK,IAC5BG,EAAa,OAAc,KAAJH,GAE3B,OAAOzR,OAAO6R,aAAaF,EAAYC,EACzC,CACA,OAAO5R,OAAO6R,aAAaJ,EAC7B,CAGA,IAAIK,EAAkB,8CAClBC,EAAkB,6BAClBC,EAAkB,IAAIzT,OAAOuT,EAAejO,OAAS,IAAMkO,EAAUlO,OAAQ,MAE7EoO,EAAyB,qCAEzBC,EAAW,EAAQ,MAEvB,SAASC,EAAqBjR,EAAOqL,GACnC,IAAI6F,EAAO,EAEX,OAAIhB,EAAIc,EAAU3F,GACT2F,EAAS3F,GAGS,KAAvBA,EAAKzH,WAAW,IAAsBmN,EAAuBjI,KAAKuC,KACpE6F,EAAiC,MAA1B7F,EAAK,GAAGsB,cACbwE,SAAS9F,EAAKjM,MAAM,GAAI,IAAM+R,SAAS9F,EAAKjM,MAAM,GAAI,IAEpDkR,EAAkBY,IACbV,EAAcU,GAIlBlR,CACT,CAQA,SAASoR,EAAW7S,GAClB,OAAIA,EAAIiD,QAAQ,MAAQ,EAAYjD,EAC7BA,EAAIW,QAAQ0R,EAAgB,KACrC,CAEA,SAASS,EAAY9S,GACnB,OAAIA,EAAIiD,QAAQ,MAAQ,GAAKjD,EAAIiD,QAAQ,KAAO,EAAYjD,EAErDA,EAAIW,QAAQ4R,GAAiB,SAAU9Q,EAAOsR,EAASC,GAC5D,OAAID,GACGL,EAAqBjR,EAAOuR,EACrC,GACF,CAIA,IAAIC,EAAsB,SACtBC,EAAyB,UACzBC,EAAoB,CACtB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,UAGP,SAASC,EAAkB1R,GACzB,OAAOyR,EAAkBzR,EAC3B,CAEA,SAAS2R,EAAWrT,GAClB,OAAIiT,EAAoB1I,KAAKvK,GACpBA,EAAIW,QAAQuS,EAAwBE,GAEtCpT,CACT,CAIA,IAAIsT,EAAmB,uBAEvB,SAASlK,EAASpJ,GAChB,OAAOA,EAAIW,QAAQ2S,EAAkB,OACvC,CAIA,SAASC,EAAQZ,GACf,OAAQA,GACN,KAAK,EACL,KAAK,GACH,OAAO,EAEX,OAAO,CACT,CAGA,SAASa,EAAab,GACpB,GAAIA,GAAQ,MAAUA,GAAQ,KAAU,OAAO,EAC/C,OAAQA,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACH,OAAO,EAEX,OAAO,CACT,CAKA,IAAIc,EAAmB,EAAQ,MAG/B,SAASC,EAAYhS,GACnB,OAAO+R,EAAiBlJ,KAAK7I,EAC/B,CAUA,SAASiS,EAAejS,GACtB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,EACT,QACE,OAAO,EAEb,CAIA,SAASkS,EAAmB5T,GA+C1B,OA5CAA,EAAMA,EAAI6T,OAAOlT,QAAQ,OAAQ,KAQP,MAAtB,IAAIyN,gBACNpO,EAAMA,EAAIW,QAAQ,KAAM,MAmCnBX,EAAIoO,cAAc0F,aAC3B,CAQA7V,EAAQ8V,IAAsB,CAAC,EAC/B9V,EAAQ8V,IAAIC,MAAZ,QACA/V,EAAQ8V,IAAIE,QAAZ,QAEAhW,EAAQsK,OAAsBA,EAC9BtK,EAAQ+K,SAAsBA,EAC9B/K,EAAQ0T,IAAsBA,EAC9B1T,EAAQ4U,WAAsBA,EAC9B5U,EAAQ6U,YAAsBA,EAC9B7U,EAAQ8T,kBAAsBA,EAC9B9T,EAAQgU,cAAsBA,EAE9BhU,EAAQoV,WAAsBA,EAC9BpV,EAAQ2T,eAAsBA,EAC9B3T,EAAQsV,QAAsBA,EAC9BtV,EAAQuV,aAAsBA,EAC9BvV,EAAQ0V,eAAsBA,EAC9B1V,EAAQyV,YAAsBA,EAC9BzV,EAAQmL,SAAsBA,EAC9BnL,EAAQ2V,mBAAsBA,C,8BCxT9B3V,EAAQiW,eAAR,QACAjW,EAAQkW,qBAAuB,EAA/B,MACAlW,EAAQmW,eAAR,O,8BCDA,IAAItB,EAAc,oBAGlB9U,EAAOC,QAAU,SAA8B+B,EAAKyF,EAAKoB,GACvD,IAAI8L,EAAM0B,EACNC,EAAQ,EACRvG,EAAQtI,EACRpD,EAAS,CACPkS,IAAI,EACJ9O,IAAK,EACL6O,MAAO,EACPtU,IAAK,IAGX,GAA4B,KAAxBA,EAAIqF,WAAWI,GAAuB,CACxCA,IACA,MAAOA,EAAMoB,EAAK,CAEhB,GADA8L,EAAO3S,EAAIqF,WAAWI,GACT,KAATkN,EAA0B,OAAOtQ,EACrC,GAAa,KAATsQ,EAAyB,OAAOtQ,EACpC,GAAa,KAATsQ,EAIF,OAHAtQ,EAAOoD,IAAMA,EAAM,EACnBpD,EAAOrC,IAAM8S,EAAY9S,EAAIa,MAAMkN,EAAQ,EAAGtI,IAC9CpD,EAAOkS,IAAK,EACLlS,EAEI,KAATsQ,GAAyBlN,EAAM,EAAIoB,EACrCpB,GAAO,EAITA,GACF,CAGA,OAAOpD,CACT,CAIAgS,EAAQ,EACR,MAAO5O,EAAMoB,EAAK,CAGhB,GAFA8L,EAAO3S,EAAIqF,WAAWI,GAET,KAATkN,EAAiB,MAGrB,GAAIA,EAAO,IAAiB,MAATA,EAAiB,MAEpC,GAAa,KAATA,GAAyBlN,EAAM,EAAIoB,EAAvC,CACE,GAAgC,KAA5B7G,EAAIqF,WAAWI,EAAM,GAAe,MACxCA,GAAO,CAET,KAJA,CAMA,GAAa,KAATkN,IACF0B,IACIA,EAAQ,IAAM,OAAOhS,EAG3B,GAAa,KAATsQ,EAAuB,CACzB,GAAc,IAAV0B,EAAe,MACnBA,GACF,CAEA5O,GAZA,CAaF,CAEA,OAAIsI,IAAUtI,GACA,IAAV4O,IAEJhS,EAAOrC,IAAM8S,EAAY9S,EAAIa,MAAMkN,EAAOtI,IAC1CpD,EAAOiS,MAAQA,EACfjS,EAAOoD,IAAMA,EACbpD,EAAOkS,IAAK,GANgBlS,CAQ9B,C,wBC1EArE,EAAOC,QAAU,SAAwB+F,EAAO+J,EAAOyG,GACrD,IAAIH,EAAOI,EAAOC,EAAQC,EACtBC,GAAY,EACZ/N,EAAM7C,EAAM6Q,OACZC,EAAS9Q,EAAMyB,IAEnBzB,EAAMyB,IAAMsI,EAAQ,EACpBsG,EAAQ,EAER,MAAOrQ,EAAMyB,IAAMoB,EAAK,CAEtB,GADA6N,EAAS1Q,EAAM6N,IAAIxM,WAAWrB,EAAMyB,KACrB,KAAXiP,IACFL,IACc,IAAVA,GAAa,CACfI,GAAQ,EACR,KACF,CAKF,GAFAE,EAAU3Q,EAAMyB,IAChBzB,EAAM+Q,GAAGC,OAAOC,UAAUjR,GACX,KAAX0Q,EACF,GAAIC,IAAY3Q,EAAMyB,IAAM,EAE1B4O,SACK,GAAIG,EAET,OADAxQ,EAAMyB,IAAMqP,GACJ,CAGd,CASA,OAPIL,IACFG,EAAW5Q,EAAMyB,KAInBzB,EAAMyB,IAAMqP,EAELF,CACT,C,8BC1CA,IAAI9B,EAAc,oBAGlB9U,EAAOC,QAAU,SAAwB+B,EAAKyF,EAAKoB,GACjD,IAAI8L,EACA+B,EACAJ,EAAQ,EACRvG,EAAQtI,EACRpD,EAAS,CACPkS,IAAI,EACJ9O,IAAK,EACL6O,MAAO,EACPtU,IAAK,IAGX,GAAIyF,GAAOoB,EAAO,OAAOxE,EAIzB,GAFAqS,EAAS1U,EAAIqF,WAAWI,GAET,KAAXiP,GAAsC,KAAXA,GAAsC,KAAXA,EAA2B,OAAOrS,EAE5FoD,IAGe,KAAXiP,IAAmBA,EAAS,IAEhC,MAAOjP,EAAMoB,EAAK,CAEhB,GADA8L,EAAO3S,EAAIqF,WAAWI,GAClBkN,IAAS+B,EAKX,OAJArS,EAAOoD,IAAMA,EAAM,EACnBpD,EAAOiS,MAAQA,EACfjS,EAAOrC,IAAM8S,EAAY9S,EAAIa,MAAMkN,EAAQ,EAAGtI,IAC9CpD,EAAOkS,IAAK,EACLlS,EACF,GAAa,KAATsQ,GAAoC,KAAX+B,EAClC,OAAOrS,EACW,KAATsQ,EACT2B,IACkB,KAAT3B,GAAyBlN,EAAM,EAAIoB,IAC5CpB,IAC4B,KAAxBzF,EAAIqF,WAAWI,IACjB6O,KAIJ7O,GACF,CAEA,OAAOpD,CACT,C,8BCjDA,IAAI6S,EAAe,EAAQ,MACvBC,EAAe,EAAQ,MACvBC,EAAe,EAAQ,MACvBC,EAAe,EAAQ,MACvBC,EAAe,EAAQ,MACvBC,EAAe,EAAQ,MACvBhH,EAAe,EAAQ,MACvByF,EAAe,EAAQ,MACvBwB,EAAe,EAAQ,MAGvBC,EAAS,CACXC,QAAS,EAAQ,MACjBC,KAAM,EAAQ,KACdC,WAAY,EAAQ,OAYlBC,EAAe,oCACfC,EAAe,oCAEnB,SAASC,EAAa1H,GAEpB,IAAIrO,EAAMqO,EAAIwF,OAAOzF,cAErB,OAAOyH,EAAatL,KAAKvK,MAAQ8V,EAAavL,KAAKvK,EACrD,CAKA,IAAIgW,EAAsB,CAAE,QAAS,SAAU,WAE/C,SAASC,EAAc5H,GACrB,IAAI6H,EAASlC,EAAMmC,MAAM9H,GAAK,GAE9B,GAAI6H,EAAOE,YAOJF,EAAOG,UAAYL,EAAoB/S,QAAQiT,EAAOG,WAAa,GACtE,IACEH,EAAOE,SAAWZ,EAASc,QAAQJ,EAAOE,SAC5C,CAAE,MAAOG,GAAW,CAIxB,OAAOvC,EAAMwC,OAAOxC,EAAMyC,OAAOP,GACnC,CAEA,SAASQ,EAAkBrI,GACzB,IAAI6H,EAASlC,EAAMmC,MAAM9H,GAAK,GAE9B,GAAI6H,EAAOE,YAOJF,EAAOG,UAAYL,EAAoB/S,QAAQiT,EAAOG,WAAa,GACtE,IACEH,EAAOE,SAAWZ,EAASmB,UAAUT,EAAOE,SAC9C,CAAE,MAAOG,GAAW,CAKxB,OAAOvC,EAAM4C,OAAO5C,EAAMyC,OAAOP,GAASlC,EAAM4C,OAAOC,aAAe,IACxE,CAwIA,SAASC,EAAWC,EAAYtI,GAC9B,KAAM1K,gBAAgB+S,GACpB,OAAO,IAAIA,EAAWC,EAAYtI,GAG/BA,GACEyG,EAAMlM,SAAS+N,KAClBtI,EAAUsI,GAAc,CAAC,EACzBA,EAAa,WAWjBhT,KAAKiR,OAAS,IAAIO,EASlBxR,KAAKiT,MAAQ,IAAI1B,EASjBvR,KAAKkT,KAAO,IAAI5B,EAuBhBtR,KAAKmT,SAAW,IAAI9B,EASpBrR,KAAKoT,QAAU,IAAI5I,EAiBnBxK,KAAKgS,aAAeA,EAQpBhS,KAAKkS,cAAgBA,EAOrBlS,KAAK2S,kBAAoBA,EAWzB3S,KAAKmR,MAAQA,EAQbnR,KAAKoR,QAAUD,EAAM3M,OAAO,CAAC,EAAG4M,GAGhCpR,KAAK0K,QAAU,CAAC,EAChB1K,KAAKqT,UAAUL,GAEXtI,GAAW1K,KAAK6K,IAAIH,EAC1B,CAsBAqI,EAAW/X,UAAU6P,IAAM,SAAUH,GAEnC,OADAyG,EAAM3M,OAAOxE,KAAK0K,QAASA,GACpB1K,IACT,EAaA+S,EAAW/X,UAAUqY,UAAY,SAAUC,GACzC,IAAiBN,EAAb9M,EAAOlG,KAEX,GAAImR,EAAMlM,SAASqO,KACjBN,EAAaM,EACbA,EAAU5B,EAAOsB,IACZM,GAAW,MAAM,IAAIrK,MAAM,+BAAiC+J,EAAa,iBAGhF,IAAKM,EAAW,MAAM,IAAIrK,MAAM,8CAchC,OAZIqK,EAAQ5I,SAAWxE,EAAK2E,IAAIyI,EAAQ5I,SAEpC4I,EAAQC,YACV1O,OAAOC,KAAKwO,EAAQC,YAAY3O,SAAQ,SAAUmE,GAC5CuK,EAAQC,WAAWxK,GAAMyK,OAC3BtN,EAAK6C,GAAM0K,MAAMC,WAAWJ,EAAQC,WAAWxK,GAAMyK,OAEnDF,EAAQC,WAAWxK,GAAM4K,QAC3BzN,EAAK6C,GAAM6K,OAAOF,WAAWJ,EAAQC,WAAWxK,GAAM4K,OAE1D,IAEK3T,IACT,EAoBA+S,EAAW/X,UAAU6Y,OAAS,SAAUvI,EAAMwI,GAC5C,IAAIxV,EAAS,GAERqG,MAAM6G,QAAQF,KAASA,EAAO,CAAEA,IAErC,CAAE,OAAQ,QAAS,UAAW1G,SAAQ,SAAUmP,GAC9CzV,EAASA,EAAO0E,OAAOhD,KAAK+T,GAAON,MAAMI,OAAOvI,GAAM,GACxD,GAAGtL,MAEH1B,EAASA,EAAO0E,OAAOhD,KAAKiR,OAAO2C,OAAOC,OAAOvI,GAAM,IAEvD,IAAI0I,EAAS1I,EAAK9B,QAAO,SAAUT,GAAQ,OAAOzK,EAAOY,QAAQ6J,GAAQ,CAAG,IAE5E,GAAIiL,EAAO1Z,SAAWwZ,EACpB,MAAM,IAAI7K,MAAM,iDAAmD+K,GAGrE,OAAOhU,IACT,EAUA+S,EAAW/X,UAAUiZ,QAAU,SAAU3I,EAAMwI,GAC7C,IAAIxV,EAAS,GAERqG,MAAM6G,QAAQF,KAASA,EAAO,CAAEA,IAErC,CAAE,OAAQ,QAAS,UAAW1G,SAAQ,SAAUmP,GAC9CzV,EAASA,EAAO0E,OAAOhD,KAAK+T,GAAON,MAAMQ,QAAQ3I,GAAM,GACzD,GAAGtL,MAEH1B,EAASA,EAAO0E,OAAOhD,KAAKiR,OAAO2C,OAAOK,QAAQ3I,GAAM,IAExD,IAAI0I,EAAS1I,EAAK9B,QAAO,SAAUT,GAAQ,OAAOzK,EAAOY,QAAQ6J,GAAQ,CAAG,IAE5E,GAAIiL,EAAO1Z,SAAWwZ,EACpB,MAAM,IAAI7K,MAAM,kDAAoD+K,GAEtE,OAAOhU,IACT,EAmBA+S,EAAW/X,UAAUkZ,IAAM,SAAUC,GACnC,IAAIC,EAAO,CAAEpU,MAAOgD,OAAO2B,MAAM3J,UAAU8B,MAAMiB,KAAK4C,UAAW,IAEjE,OADAwT,EAAO9R,MAAM8R,EAAQC,GACdpU,IACT,EAkBA+S,EAAW/X,UAAUoX,MAAQ,SAAUtE,EAAKuG,GAC1C,GAAmB,kBAARvG,EACT,MAAM,IAAI7E,MAAM,iCAGlB,IAAIhJ,EAAQ,IAAID,KAAKkT,KAAKoB,MAAMxG,EAAK9N,KAAMqU,GAI3C,OAFArU,KAAKkT,KAAKqB,QAAQtU,GAEXA,EAAMuU,MACf,EAcAzB,EAAW/X,UAAUyZ,OAAS,SAAU3G,EAAKuG,GAG3C,OAFAA,EAAMA,GAAO,CAAC,EAEPrU,KAAKmT,SAASsB,OAAOzU,KAAKoS,MAAMtE,EAAKuG,GAAMrU,KAAK0K,QAAS2J,EAClE,EAYAtB,EAAW/X,UAAU0Z,YAAc,SAAU5G,EAAKuG,GAChD,IAAIpU,EAAQ,IAAID,KAAKkT,KAAKoB,MAAMxG,EAAK9N,KAAMqU,GAK3C,OAHApU,EAAM0U,YAAa,EACnB3U,KAAKkT,KAAKqB,QAAQtU,GAEXA,EAAMuU,MACf,EAWAzB,EAAW/X,UAAU4Z,aAAe,SAAU9G,EAAKuG,GAGjD,OAFAA,EAAMA,GAAO,CAAC,EAEPrU,KAAKmT,SAASsB,OAAOzU,KAAK0U,YAAY5G,EAAKuG,GAAMrU,KAAK0K,QAAS2J,EACxE,EAGApa,EAAOC,QAAU6Y,C,8BC7jBjB,IAAI8B,EAAkB,EAAQ,MAG1BC,EAAS,CAGX,CAAE,QAAc,EAAQ,MAA6B,CAAE,YAAa,cACpE,CAAE,OAAc,EAAQ,OACxB,CAAE,QAAc,EAAQ,MAA6B,CAAE,YAAa,YAAa,aAAc,SAC/F,CAAE,aAAc,EAAQ,MAA6B,CAAE,YAAa,YAAa,aAAc,SAC/F,CAAE,KAAc,EAAQ,MAA6B,CAAE,YAAa,YAAa,aAAc,SAC/F,CAAE,OAAc,EAAQ,MAA6B,CAAE,YAAa,YAAa,eACjF,CAAE,YAAc,EAAQ,OACxB,CAAE,aAAc,EAAQ,MAA6B,CAAE,YAAa,YAAa,eACjF,CAAE,UAAc,EAAQ,MAA6B,CAAE,YAAa,YAAa,eACjF,CAAE,WAAc,EAAQ,OACxB,CAAE,YAAc,EAAQ,QAO1B,SAASvD,IAMPvR,KAAKyT,MAAQ,IAAIoB,EAEjB,IAAK,IAAIhV,EAAI,EAAGA,EAAIiV,EAAOxa,OAAQuF,IACjCG,KAAKyT,MAAMxQ,KAAK6R,EAAOjV,GAAG,GAAIiV,EAAOjV,GAAG,GAAI,CAAEkV,KAAMD,EAAOjV,GAAG,IAAM,IAAI/C,SAE5E,CAKAyU,EAAYvW,UAAUga,SAAW,SAAU/U,EAAOgV,EAAWC,GAC3D,IAAI1E,EAAI3Q,EACJ2T,EAAQxT,KAAKyT,MAAM0B,SAAS,IAC5BnK,EAAMwI,EAAMlZ,OACZ8a,EAAOH,EACPI,GAAgB,EAChBC,EAAarV,EAAM+Q,GAAGtG,QAAQ4K,WAElC,MAAOF,EAAOF,EAAS,CAErB,GADAjV,EAAMmV,KAAOA,EAAOnV,EAAMsV,eAAeH,GACrCA,GAAQF,EAAW,MAIvB,GAAIjV,EAAMuV,OAAOJ,GAAQnV,EAAMwV,UAAa,MAI5C,GAAIxV,EAAMqQ,OAASgF,EAAY,CAC7BrV,EAAMmV,KAAOF,EACb,KACF,CASA,IAAKrV,EAAI,EAAGA,EAAImL,EAAKnL,IAEnB,GADA2Q,EAAKgD,EAAM3T,GAAGI,EAAOmV,EAAMF,GAAS,GAChC1E,EAAM,MAKZvQ,EAAMyV,OAASL,EAGXpV,EAAM0V,QAAQ1V,EAAMmV,KAAO,KAC7BC,GAAgB,GAGlBD,EAAOnV,EAAMmV,KAETA,EAAOF,GAAWjV,EAAM0V,QAAQP,KAClCC,GAAgB,EAChBD,IACAnV,EAAMmV,KAAOA,EAEjB,CACF,EAQA7D,EAAYvW,UAAUoX,MAAQ,SAAUtE,EAAKkD,EAAIqD,EAAKuB,GACpD,IAAI3V,EAEC6N,IAEL7N,EAAQ,IAAID,KAAKsU,MAAMxG,EAAKkD,EAAIqD,EAAKuB,GAErC5V,KAAKgV,SAAS/U,EAAOA,EAAMmV,KAAMnV,EAAM4V,SACzC,EAGAtE,EAAYvW,UAAUsZ,MAAQ,EAAQ,MAGtCra,EAAOC,QAAUqX,C,8BChHjB,IAAIsD,EAAS,EAAQ,MAGjBC,EAAS,CACX,CAAE,YAAkB,EAAQ,OAC5B,CAAE,QAAkB,EAAQ,MAC5B,CAAE,SAAkB,EAAQ,OAC5B,CAAE,UAAkB,EAAQ,OAC5B,CAAE,eAAkB,EAAQ,OAC5B,CAAE,cAAkB,EAAQ,QAO9B,SAASgB,IAMP9V,KAAKyT,MAAQ,IAAIoB,EAEjB,IAAK,IAAIhV,EAAI,EAAGA,EAAIiV,EAAOxa,OAAQuF,IACjCG,KAAKyT,MAAMxQ,KAAK6R,EAAOjV,GAAG,GAAIiV,EAAOjV,GAAG,GAE5C,CAQAiW,EAAK9a,UAAUuZ,QAAU,SAAUtU,GACjC,IAAIJ,EAAGkW,EAAGvC,EAIV,IAFAA,EAAQxT,KAAKyT,MAAM0B,SAAS,IAEvBtV,EAAI,EAAGkW,EAAIvC,EAAMlZ,OAAQuF,EAAIkW,EAAGlW,IACnC2T,EAAM3T,GAAGI,EAEb,EAEA6V,EAAK9a,UAAUsZ,MAAQ,EAAQ,MAG/Bra,EAAOC,QAAU4b,C,8BCjDjB,IAAIjB,EAAkB,EAAQ,MAM1BC,EAAS,CACX,CAAE,OAAmB,EAAQ,OAC7B,CAAE,UAAmB,EAAQ,OAC7B,CAAE,SAAmB,EAAQ,OAC7B,CAAE,YAAmB,EAAQ,OAC7B,CAAE,gBAAmB,WACrB,CAAE,WAAmB,WACrB,CAAE,OAAmB,EAAQ,OAC7B,CAAE,QAAmB,EAAQ,OAC7B,CAAE,WAAmB,EAAQ,OAC7B,CAAE,cAAmB,EAAQ,MAC7B,CAAE,SAAmB,EAAQ,QAG3BkB,EAAU,CACZ,CAAE,gBAAmB,EAAQ,OAC7B,CAAE,gBAAmB,WACrB,CAAE,WAAmB,WACrB,CAAE,gBAAmB,EAAQ,QAO/B,SAASxE,IACP,IAAI3R,EASJ,IAFAG,KAAKyT,MAAQ,IAAIoB,EAEZhV,EAAI,EAAGA,EAAIiV,EAAOxa,OAAQuF,IAC7BG,KAAKyT,MAAMxQ,KAAK6R,EAAOjV,GAAG,GAAIiV,EAAOjV,GAAG,IAW1C,IAFAG,KAAK4T,OAAS,IAAIiB,EAEbhV,EAAI,EAAGA,EAAImW,EAAQ1b,OAAQuF,IAC9BG,KAAK4T,OAAO3Q,KAAK+S,EAAQnW,GAAG,GAAImW,EAAQnW,GAAG,GAE/C,CAMA2R,EAAaxW,UAAUkW,UAAY,SAAUjR,GAC3C,IAAIuQ,EAAI3Q,EAAG6B,EAAMzB,EAAMyB,IACnB8R,EAAQxT,KAAKyT,MAAM0B,SAAS,IAC5BnK,EAAMwI,EAAMlZ,OACZgb,EAAarV,EAAM+Q,GAAGtG,QAAQ4K,WAC9BW,EAAQhW,EAAMgW,MAGlB,GAA0B,qBAAfA,EAAMvU,GAAjB,CAKA,GAAIzB,EAAMqQ,MAAQgF,GAChB,IAAKzV,EAAI,EAAGA,EAAImL,EAAKnL,IASnB,GAJAI,EAAMqQ,QACNE,EAAKgD,EAAM3T,GAAGI,GAAO,GACrBA,EAAMqQ,QAEFE,EAAM,WAcZvQ,EAAMyB,IAAMzB,EAAM6Q,OAGfN,GAAMvQ,EAAMyB,MACjBuU,EAAMvU,GAAOzB,EAAMyB,GA9BnB,MAFEzB,EAAMyB,IAAMuU,EAAMvU,EAiCtB,EAKA8P,EAAaxW,UAAUga,SAAW,SAAU/U,GAC1C,IAAIuQ,EAAI3Q,EACJ2T,EAAQxT,KAAKyT,MAAM0B,SAAS,IAC5BnK,EAAMwI,EAAMlZ,OACZ2P,EAAMhK,EAAM6Q,OACZwE,EAAarV,EAAM+Q,GAAGtG,QAAQ4K,WAElC,MAAOrV,EAAMyB,IAAMuI,EAAK,CAQtB,GAAIhK,EAAMqQ,MAAQgF,EAChB,IAAKzV,EAAI,EAAGA,EAAImL,EAAKnL,IAEnB,GADA2Q,EAAKgD,EAAM3T,GAAGI,GAAO,GACjBuQ,EAAM,MAId,GAAIA,GACF,GAAIvQ,EAAMyB,KAAOuI,EAAO,WAI1BhK,EAAMiW,SAAWjW,EAAM6N,IAAI7N,EAAMyB,MACnC,CAEIzB,EAAMiW,SACRjW,EAAMkW,aAEV,EAQA3E,EAAaxW,UAAUoX,MAAQ,SAAUnW,EAAK+U,EAAIqD,EAAKuB,GACrD,IAAI/V,EAAG2T,EAAOxI,EACV/K,EAAQ,IAAID,KAAKsU,MAAMrY,EAAK+U,EAAIqD,EAAKuB,GAOzC,IALA5V,KAAKgV,SAAS/U,GAEduT,EAAQxT,KAAK4T,OAAOuB,SAAS,IAC7BnK,EAAMwI,EAAMlZ,OAEPuF,EAAI,EAAGA,EAAImL,EAAKnL,IACnB2T,EAAM3T,GAAGI,EAEb,EAGAuR,EAAaxW,UAAUsZ,MAAQ,EAAQ,KAGvCra,EAAOC,QAAUsX,C,wBC3KjBvX,EAAOC,QAAU,CACfwQ,QAAS,CACP0L,MAAc,EACdC,UAAc,EACdC,QAAc,EACdC,WAAc,YACdnD,SAAc,EAGdoD,aAAc,EAOdC,OAAQ,OAQRC,UAAW,KAEXpB,WAAc,IAGhB/B,WAAY,CAEVL,KAAM,CACJM,MAAO,CACL,YACA,QACA,WAIJP,MAAO,CACLO,MAAO,CACL,aACA,OACA,QACA,UACA,KACA,aACA,WACA,OACA,YACA,cAIJvC,OAAQ,CACNuC,MAAO,CACL,WACA,YACA,WACA,SACA,SACA,cACA,QACA,OACA,UACA,QAEFG,OAAQ,CACN,gBACA,WACA,mB,wBCtER1Z,EAAOC,QAAU,CACfwQ,QAAS,CACP0L,MAAc,EACdC,UAAc,EACdC,QAAc,EACdC,WAAc,YACdnD,SAAc,EAGdoD,aAAc,EAOdC,OAAQ,OAQRC,UAAW,KAEXpB,WAAc,KAGhB/B,WAAY,CAEVL,KAAM,CAAC,EACPD,MAAO,CAAC,EACRhC,OAAQ,CAAC,G,uBChCbhX,EAAOC,QAAU,CACfwQ,QAAS,CACP0L,MAAc,EACdC,UAAc,EACdC,QAAc,EACdC,WAAc,YACdnD,SAAc,EAGdoD,aAAc,EAOdC,OAAQ,OAQRC,UAAW,KAEXpB,WAAc,IAGhB/B,WAAY,CAEVL,KAAM,CACJM,MAAO,CACL,YACA,QACA,WAIJP,MAAO,CACLO,MAAO,CACL,cAIJvC,OAAQ,CACNuC,MAAO,CACL,QAEFG,OAAQ,CACN,gBACA,mB,8BC/CR,IAAInP,EAAkB,eAClBuK,EAAkB,oBAClBO,EAAkB,mBAKlBqH,EAAgB,CAAC,EAoHrB,SAAStF,IA8BPrR,KAAKwT,MAAQhP,EAAO,CAAC,EAAGmS,EAC1B,CAhJAA,EAAcC,YAAc,SAAUpC,EAAQ7I,EAAKjB,EAAS2J,EAAKwC,GAC/D,IAAIC,EAAQtC,EAAO7I,GAEnB,MAAQ,QAAUkL,EAAIE,YAAYD,GAAS,IACnCxH,EAAWkF,EAAO7I,GAAKqL,SACvB,SACV,EAGAL,EAAcM,WAAa,SAAUzC,EAAQ7I,EAAKjB,EAAS2J,EAAKwC,GAC9D,IAAIC,EAAQtC,EAAO7I,GAEnB,MAAQ,OAASkL,EAAIE,YAAYD,GAAS,UAClCxH,EAAWkF,EAAO7I,GAAKqL,SACvB,iBACV,EAGAL,EAAcO,MAAQ,SAAU1C,EAAQ7I,EAAKjB,EAAS2J,EAAKwC,GACzD,IAIIM,EAAatX,EAAG+L,EAAKwL,EAAUC,EAJ/BP,EAAQtC,EAAO7I,GACf2L,EAAOR,EAAMQ,KAAOvI,EAAY+H,EAAMQ,MAAMxH,OAAS,GACrDyH,EAAW,GACXC,EAAY,GAehB,OAZIF,IACF1L,EAAM0L,EAAKnQ,MAAM,UACjBoQ,EAAW3L,EAAI,GACf4L,EAAY5L,EAAI9O,MAAM,GAAGsL,KAAK,KAI9B+O,EADEzM,EAAQgM,WACIhM,EAAQgM,UAAUI,EAAME,QAASO,EAAUC,IAE3ClI,EAAWwH,EAAME,SAGG,IAAhCG,EAAYjY,QAAQ,QACfiY,EAAc,KAMnBG,GACFzX,EAAWiX,EAAMW,UAAU,SAC3BL,EAAWN,EAAMY,MAAQZ,EAAMY,MAAM5a,QAAU,GAE3C+C,EAAI,EACNuX,EAASnU,KAAK,CAAE,QAASyH,EAAQ6L,WAAagB,KAE9CH,EAASvX,GAAKuX,EAASvX,GAAG/C,QAC1Bsa,EAASvX,GAAG,IAAM,IAAM6K,EAAQ6L,WAAagB,GAI/CF,EAAW,CACTK,MAAON,GAGD,aAAeP,EAAIE,YAAYM,GAAY,IAC3CF,EACA,mBAIF,aAAeN,EAAIE,YAAYD,GAAS,IACxCK,EACA,iBACV,EAGAR,EAAcgB,MAAQ,SAAUnD,EAAQ7I,EAAKjB,EAAS2J,EAAKwC,GACzD,IAAIC,EAAQtC,EAAO7I,GAUnB,OAHAmL,EAAMY,MAAMZ,EAAMW,UAAU,QAAQ,GAClCZ,EAAIe,mBAAmBd,EAAMe,SAAUnN,EAAS2J,GAE3CwC,EAAIiB,YAAYtD,EAAQ7I,EAAKjB,EACtC,EAGAiM,EAAcoB,UAAY,SAAUvD,EAAQ7I,EAAKjB,GAC/C,OAAOA,EAAQ2L,SAAW,WAAa,QACzC,EACAM,EAAcqB,UAAY,SAAUxD,EAAQ7I,EAAKjB,GAC/C,OAAOA,EAAQ4L,OAAU5L,EAAQ2L,SAAW,WAAa,SAAY,IACvE,EAGAM,EAAc1Q,KAAO,SAAUuO,EAAQ7I,GACrC,OAAO2D,EAAWkF,EAAO7I,GAAKqL,QAChC,EAGAL,EAAcsB,WAAa,SAAUzD,EAAQ7I,GAC3C,OAAO6I,EAAO7I,GAAKqL,OACrB,EACAL,EAAcuB,YAAc,SAAU1D,EAAQ7I,GAC5C,OAAO6I,EAAO7I,GAAKqL,OACrB,EA+CA3F,EAASrW,UAAU+b,YAAc,SAAqBD,GACpD,IAAIjX,EAAGkW,EAAGzX,EAEV,IAAKwY,EAAMY,MAAS,MAAO,GAI3B,IAFApZ,EAAS,GAEJuB,EAAI,EAAGkW,EAAIe,EAAMY,MAAMpd,OAAQuF,EAAIkW,EAAGlW,IACzCvB,GAAU,IAAMgR,EAAWwH,EAAMY,MAAM7X,GAAG,IAAM,KAAOyP,EAAWwH,EAAMY,MAAM7X,GAAG,IAAM,IAGzF,OAAOvB,CACT,EAYA+S,EAASrW,UAAU8c,YAAc,SAAqBtD,EAAQ7I,EAAKjB,GACjE,IAAIyN,EACA7Z,EAAS,GACT8Z,GAAS,EACTtB,EAAQtC,EAAO7I,GAGnB,OAAImL,EAAMuB,OACD,IAULvB,EAAM7D,QAA4B,IAAnB6D,EAAMwB,SAAkB3M,GAAO6I,EAAO7I,EAAM,GAAG0M,SAChE/Z,GAAU,MAIZA,KAA8B,IAAnBwY,EAAMwB,QAAiB,KAAO,KAAOxB,EAAMyB,IAGtDja,GAAU0B,KAAK+W,YAAYD,GAGL,IAAlBA,EAAMwB,SAAiB5N,EAAQ2L,WACjC/X,GAAU,MAIRwY,EAAM7D,QACRmF,GAAS,EAEa,IAAlBtB,EAAMwB,SACJ3M,EAAM,EAAI6I,EAAOla,SACnB6d,EAAY3D,EAAO7I,EAAM,IAEF,WAAnBwM,EAAUK,MAAqBL,EAAUE,SAKX,IAAvBF,EAAUG,SAAkBH,EAAUI,MAAQzB,EAAMyB,OAF7DH,GAAS,KAWjB9Z,GAAU8Z,EAAS,MAAQ,IAEpB9Z,EACT,EAWA+S,EAASrW,UAAU4Z,aAAe,SAAUJ,EAAQ9J,EAAS2J,GAK3D,IAJA,IAAImE,EACAla,EAAS,GACTkV,EAAQxT,KAAKwT,MAER3T,EAAI,EAAGmL,EAAMwJ,EAAOla,OAAQuF,EAAImL,EAAKnL,IAC5C2Y,EAAOhE,EAAO3U,GAAG2Y,KAEU,qBAAhBhF,EAAMgF,GACfla,GAAUkV,EAAMgF,GAAMhE,EAAQ3U,EAAG6K,EAAS2J,EAAKrU,MAE/C1B,GAAU0B,KAAK8X,YAAYtD,EAAQ3U,EAAG6K,GAI1C,OAAOpM,CACT,EAaA+S,EAASrW,UAAU4c,mBAAqB,SAAUpD,EAAQ9J,EAAS2J,GAGjE,IAFA,IAAI/V,EAAS,GAEJuB,EAAI,EAAGmL,EAAMwJ,EAAOla,OAAQuF,EAAImL,EAAKnL,IACrB,SAAnB2U,EAAO3U,GAAG2Y,KACZla,GAAUkW,EAAO3U,GAAGmX,QACQ,UAAnBxC,EAAO3U,GAAG2Y,KACnBla,GAAU0B,KAAK4X,mBAAmBpD,EAAO3U,GAAGgY,SAAUnN,EAAS2J,GACnC,cAAnBG,EAAO3U,GAAG2Y,OACnBla,GAAU,MAId,OAAOA,CACT,EAYA+S,EAASrW,UAAUyZ,OAAS,SAAUD,EAAQ9J,EAAS2J,GACrD,IAAIxU,EAAGmL,EAAKwN,EACRla,EAAS,GACTkV,EAAQxT,KAAKwT,MAEjB,IAAK3T,EAAI,EAAGmL,EAAMwJ,EAAOla,OAAQuF,EAAImL,EAAKnL,IACxC2Y,EAAOhE,EAAO3U,GAAG2Y,KAEJ,WAATA,EACFla,GAAU0B,KAAK4U,aAAaJ,EAAO3U,GAAGgY,SAAUnN,EAAS2J,GACzB,qBAAhBb,EAAMgF,GACtBla,GAAUkV,EAAMgB,EAAO3U,GAAG2Y,MAAMhE,EAAQ3U,EAAG6K,EAAS2J,EAAKrU,MAEzD1B,GAAU0B,KAAK8X,YAAYtD,EAAQ3U,EAAG6K,EAAS2J,GAInD,OAAO/V,CACT,EAEArE,EAAOC,QAAUmX,C,wBC7TjB,SAASwD,IAUP7U,KAAKyY,UAAY,GAOjBzY,KAAK0Y,UAAY,IACnB,CAQA7D,EAAM7Z,UAAU2d,SAAW,SAAU5P,GACnC,IAAK,IAAIlJ,EAAI,EAAGA,EAAIG,KAAKyY,UAAUne,OAAQuF,IACzC,GAAIG,KAAKyY,UAAU5Y,GAAGkJ,OAASA,EAC7B,OAAOlJ,EAGX,OAAQ,CACV,EAKAgV,EAAM7Z,UAAU4d,YAAc,WAC5B,IAAI1S,EAAOlG,KACP6Y,EAAS,CAAE,IAGf3S,EAAKuS,UAAU7T,SAAQ,SAAUkU,GAC1BA,EAAKC,SAEVD,EAAK/D,IAAInQ,SAAQ,SAAUoU,GACrBH,EAAO3Z,QAAQ8Z,GAAW,GAC5BH,EAAO5V,KAAK+V,EAEhB,GACF,IAEA9S,EAAKwS,UAAY,CAAC,EAElBG,EAAOjU,SAAQ,SAAUmP,GACvB7N,EAAKwS,UAAU3E,GAAS,GACxB7N,EAAKuS,UAAU7T,SAAQ,SAAUkU,GAC1BA,EAAKC,UAENhF,GAAS+E,EAAK/D,IAAI7V,QAAQ6U,GAAS,GAEvC7N,EAAKwS,UAAU3E,GAAO9Q,KAAK6V,EAAKG,IAClC,GACF,GACF,EA4BApE,EAAM7Z,UAAUke,GAAK,SAAUnQ,EAAMkQ,EAAIvO,GACvC,IAAItQ,EAAQ4F,KAAK2Y,SAAS5P,GACtBoQ,EAAMzO,GAAW,CAAC,EAEtB,IAAe,IAAXtQ,EAAgB,MAAM,IAAI6O,MAAM,0BAA4BF,GAEhE/I,KAAKyY,UAAUre,GAAO6e,GAAKA,EAC3BjZ,KAAKyY,UAAUre,GAAO2a,IAAMoE,EAAIpE,KAAO,GACvC/U,KAAK0Y,UAAY,IACnB,EA2BA7D,EAAM7Z,UAAUoe,OAAS,SAAUC,EAAYC,EAAUL,EAAIvO,GAC3D,IAAItQ,EAAQ4F,KAAK2Y,SAASU,GACtBF,EAAMzO,GAAW,CAAC,EAEtB,IAAe,IAAXtQ,EAAgB,MAAM,IAAI6O,MAAM,0BAA4BoQ,GAEhErZ,KAAKyY,UAAUc,OAAOnf,EAAO,EAAG,CAC9B2O,KAAMuQ,EACNP,SAAS,EACTE,GAAIA,EACJlE,IAAKoE,EAAIpE,KAAO,KAGlB/U,KAAK0Y,UAAY,IACnB,EA2BA7D,EAAM7Z,UAAUwe,MAAQ,SAAUC,EAAWH,EAAUL,EAAIvO,GACzD,IAAItQ,EAAQ4F,KAAK2Y,SAASc,GACtBN,EAAMzO,GAAW,CAAC,EAEtB,IAAe,IAAXtQ,EAAgB,MAAM,IAAI6O,MAAM,0BAA4BwQ,GAEhEzZ,KAAKyY,UAAUc,OAAOnf,EAAQ,EAAG,EAAG,CAClC2O,KAAMuQ,EACNP,SAAS,EACTE,GAAIA,EACJlE,IAAKoE,EAAIpE,KAAO,KAGlB/U,KAAK0Y,UAAY,IACnB,EAyBA7D,EAAM7Z,UAAUiI,KAAO,SAAUqW,EAAUL,EAAIvO,GAC7C,IAAIyO,EAAMzO,GAAW,CAAC,EAEtB1K,KAAKyY,UAAUxV,KAAK,CAClB8F,KAAMuQ,EACNP,SAAS,EACTE,GAAIA,EACJlE,IAAKoE,EAAIpE,KAAO,KAGlB/U,KAAK0Y,UAAY,IACnB,EAeA7D,EAAM7Z,UAAU6Y,OAAS,SAAUvI,EAAMwI,GAClCnP,MAAM6G,QAAQF,KAASA,EAAO,CAAEA,IAErC,IAAIhN,EAAS,GAeb,OAZAgN,EAAK1G,SAAQ,SAAUmE,GACrB,IAAI4C,EAAM3L,KAAK2Y,SAAS5P,GAExB,GAAI4C,EAAM,EAAG,CACX,GAAImI,EAAiB,OACrB,MAAM,IAAI7K,MAAM,oCAAsCF,EACxD,CACA/I,KAAKyY,UAAU9M,GAAKoN,SAAU,EAC9Bza,EAAO2E,KAAK8F,EACd,GAAG/I,MAEHA,KAAK0Y,UAAY,KACVpa,CACT,EAaAuW,EAAM7Z,UAAU0Y,WAAa,SAAUpI,EAAMwI,GACtCnP,MAAM6G,QAAQF,KAASA,EAAO,CAAEA,IAErCtL,KAAKyY,UAAU7T,SAAQ,SAAUkU,GAAQA,EAAKC,SAAU,CAAO,IAE/D/Y,KAAK6T,OAAOvI,EAAMwI,EACpB,EAeAe,EAAM7Z,UAAUiZ,QAAU,SAAU3I,EAAMwI,GACnCnP,MAAM6G,QAAQF,KAASA,EAAO,CAAEA,IAErC,IAAIhN,EAAS,GAeb,OAZAgN,EAAK1G,SAAQ,SAAUmE,GACrB,IAAI4C,EAAM3L,KAAK2Y,SAAS5P,GAExB,GAAI4C,EAAM,EAAG,CACX,GAAImI,EAAiB,OACrB,MAAM,IAAI7K,MAAM,oCAAsCF,EACxD,CACA/I,KAAKyY,UAAU9M,GAAKoN,SAAU,EAC9Bza,EAAO2E,KAAK8F,EACd,GAAG/I,MAEHA,KAAK0Y,UAAY,KACVpa,CACT,EAYAuW,EAAM7Z,UAAUma,SAAW,SAAUuE,GAMnC,OALuB,OAAnB1Z,KAAK0Y,WACP1Y,KAAK4Y,cAIA5Y,KAAK0Y,UAAUgB,IAAc,EACtC,EAEAzf,EAAOC,QAAU2a,C,8BC3VjB,IAAIrF,EAAU,gBAGdvV,EAAOC,QAAU,SAAoB+F,EAAOgV,EAAWC,EAASyE,GAC9D,IAAIC,EACAjc,EACAkC,EACAga,EACA9D,EACA+D,EACAvJ,EACAwJ,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA3D,EACA4D,EACAC,EAAa1a,EAAM4V,QACnBnU,EAAMzB,EAAM2a,OAAO3F,GAAahV,EAAM4a,OAAO5F,GAC7CnS,EAAM7C,EAAM6a,OAAO7F,GAGvB,GAAIhV,EAAMuV,OAAOP,GAAahV,EAAMwV,WAAa,EAAK,OAAO,EAG7D,GAAoC,KAAhCxV,EAAM6N,IAAIxM,WAAWI,KAA0B,OAAO,EAI1D,GAAIiY,EAAU,OAAO,EAGrBE,EAAUG,EAAS/Z,EAAMuV,OAAOP,GAAa,EAGX,KAA9BhV,EAAM6N,IAAIxM,WAAWI,IAGvBA,IACAmY,IACAG,IACAJ,GAAY,EACZW,GAAmB,GACoB,IAA9Bta,EAAM6N,IAAIxM,WAAWI,IAC9B6Y,GAAmB,GAEdta,EAAM8a,QAAQ9F,GAAa+E,GAAU,IAAM,GAG9CtY,IACAmY,IACAG,IACAJ,GAAY,GAKZA,GAAY,GAGdW,GAAmB,EAGrBN,EAAY,CAAEha,EAAM2a,OAAO3F,IAC3BhV,EAAM2a,OAAO3F,GAAavT,EAE1B,MAAOA,EAAMoB,EAAK,CAGhB,GAFAnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,IAEtB8N,EAAQ7R,GAOV,MANW,IAAPA,EACFqc,GAAU,GAAKA,EAAS/Z,EAAM8a,QAAQ9F,IAAc2E,EAAY,EAAI,IAAM,EAE1EI,IAMJtY,GACF,CAoCA,IAlCAwY,EAAa,CAAEja,EAAM8a,QAAQ9F,IAC7BhV,EAAM8a,QAAQ9F,GAAahV,EAAMuV,OAAOP,GAAa,GAAKsF,EAAmB,EAAI,GAEjFT,EAAgBpY,GAAOoB,EAEvBuX,EAAY,CAAEpa,EAAMuV,OAAOP,IAC3BhV,EAAMuV,OAAOP,GAAa+E,EAASH,EAEnCS,EAAY,CAAEra,EAAM4a,OAAO5F,IAC3BhV,EAAM4a,OAAO5F,GAAavT,EAAMzB,EAAM2a,OAAO3F,GAE7CwF,EAAkBxa,EAAM+Q,GAAGiC,MAAMQ,MAAM0B,SAAS,cAEhDiF,EAAgBna,EAAM+a,WACtB/a,EAAM+a,WAAa,aAoBdjB,EAAW9E,EAAY,EAAG8E,EAAW7E,EAAS6E,IAAY,CAc7D,GALAW,EAAcza,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,UAE7C/T,EAAMzB,EAAM2a,OAAOb,GAAY9Z,EAAM4a,OAAOd,GAC5CjX,EAAM7C,EAAM6a,OAAOf,GAEfrY,GAAOoB,EAET,MAGF,GAAoC,KAAhC7C,EAAM6N,IAAIxM,WAAWI,MAA2BgZ,EAApD,CAoEA,GAAIZ,EAAiB,MAIrB,IADAU,GAAY,EACP3a,EAAI,EAAGkW,EAAI0E,EAAgBngB,OAAQuF,EAAIkW,EAAGlW,IAC7C,GAAI4a,EAAgB5a,GAAGI,EAAO8Z,EAAU7E,GAAS,GAAO,CACtDsF,GAAY,EACZ,KACF,CAGF,GAAIA,EAAW,CAKbva,EAAM4V,QAAUkE,EAEQ,IAApB9Z,EAAMwV,YAIRwE,EAAUhX,KAAKhD,EAAM2a,OAAOb,IAC5BG,EAAWjX,KAAKhD,EAAM8a,QAAQhB,IAC9BO,EAAUrX,KAAKhD,EAAM4a,OAAOd,IAC5BM,EAAUpX,KAAKhD,EAAMuV,OAAOuE,IAC5B9Z,EAAMuV,OAAOuE,IAAa9Z,EAAMwV,WAGlC,KACF,CAEAwE,EAAUhX,KAAKhD,EAAM2a,OAAOb,IAC5BG,EAAWjX,KAAKhD,EAAM8a,QAAQhB,IAC9BO,EAAUrX,KAAKhD,EAAM4a,OAAOd,IAC5BM,EAAUpX,KAAKhD,EAAMuV,OAAOuE,IAI5B9Z,EAAMuV,OAAOuE,IAAa,CA1C1B,KAjEA,CAIEF,EAAUG,EAAS/Z,EAAMuV,OAAOuE,GAAY,EAGV,KAA9B9Z,EAAM6N,IAAIxM,WAAWI,IAGvBA,IACAmY,IACAG,IACAJ,GAAY,EACZW,GAAmB,GACoB,IAA9Bta,EAAM6N,IAAIxM,WAAWI,IAC9B6Y,GAAmB,GAEdta,EAAM8a,QAAQhB,GAAYC,GAAU,IAAM,GAG7CtY,IACAmY,IACAG,IACAJ,GAAY,GAKZA,GAAY,GAGdW,GAAmB,EAGrBN,EAAUhX,KAAKhD,EAAM2a,OAAOb,IAC5B9Z,EAAM2a,OAAOb,GAAYrY,EAEzB,MAAOA,EAAMoB,EAAK,CAGhB,GAFAnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,IAEtB8N,EAAQ7R,GAOV,MANW,IAAPA,EACFqc,GAAU,GAAKA,EAAS/Z,EAAM8a,QAAQhB,IAAaH,EAAY,EAAI,IAAM,EAEzEI,IAMJtY,GACF,CAEAoY,EAAgBpY,GAAOoB,EAEvBoX,EAAWjX,KAAKhD,EAAM8a,QAAQhB,IAC9B9Z,EAAM8a,QAAQhB,GAAY9Z,EAAMuV,OAAOuE,GAAY,GAAKQ,EAAmB,EAAI,GAE/EF,EAAUpX,KAAKhD,EAAMuV,OAAOuE,IAC5B9Z,EAAMuV,OAAOuE,GAAYC,EAASH,EAElCS,EAAUrX,KAAKhD,EAAM4a,OAAOd,IAC5B9Z,EAAM4a,OAAOd,GAAYrY,EAAMzB,EAAM2a,OAAOb,EAE9C,CA2CF,CAoBA,IAlBAI,EAAYla,EAAMwV,UAClBxV,EAAMwV,UAAY,EAElBqB,EAAe7W,EAAMgD,KAAK,kBAAmB,aAAc,GAC3D6T,EAAMmE,OAAS,IACfnE,EAAMrN,IAAS8G,EAAQ,CAAE0E,EAAW,GAEpChV,EAAM+Q,GAAGiC,MAAM+B,SAAS/U,EAAOgV,EAAW8E,GAE1CjD,EAAe7W,EAAMgD,KAAK,mBAAoB,cAAe,GAC7D6T,EAAMmE,OAAS,IAEfhb,EAAM4V,QAAU8E,EAChB1a,EAAM+a,WAAaZ,EACnB7J,EAAM,GAAKtQ,EAAMmV,KAIZvV,EAAI,EAAGA,EAAIya,EAAUhgB,OAAQuF,IAChCI,EAAM2a,OAAO/a,EAAIoV,GAAagF,EAAUpa,GACxCI,EAAM4a,OAAOhb,EAAIoV,GAAaqF,EAAUza,GACxCI,EAAMuV,OAAO3V,EAAIoV,GAAaoF,EAAUxa,GACxCI,EAAM8a,QAAQlb,EAAIoV,GAAaiF,EAAWra,GAI5C,OAFAI,EAAMwV,UAAY0E,GAEX,CACT,C,wBCtRAlgB,EAAOC,QAAU,SAAc+F,EAAOgV,EAAWC,GAC/C,IAAI6E,EAAUmB,EAAMpE,EAEpB,GAAI7W,EAAMuV,OAAOP,GAAahV,EAAMwV,UAAY,EAAK,OAAO,EAE5DyF,EAAOnB,EAAW9E,EAAY,EAE9B,MAAO8E,EAAW7E,EAChB,GAAIjV,EAAM0V,QAAQoE,GAChBA,QADF,CAKA,KAAI9Z,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,WAAa,GAKhD,MAJEsE,IACAmB,EAAOnB,CAJT,CAgBF,OANA9Z,EAAMmV,KAAO8F,EAEbpE,EAAgB7W,EAAMgD,KAAK,aAAc,OAAQ,GACjD6T,EAAME,QAAU/W,EAAMkb,SAASlG,EAAWiG,EAAM,EAAIjb,EAAMwV,WAAW,GAAS,KAC9EqB,EAAMrN,IAAU,CAAEwL,EAAWhV,EAAMmV,OAE5B,CACT,C,wBC5BAnb,EAAOC,QAAU,SAAe+F,EAAOgV,EAAWC,EAASyE,GACzD,IAAIhJ,EAAQ3F,EAAKoQ,EAAQrB,EAAUsB,EAAKvE,EAAOmE,EAC3CK,GAAgB,EAChB5Z,EAAMzB,EAAM2a,OAAO3F,GAAahV,EAAM4a,OAAO5F,GAC7CnS,EAAM7C,EAAM6a,OAAO7F,GAGvB,GAAIhV,EAAMuV,OAAOP,GAAahV,EAAMwV,WAAa,EAAK,OAAO,EAE7D,GAAI/T,EAAM,EAAIoB,EAAO,OAAO,EAI5B,GAFA6N,EAAS1Q,EAAM6N,IAAIxM,WAAWI,GAEf,MAAXiP,GAAqC,KAAXA,EAC5B,OAAO,EAST,GALA0K,EAAM3Z,EACNA,EAAMzB,EAAMsb,UAAU7Z,EAAKiP,GAE3B3F,EAAMtJ,EAAM2Z,EAERrQ,EAAM,EAAK,OAAO,EAKtB,GAHAiQ,EAAShb,EAAM6N,IAAIhR,MAAMue,EAAK3Z,GAC9B0Z,EAASnb,EAAM6N,IAAIhR,MAAM4E,EAAKoB,GAEf,KAAX6N,GACEyK,EAAOlc,QAAQ1C,OAAO6R,aAAasC,KAAY,EACjD,OAAO,EAKX,GAAIgJ,EAAU,OAAO,EAKrB,IAFAI,EAAW9E,IAEF,CAEP,GADA8E,IACIA,GAAY7E,EAGd,MAMF,GAHAxT,EAAM2Z,EAAMpb,EAAM2a,OAAOb,GAAY9Z,EAAM4a,OAAOd,GAClDjX,EAAM7C,EAAM6a,OAAOf,GAEfrY,EAAMoB,GAAO7C,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,UAI9C,MAGF,GAAIxV,EAAM6N,IAAIxM,WAAWI,KAASiP,MAE9B1Q,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,WAAa,KAKhD/T,EAAMzB,EAAMsb,UAAU7Z,EAAKiP,KAGvBjP,EAAM2Z,EAAMrQ,KAGhBtJ,EAAMzB,EAAMub,WAAW9Z,KAEnBA,EAAMoB,MAAV,CAEAwY,GAAgB,EAEhB,KAJ2B,CAK7B,CAaA,OAVAtQ,EAAM/K,EAAMuV,OAAOP,GAEnBhV,EAAMmV,KAAO2E,GAAYuB,EAAgB,EAAI,GAE7CxE,EAAgB7W,EAAMgD,KAAK,QAAS,OAAQ,GAC5C6T,EAAMQ,KAAU8D,EAChBtE,EAAME,QAAU/W,EAAMkb,SAASlG,EAAY,EAAG8E,EAAU/O,GAAK,GAC7D8L,EAAMmE,OAAUA,EAChBnE,EAAMrN,IAAU,CAAEwL,EAAWhV,EAAMmV,OAE5B,CACT,C,8BC7FA,IAAI5F,EAAU,gBAGdvV,EAAOC,QAAU,SAAiB+F,EAAOgV,EAAWC,EAASyE,GAC3D,IAAIhc,EAAI2S,EAAOmL,EAAK3E,EAChBpV,EAAMzB,EAAM2a,OAAO3F,GAAahV,EAAM4a,OAAO5F,GAC7CnS,EAAM7C,EAAM6a,OAAO7F,GAGvB,GAAIhV,EAAMuV,OAAOP,GAAahV,EAAMwV,WAAa,EAAK,OAAO,EAI7D,GAFA9X,EAAMsC,EAAM6N,IAAIxM,WAAWI,GAEhB,KAAP/D,GAAsB+D,GAAOoB,EAAO,OAAO,EAG/CwN,EAAQ,EACR3S,EAAKsC,EAAM6N,IAAIxM,aAAaI,GAC5B,MAAc,KAAP/D,GAAsB+D,EAAMoB,GAAOwN,GAAS,EACjDA,IACA3S,EAAKsC,EAAM6N,IAAIxM,aAAaI,GAG9B,QAAI4O,EAAQ,GAAM5O,EAAMoB,IAAQ0M,EAAQ7R,MAEpCgc,IAIJ7W,EAAM7C,EAAMyb,eAAe5Y,EAAKpB,GAChC+Z,EAAMxb,EAAM0b,cAAc7Y,EAAK,GAAMpB,GACjC+Z,EAAM/Z,GAAO8N,EAAQvP,EAAM6N,IAAIxM,WAAWma,EAAM,MAClD3Y,EAAM2Y,GAGRxb,EAAMmV,KAAOH,EAAY,EAEzB6B,EAAe7W,EAAMgD,KAAK,eAAgB,IAAMzG,OAAO8T,GAAQ,GAC/DwG,EAAMmE,OAAS,WAAWne,MAAM,EAAGwT,GACnCwG,EAAMrN,IAAS,CAAEwL,EAAWhV,EAAMmV,MAElC0B,EAAiB7W,EAAMgD,KAAK,SAAU,GAAI,GAC1C6T,EAAME,QAAW/W,EAAM6N,IAAIhR,MAAM4E,EAAKoB,GAAKgN,OAC3CgH,EAAMrN,IAAW,CAAEwL,EAAWhV,EAAMmV,MACpC0B,EAAMe,SAAW,GAEjBf,EAAe7W,EAAMgD,KAAK,gBAAiB,IAAMzG,OAAO8T,IAAS,GACjEwG,EAAMmE,OAAS,WAAWne,MAAM,EAAGwT,KAtBd,EAyBvB,C,8BClDA,IAAId,EAAU,gBAGdvV,EAAOC,QAAU,SAAY+F,EAAOgV,EAAWC,EAASyE,GACtD,IAAIhJ,EAAQiL,EAAKje,EAAImZ,EACjBpV,EAAMzB,EAAM2a,OAAO3F,GAAahV,EAAM4a,OAAO5F,GAC7CnS,EAAM7C,EAAM6a,OAAO7F,GAGvB,GAAIhV,EAAMuV,OAAOP,GAAahV,EAAMwV,WAAa,EAAK,OAAO,EAK7D,GAHA9E,EAAS1Q,EAAM6N,IAAIxM,WAAWI,KAGf,KAAXiP,GACW,KAAXA,GACW,KAAXA,EACF,OAAO,EAKTiL,EAAM,EACN,MAAOla,EAAMoB,EAAK,CAEhB,GADAnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,KACtB/D,IAAOgT,IAAWnB,EAAQ7R,GAAO,OAAO,EACxCA,IAAOgT,GAAUiL,GACvB,CAEA,QAAIA,EAAM,KAENjC,IAEJ1Z,EAAMmV,KAAOH,EAAY,EAEzB6B,EAAe7W,EAAMgD,KAAK,KAAM,KAAM,GACtC6T,EAAMrN,IAAS,CAAEwL,EAAWhV,EAAMmV,MAClC0B,EAAMmE,OAAStW,MAAMiX,EAAM,GAAGxT,KAAK5L,OAAO6R,aAAasC,MANlC,EASvB,C,8BCvCA,IAAIkL,EAAc,EAAQ,KACtBnO,EAAyB,UAKzBoO,EAAiB,CACnB,CAAE,6CAA8C,oCAAoC,GACpF,CAAE,QAAgB,OAAS,GAC3B,CAAE,OAAgB,OAAS,GAC3B,CAAE,WAAgB,KAAS,GAC3B,CAAE,eAAgB,SAAS,GAC3B,CAAE,IAAI/gB,OAAO,QAAU8gB,EAAYzT,KAAK,KAAO,mBAAoB,KAAM,MAAM,GAC/E,CAAE,IAAIrN,OAAO2S,EAAuBrN,OAAS,SAAW,MAAM,IAIhEpG,EAAOC,QAAU,SAAoB+F,EAAOgV,EAAWC,EAASyE,GAC9D,IAAI9Z,EAAGka,EAAUjD,EAAOiF,EACpBra,EAAMzB,EAAM2a,OAAO3F,GAAahV,EAAM4a,OAAO5F,GAC7CnS,EAAM7C,EAAM6a,OAAO7F,GAGvB,GAAIhV,EAAMuV,OAAOP,GAAahV,EAAMwV,WAAa,EAAK,OAAO,EAE7D,IAAKxV,EAAM+Q,GAAGtG,QAAQ0L,KAAQ,OAAO,EAErC,GAAkC,KAA9BnW,EAAM6N,IAAIxM,WAAWI,GAAwB,OAAO,EAIxD,IAFAqa,EAAW9b,EAAM6N,IAAIhR,MAAM4E,EAAKoB,GAE3BjD,EAAI,EAAGA,EAAIic,EAAexhB,OAAQuF,IACrC,GAAIic,EAAejc,GAAG,GAAG2G,KAAKuV,GAAa,MAG7C,GAAIlc,IAAMic,EAAexhB,OAAU,OAAO,EAE1C,GAAIqf,EAEF,OAAOmC,EAAejc,GAAG,GAO3B,GAJAka,EAAW9E,EAAY,GAIlB6G,EAAejc,GAAG,GAAG2G,KAAKuV,GAC7B,KAAOhC,EAAW7E,EAAS6E,IAAY,CACrC,GAAI9Z,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,UAAa,MAMhD,GAJA/T,EAAMzB,EAAM2a,OAAOb,GAAY9Z,EAAM4a,OAAOd,GAC5CjX,EAAM7C,EAAM6a,OAAOf,GACnBgC,EAAW9b,EAAM6N,IAAIhR,MAAM4E,EAAKoB,GAE5BgZ,EAAejc,GAAG,GAAG2G,KAAKuV,GAAW,CACf,IAApBA,EAASzhB,QAAgByf,IAC7B,KACF,CACF,CASF,OANA9Z,EAAMmV,KAAO2E,EAEbjD,EAAgB7W,EAAMgD,KAAK,aAAc,GAAI,GAC7C6T,EAAMrN,IAAU,CAAEwL,EAAW8E,GAC7BjD,EAAME,QAAU/W,EAAMkb,SAASlG,EAAW8E,EAAU9Z,EAAMwV,WAAW,IAE9D,CACT,C,wBCpEAxb,EAAOC,QAAU,SAAkB+F,EAAOgV,EAAWC,GACnD,IAAI8B,EAASwD,EAAW3a,EAAGkW,EAAGe,EAAOpV,EAAKoB,EAAKwN,EAAOK,EACxByJ,EAA1BL,EAAW9E,EAAY,EACvBwF,EAAkBxa,EAAM+Q,GAAGiC,MAAMQ,MAAM0B,SAAS,aAGpD,GAAIlV,EAAMuV,OAAOP,GAAahV,EAAMwV,WAAa,EAAK,OAAO,EAM7D,IAJA2E,EAAgBna,EAAM+a,WACtB/a,EAAM+a,WAAa,YAGZjB,EAAW7E,IAAYjV,EAAM0V,QAAQoE,GAAWA,IAGrD,KAAI9Z,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,UAAY,GAA/C,CAKA,GAAIxV,EAAMuV,OAAOuE,IAAa9Z,EAAMwV,YAClC/T,EAAMzB,EAAM2a,OAAOb,GAAY9Z,EAAM4a,OAAOd,GAC5CjX,EAAM7C,EAAM6a,OAAOf,GAEfrY,EAAMoB,IACR6N,EAAS1Q,EAAM6N,IAAIxM,WAAWI,IAEf,KAAXiP,GAAqC,KAAXA,KAC5BjP,EAAMzB,EAAMsb,UAAU7Z,EAAKiP,GAC3BjP,EAAMzB,EAAMub,WAAW9Z,GAEnBA,GAAOoB,KAAK,CACdwN,EAAoB,KAAXK,EAAyB,EAAI,EACtC,KACF,CAMN,KAAI1Q,EAAMuV,OAAOuE,GAAY,GAA7B,CAIA,IADAS,GAAY,EACP3a,EAAI,EAAGkW,EAAI0E,EAAgBngB,OAAQuF,EAAIkW,EAAGlW,IAC7C,GAAI4a,EAAgB5a,GAAGI,EAAO8Z,EAAU7E,GAAS,GAAO,CACtDsF,GAAY,EACZ,KACF,CAEF,GAAIA,EAAa,KAV2B,CAzBkB,CAsChE,QAAKlK,IAKL0G,EAAU/W,EAAMkb,SAASlG,EAAW8E,EAAU9Z,EAAMwV,WAAW,GAAO3F,OAEtE7P,EAAMmV,KAAO2E,EAAW,EAExBjD,EAAiB7W,EAAMgD,KAAK,eAAgB,IAAMzG,OAAO8T,GAAQ,GACjEwG,EAAMmE,OAAWze,OAAO6R,aAAasC,GACrCmG,EAAMrN,IAAW,CAAEwL,EAAWhV,EAAMmV,MAEpC0B,EAAiB7W,EAAMgD,KAAK,SAAU,GAAI,GAC1C6T,EAAME,QAAWA,EACjBF,EAAMrN,IAAW,CAAEwL,EAAWhV,EAAMmV,KAAO,GAC3C0B,EAAMe,SAAW,GAEjBf,EAAiB7W,EAAMgD,KAAK,gBAAiB,IAAMzG,OAAO8T,IAAS,GACnEwG,EAAMmE,OAAWze,OAAO6R,aAAasC,GAErC1Q,EAAM+a,WAAaZ,GAEZ,EACT,C,8BC9EA,IAAI5K,EAAU,gBAKd,SAASwM,EAAqB/b,EAAOgV,GACnC,IAAItE,EAAQjP,EAAKoB,EAAKnF,EAOtB,OALA+D,EAAMzB,EAAM2a,OAAO3F,GAAahV,EAAM4a,OAAO5F,GAC7CnS,EAAM7C,EAAM6a,OAAO7F,GAEnBtE,EAAS1Q,EAAM6N,IAAIxM,WAAWI,KAEf,KAAXiP,GACW,KAAXA,GACW,KAAXA,GAIAjP,EAAMoB,IACRnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,IAErB8N,EAAQ7R,KANL,EAYH+D,CACT,CAIA,SAASua,EAAsBhc,EAAOgV,GACpC,IAAItX,EACAqM,EAAQ/J,EAAM2a,OAAO3F,GAAahV,EAAM4a,OAAO5F,GAC/CvT,EAAMsI,EACNlH,EAAM7C,EAAM6a,OAAO7F,GAGvB,GAAIvT,EAAM,GAAKoB,EAAO,OAAQ,EAI9B,GAFAnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,KAEtB/D,EAAK,IAAeA,EAAK,GAAe,OAAQ,EAEpD,OAAS,CAEP,GAAI+D,GAAOoB,EAAO,OAAQ,EAI1B,GAFAnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,OAEtB/D,GAAM,IAAeA,GAAM,IAA/B,CAUA,GAAW,KAAPA,GAA6B,KAAPA,EACxB,MAGF,OAAQ,CAPR,CAHE,GAAI+D,EAAMsI,GAAS,GAAM,OAAQ,CAWrC,CAGA,OAAItI,EAAMoB,IACRnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,IAErB8N,EAAQ7R,KAEH,EAGL+D,CACT,CAEA,SAASwa,EAAoBjc,EAAO0L,GAClC,IAAI9L,EAAGkW,EACHzF,EAAQrQ,EAAMqQ,MAAQ,EAE1B,IAAKzQ,EAAI8L,EAAM,EAAGoK,EAAI9V,EAAMuU,OAAOla,OAAS,EAAGuF,EAAIkW,EAAGlW,IAChDI,EAAMuU,OAAO3U,GAAGyQ,QAAUA,GAAkC,mBAAzBrQ,EAAMuU,OAAO3U,GAAG2Y,OACrDvY,EAAMuU,OAAO3U,EAAI,GAAGwY,QAAS,EAC7BpY,EAAMuU,OAAO3U,GAAGwY,QAAS,EACzBxY,GAAK,EAGX,CAGA5F,EAAOC,QAAU,SAAc+F,EAAOgV,EAAWC,EAASyE,GACxD,IAAIhc,EACAwe,EACAtc,EACAuc,EACAC,EACAxC,EACAyC,EACAC,EACAxG,EACAyG,EACAC,EACAC,EACAC,EACA7Z,EACAiX,EACAC,EACA4C,EACAxC,EACAC,EACAC,EACAuC,EACAnb,EACAob,EACAC,EACA/S,EACAwQ,EACAC,EACA3D,EACAkG,GAAyB,EACzBtH,GAAQ,EAGZ,GAAIzV,EAAMuV,OAAOP,GAAahV,EAAMwV,WAAa,EAAK,OAAO,EAQ7D,GAAIxV,EAAMgd,YAAc,GACpBhd,EAAMuV,OAAOP,GAAahV,EAAMgd,YAAc,GAC9Chd,EAAMuV,OAAOP,GAAahV,EAAMwV,UAClC,OAAO,EAiBT,GAZIkE,GAA+B,cAArB1Z,EAAM+a,YAMd/a,EAAMuV,OAAOP,IAAchV,EAAMwV,YACnCuH,GAAyB,IAKxBF,EAAiBb,EAAsBhc,EAAOgV,KAAe,GAOhE,GANAqH,GAAY,EACZtS,EAAQ/J,EAAM2a,OAAO3F,GAAahV,EAAM4a,OAAO5F,GAC/C0H,EAAcO,OAAOjd,EAAM6N,IAAIhR,MAAMkN,EAAO8S,EAAiB,IAIzDE,GAA0C,IAAhBL,EAAmB,OAAO,MAEnD,OAAKG,EAAiBd,EAAqB/b,EAAOgV,KAAe,GAItE,OAAO,EAHPqH,GAAY,CAId,CAIA,GAAIU,GACE/c,EAAMub,WAAWsB,IAAmB7c,EAAM6a,OAAO7F,GAAY,OAAO,EAO1E,GAHAyH,EAAiBzc,EAAM6N,IAAIxM,WAAWwb,EAAiB,GAGnDnD,EAAU,OAAO,EAGrB8C,EAAaxc,EAAMuU,OAAOla,OAEtBgiB,GACFxF,EAAc7W,EAAMgD,KAAK,oBAAqB,KAAM,GAChC,IAAhB0Z,IACF7F,EAAMY,MAAQ,CAAE,CAAE,QAASiF,MAI7B7F,EAAc7W,EAAMgD,KAAK,mBAAoB,KAAM,GAGrD6T,EAAMrN,IAAS+S,EAAY,CAAEvH,EAAW,GACxC6B,EAAMmE,OAASze,OAAO6R,aAAaqO,GAMnC3C,EAAW9E,EACX8H,GAAe,EACftC,EAAkBxa,EAAM+Q,GAAGiC,MAAMQ,MAAM0B,SAAS,QAEhDiF,EAAgBna,EAAM+a,WACtB/a,EAAM+a,WAAa,OAEnB,MAAOjB,EAAW7E,EAAS,CACzBxT,EAAMob,EACNha,EAAM7C,EAAM6a,OAAOf,GAEnBF,EAAUG,EAAS/Z,EAAMuV,OAAOuE,GAAY+C,GAAkB7c,EAAM2a,OAAO3F,GAAahV,EAAM4a,OAAO5F,IAErG,MAAOvT,EAAMoB,EAAK,CAGhB,GAFAnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,GAEf,IAAP/D,EACFqc,GAAU,GAAKA,EAAS/Z,EAAM8a,QAAQhB,IAAa,MAC9C,IAAW,KAAPpc,EAGT,MAFAqc,GAGF,CAEAtY,GACF,CA8EA,GA5EAya,EAAeza,EAIb2a,EAFEF,GAAgBrZ,EAEE,EAEAkX,EAASH,EAK3BwC,EAAoB,IAAKA,EAAoB,GAIjDD,EAASvC,EAAUwC,EAGnBvF,EAAe7W,EAAMgD,KAAK,iBAAkB,KAAM,GAClD6T,EAAMmE,OAASze,OAAO6R,aAAaqO,GACnC5F,EAAMrN,IAAS8S,EAAY,CAAEtH,EAAW,GACpCqH,IACFxF,EAAMQ,KAAOrX,EAAM6N,IAAIhR,MAAMkN,EAAO8S,EAAiB,IAIvDD,EAAW5c,EAAMyV,MACjB4E,EAAYra,EAAM4a,OAAO5F,GACzBoF,EAAYpa,EAAMuV,OAAOP,GAMzB2H,EAAgB3c,EAAMgd,WACtBhd,EAAMgd,WAAahd,EAAMwV,UACzBxV,EAAMwV,UAAY2G,EAElBnc,EAAMyV,OAAQ,EACdzV,EAAM4a,OAAO5F,GAAakH,EAAelc,EAAM2a,OAAO3F,GACtDhV,EAAMuV,OAAOP,GAAa+E,EAEtBmC,GAAgBrZ,GAAO7C,EAAM0V,QAAQV,EAAY,GAQnDhV,EAAMmV,KAAOzY,KAAKoG,IAAI9C,EAAMmV,KAAO,EAAGF,GAEtCjV,EAAM+Q,GAAGiC,MAAM+B,SAAS/U,EAAOgV,EAAWC,GAAS,GAIhDjV,EAAMyV,QAASqH,IAClBrH,GAAQ,GAIVqH,EAAgB9c,EAAMmV,KAAOH,EAAa,GAAKhV,EAAM0V,QAAQ1V,EAAMmV,KAAO,GAE1EnV,EAAMwV,UAAYxV,EAAMgd,WACxBhd,EAAMgd,WAAaL,EACnB3c,EAAM4a,OAAO5F,GAAaqF,EAC1Bra,EAAMuV,OAAOP,GAAaoF,EAC1Bpa,EAAMyV,MAAQmH,EAEd/F,EAAe7W,EAAMgD,KAAK,kBAAmB,MAAO,GACpD6T,EAAMmE,OAASze,OAAO6R,aAAaqO,GAEnC3C,EAAW9E,EAAYhV,EAAMmV,KAC7BmH,EAAU,GAAKxC,EACfoC,EAAelc,EAAM2a,OAAO3F,GAExB8E,GAAY7E,EAAW,MAK3B,GAAIjV,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,UAAa,MAGhD,GAAIxV,EAAMuV,OAAOP,GAAahV,EAAMwV,WAAa,EAAK,MAItD,IADA+E,GAAY,EACP3a,EAAI,EAAGkW,EAAI0E,EAAgBngB,OAAQuF,EAAIkW,EAAGlW,IAC7C,GAAI4a,EAAgB5a,GAAGI,EAAO8Z,EAAU7E,GAAS,GAAO,CACtDsF,GAAY,EACZ,KACF,CAEF,GAAIA,EAAa,MAGjB,GAAI8B,EAAW,CAEb,GADAQ,EAAiBb,EAAsBhc,EAAO8Z,GAC1C+C,EAAiB,EAAK,MAC1B9S,EAAQ/J,EAAM2a,OAAOb,GAAY9Z,EAAM4a,OAAOd,EAChD,MAEE,GADA+C,EAAiBd,EAAqB/b,EAAO8Z,GACzC+C,EAAiB,EAAK,MAG5B,GAAIJ,IAAmBzc,EAAM6N,IAAIxM,WAAWwb,EAAiB,GAAM,KACrE,CAoBA,OAhBEhG,EADEwF,EACMrc,EAAMgD,KAAK,qBAAsB,MAAO,GAExChD,EAAMgD,KAAK,oBAAqB,MAAO,GAEjD6T,EAAMmE,OAASze,OAAO6R,aAAaqO,GAEnCF,EAAU,GAAKzC,EACf9Z,EAAMmV,KAAO2E,EAEb9Z,EAAM+a,WAAaZ,EAGf1E,GACFwG,EAAoBjc,EAAOwc,IAGtB,CACT,C,wBCtWAxiB,EAAOC,QAAU,SAAmB+F,EAAOgV,GACzC,IAAI+B,EAASwD,EAAW3a,EAAGkW,EAAGe,EAAOsD,EACjCL,EAAW9E,EAAY,EACvBwF,EAAkBxa,EAAM+Q,GAAGiC,MAAMQ,MAAM0B,SAAS,aAChDD,EAAUjV,EAAM4V,QAMpB,IAJAuE,EAAgBna,EAAM+a,WACtB/a,EAAM+a,WAAa,YAGZjB,EAAW7E,IAAYjV,EAAM0V,QAAQoE,GAAWA,IAGrD,KAAI9Z,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,UAAY,MAG3CxV,EAAMuV,OAAOuE,GAAY,GAA7B,CAIA,IADAS,GAAY,EACP3a,EAAI,EAAGkW,EAAI0E,EAAgBngB,OAAQuF,EAAIkW,EAAGlW,IAC7C,GAAI4a,EAAgB5a,GAAGI,EAAO8Z,EAAU7E,GAAS,GAAO,CACtDsF,GAAY,EACZ,KACF,CAEF,GAAIA,EAAa,KAV2B,CA6B9C,OAhBAxD,EAAU/W,EAAMkb,SAASlG,EAAW8E,EAAU9Z,EAAMwV,WAAW,GAAO3F,OAEtE7P,EAAMmV,KAAO2E,EAEbjD,EAAiB7W,EAAMgD,KAAK,iBAAkB,IAAK,GACnD6T,EAAMrN,IAAW,CAAEwL,EAAWhV,EAAMmV,MAEpC0B,EAAiB7W,EAAMgD,KAAK,SAAU,GAAI,GAC1C6T,EAAME,QAAWA,EACjBF,EAAMrN,IAAW,CAAEwL,EAAWhV,EAAMmV,MACpC0B,EAAMe,SAAW,GAEjBf,EAAiB7W,EAAMgD,KAAK,kBAAmB,KAAM,GAErDhD,EAAM+a,WAAaZ,GAEZ,CACT,C,8BChDA,IAAIvK,EAAuB,2BACvBL,EAAuB,gBAG3BvV,EAAOC,QAAU,SAAmB+F,EAAOgV,EAAWkI,EAAUxD,GAC9D,IAAIhc,EACAyf,EACAC,EACAnI,EACAoI,EACAzd,EACAkW,EACAwH,EACA1M,EACAuJ,EACArW,EACAiG,EACA/N,EACAue,EACAC,EACA+C,EACAjN,EAAQ,EACR7O,EAAMzB,EAAM2a,OAAO3F,GAAahV,EAAM4a,OAAO5F,GAC7CnS,EAAM7C,EAAM6a,OAAO7F,GACnB8E,EAAW9E,EAAY,EAG3B,GAAIhV,EAAMuV,OAAOP,GAAahV,EAAMwV,WAAa,EAAK,OAAO,EAE7D,GAAkC,KAA9BxV,EAAM6N,IAAIxM,WAAWI,GAAwB,OAAO,EAIxD,QAASA,EAAMoB,EACb,GAAkC,KAA9B7C,EAAM6N,IAAIxM,WAAWI,IACa,KAAlCzB,EAAM6N,IAAIxM,WAAWI,EAAM,GAAoB,CACjD,GAAIA,EAAM,IAAMoB,EAAO,OAAO,EAC9B,GAAsC,KAAlC7C,EAAM6N,IAAIxM,WAAWI,EAAM,GAAsB,OAAO,EAC5D,KACF,CAWF,IARAwT,EAAUjV,EAAM4V,QAGhB4E,EAAkBxa,EAAM+Q,GAAGiC,MAAMQ,MAAM0B,SAAS,aAEhDiF,EAAgBna,EAAM+a,WACtB/a,EAAM+a,WAAa,YAEZjB,EAAW7E,IAAYjV,EAAM0V,QAAQoE,GAAWA,IAGrD,KAAI9Z,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,UAAY,MAG3CxV,EAAMuV,OAAOuE,GAAY,GAA7B,CAIA,IADAS,GAAY,EACP3a,EAAI,EAAGkW,EAAI0E,EAAgBngB,OAAQuF,EAAIkW,EAAGlW,IAC7C,GAAI4a,EAAgB5a,GAAGI,EAAO8Z,EAAU7E,GAAS,GAAO,CACtDsF,GAAY,EACZ,KACF,CAEF,GAAIA,EAAa,KAV2B,CAgB9C,IAHAve,EAAMgE,EAAMkb,SAASlG,EAAW8E,EAAU9Z,EAAMwV,WAAW,GAAO3F,OAClEhN,EAAM7G,EAAI3B,OAELoH,EAAM,EAAGA,EAAMoB,EAAKpB,IAAO,CAE9B,GADA/D,EAAK1B,EAAIqF,WAAWI,GACT,KAAP/D,EACF,OAAO,EACF,GAAW,KAAPA,EAAqB,CAC9BkT,EAAWnP,EACX,KACF,CAAkB,KAAP/D,EACT4S,IACgB,KAAP5S,IACT+D,IACIA,EAAMoB,GAA+B,KAAxB7G,EAAIqF,WAAWI,IAC9B6O,IAGN,CAEA,GAAIM,EAAW,GAAsC,KAAjC5U,EAAIqF,WAAWuP,EAAW,GAAsB,OAAO,EAI3E,IAAKnP,EAAMmP,EAAW,EAAGnP,EAAMoB,EAAKpB,IAElC,GADA/D,EAAK1B,EAAIqF,WAAWI,GACT,KAAP/D,EACF4S,SACK,IAAIf,EAAQ7R,GAGjB,MAOJ,GADAoG,EAAM9D,EAAM+Q,GAAGI,QAAQhB,qBAAqBnU,EAAKyF,EAAKoB,IACjDiB,EAAIyM,GAAM,OAAO,EAGtB,GADA8M,EAAOrd,EAAM+Q,GAAGkB,cAAcnO,EAAI9H,MAC7BgE,EAAM+Q,GAAGgB,aAAasL,GAAS,OAAO,EAY3C,IAVA5b,EAAMqC,EAAIrC,IACV6O,GAASxM,EAAIwM,MAGb6M,EAAa1b,EACb2b,EAAgB9M,EAIhBvG,EAAQtI,EACDA,EAAMoB,EAAKpB,IAEhB,GADA/D,EAAK1B,EAAIqF,WAAWI,GACT,KAAP/D,EACF4S,SACK,IAAIf,EAAQ7R,GAGjB,MAMJoG,EAAM9D,EAAM+Q,GAAGI,QAAQf,eAAepU,EAAKyF,EAAKoB,GAC5CpB,EAAMoB,GAAOkH,IAAUtI,GAAOqC,EAAIyM,IACpCgN,EAAQzZ,EAAI9H,IACZyF,EAAMqC,EAAIrC,IACV6O,GAASxM,EAAIwM,QAEbiN,EAAQ,GACR9b,EAAM0b,EACN7M,EAAQ8M,GAIV,MAAO3b,EAAMoB,EAAK,CAEhB,GADAnF,EAAK1B,EAAIqF,WAAWI,IACf8N,EAAQ7R,GAAO,MACpB+D,GACF,CAEA,GAAIA,EAAMoB,GAA+B,KAAxB7G,EAAIqF,WAAWI,IAC1B8b,EAAO,CAGTA,EAAQ,GACR9b,EAAM0b,EACN7M,EAAQ8M,EACR,MAAO3b,EAAMoB,EAAK,CAEhB,GADAnF,EAAK1B,EAAIqF,WAAWI,IACf8N,EAAQ7R,GAAO,MACpB+D,GACF,CACF,CAGF,QAAIA,EAAMoB,GAA+B,KAAxB7G,EAAIqF,WAAWI,MAKhC6b,EAAQ1N,EAAmB5T,EAAIa,MAAM,EAAG+T,MACnC0M,IAOD5D,IAEgC,qBAAzB1Z,EAAMoU,IAAIoJ,aACnBxd,EAAMoU,IAAIoJ,WAAa,CAAC,GAEiB,qBAAhCxd,EAAMoU,IAAIoJ,WAAWF,KAC9Btd,EAAMoU,IAAIoJ,WAAWF,GAAS,CAAEC,MAAOA,EAAOF,KAAMA,IAGtDrd,EAAM+a,WAAaZ,EAEnBna,EAAMmV,KAAOH,EAAY1E,EAAQ,IAXZ,GAavB,C,8BCjMA,IAAImN,EAAQ,EAAQ,MAChBlO,EAAU,gBAGd,SAASmO,EAAW7P,EAAKkD,EAAIqD,EAAKG,GAChC,IAAI7W,EAAIigB,EAAG5T,EAAOtI,EAAKsJ,EAAKoR,EAAQpC,EAAQ6D,EAuD5C,IArDA7d,KAAK8N,IAAMA,EAGX9N,KAAKgR,GAASA,EAEdhR,KAAKqU,IAAMA,EAMXrU,KAAKwU,OAASA,EAEdxU,KAAK4a,OAAS,GACd5a,KAAK8a,OAAS,GACd9a,KAAK6a,OAAS,GACd7a,KAAKwV,OAAS,GAYdxV,KAAK+a,QAAU,GAGf/a,KAAKyV,UAAa,EAElBzV,KAAKoV,KAAa,EAClBpV,KAAK6V,QAAa,EAClB7V,KAAK0V,OAAa,EAClB1V,KAAK8d,UAAc,EACnB9d,KAAKid,YAAc,EAInBjd,KAAKgb,WAAa,OAElBhb,KAAKsQ,MAAQ,EAGbtQ,KAAK1B,OAAS,GAIdsf,EAAI5d,KAAK8N,IACT+P,GAAe,EAEV7T,EAAQtI,EAAM0a,EAASpC,EAAS,EAAGhP,EAAM4S,EAAEtjB,OAAQoH,EAAMsJ,EAAKtJ,IAAO,CAGxE,GAFA/D,EAAKigB,EAAEtc,WAAWI,IAEbmc,EAAc,CACjB,GAAIrO,EAAQ7R,GAAK,CACfye,IAEW,IAAPze,EACFqc,GAAU,EAAIA,EAAS,EAEvBA,IAEF,QACF,CACE6D,GAAe,CAEnB,CAEW,KAAPlgB,GAAe+D,IAAQsJ,EAAM,IACpB,KAAPrN,GAAe+D,IACnB1B,KAAK4a,OAAO3X,KAAK+G,GACjBhK,KAAK8a,OAAO7X,KAAKvB,GACjB1B,KAAK6a,OAAO5X,KAAKmZ,GACjBpc,KAAKwV,OAAOvS,KAAK+W,GACjBha,KAAK+a,QAAQ9X,KAAK,GAElB4a,GAAe,EACfzB,EAAS,EACTpC,EAAS,EACThQ,EAAQtI,EAAM,EAElB,CAGA1B,KAAK4a,OAAO3X,KAAK2a,EAAEtjB,QACnB0F,KAAK8a,OAAO7X,KAAK2a,EAAEtjB,QACnB0F,KAAK6a,OAAO5X,KAAK,GACjBjD,KAAKwV,OAAOvS,KAAK,GACjBjD,KAAK+a,QAAQ9X,KAAK,GAElBjD,KAAK6V,QAAU7V,KAAK4a,OAAOtgB,OAAS,CACtC,CAIAqjB,EAAW3iB,UAAUiI,KAAO,SAAUuV,EAAMD,EAAKD,GAC/C,IAAIxB,EAAQ,IAAI4G,EAAMlF,EAAMD,EAAKD,GAQjC,OAPAxB,EAAM7D,OAAQ,EAEVqF,EAAU,GAAGtY,KAAKsQ,QACtBwG,EAAMxG,MAAQtQ,KAAKsQ,MACfgI,EAAU,GAAGtY,KAAKsQ,QAEtBtQ,KAAKwU,OAAOvR,KAAK6T,GACVA,CACT,EAEA6G,EAAW3iB,UAAU2a,QAAU,SAAiBP,GAC9C,OAAOpV,KAAK4a,OAAOxF,GAAQpV,KAAK6a,OAAOzF,IAASpV,KAAK8a,OAAO1F,EAC9D,EAEAuI,EAAW3iB,UAAUua,eAAiB,SAAwBwI,GAC5D,IAAK,IAAIjb,EAAM9C,KAAK6V,QAASkI,EAAOjb,EAAKib,IACvC,GAAI/d,KAAK4a,OAAOmD,GAAQ/d,KAAK6a,OAAOkD,GAAQ/d,KAAK8a,OAAOiD,GACtD,MAGJ,OAAOA,CACT,EAGAJ,EAAW3iB,UAAUwgB,WAAa,SAAoB9Z,GAGpD,IAFA,IAAI/D,EAEKmF,EAAM9C,KAAK8N,IAAIxT,OAAQoH,EAAMoB,EAAKpB,IAEzC,GADA/D,EAAKqC,KAAK8N,IAAIxM,WAAWI,IACpB8N,EAAQ7R,GAAO,MAEtB,OAAO+D,CACT,EAGAic,EAAW3iB,UAAU0gB,eAAiB,SAAwBha,EAAKqB,GACjE,GAAIrB,GAAOqB,EAAO,OAAOrB,EAEzB,MAAOA,EAAMqB,EACX,IAAKyM,EAAQxP,KAAK8N,IAAIxM,aAAaI,IAAS,OAAOA,EAAM,EAE3D,OAAOA,CACT,EAGAic,EAAW3iB,UAAUugB,UAAY,SAAmB7Z,EAAKkN,GACvD,IAAK,IAAI9L,EAAM9C,KAAK8N,IAAIxT,OAAQoH,EAAMoB,EAAKpB,IACzC,GAAI1B,KAAK8N,IAAIxM,WAAWI,KAASkN,EAAQ,MAE3C,OAAOlN,CACT,EAGAic,EAAW3iB,UAAU2gB,cAAgB,SAAuBja,EAAKkN,EAAM7L,GACrE,GAAIrB,GAAOqB,EAAO,OAAOrB,EAEzB,MAAOA,EAAMqB,EACX,GAAI6L,IAAS5O,KAAK8N,IAAIxM,aAAaI,GAAQ,OAAOA,EAAM,EAE1D,OAAOA,CACT,EAGAic,EAAW3iB,UAAUmgB,SAAW,SAAkB6C,EAAO/T,EAAKmS,EAAQ6B,GACpE,IAAIpe,EAAGqe,EAAYvgB,EAAIgE,EAAOuZ,EAAMiD,EAAOC,EACvChJ,EAAO4I,EAEX,GAAIA,GAAS/T,EACX,MAAO,GAKT,IAFAkU,EAAQ,IAAIxZ,MAAMsF,EAAM+T,GAEnBne,EAAI,EAAGuV,EAAOnL,EAAKmL,IAAQvV,IAAK,CACnCqe,EAAa,EACbE,EAAYzc,EAAQ3B,KAAK4a,OAAOxF,GAI9B8F,EAFE9F,EAAO,EAAInL,GAAOgU,EAEbje,KAAK8a,OAAO1F,GAAQ,EAEpBpV,KAAK8a,OAAO1F,GAGrB,MAAOzT,EAAQuZ,GAAQgD,EAAa9B,EAAQ,CAG1C,GAFAze,EAAKqC,KAAK8N,IAAIxM,WAAWK,GAErB6N,EAAQ7R,GACC,IAAPA,EACFugB,GAAc,GAAKA,EAAale,KAAK+a,QAAQ3F,IAAS,EAEtD8I,QAEG,MAAIvc,EAAQyc,EAAYpe,KAAK6a,OAAOzF,IAIzC,MAFA8I,GAGF,CAEAvc,GACF,CAKEwc,EAAMte,GAHJqe,EAAa9B,EAGJ,IAAIzX,MAAMuZ,EAAa9B,EAAS,GAAGhU,KAAK,KAAOpI,KAAK8N,IAAIhR,MAAM6E,EAAOuZ,GAErElb,KAAK8N,IAAIhR,MAAM6E,EAAOuZ,EAErC,CAEA,OAAOiD,EAAM/V,KAAK,GACpB,EAGAuV,EAAW3iB,UAAU0iB,MAAQA,EAG7BzjB,EAAOC,QAAUyjB,C,8BClOjB,IAAInO,EAAU,gBAGd,SAAS6O,EAAQpe,EAAOmV,GACtB,IAAI1T,EAAMzB,EAAM2a,OAAOxF,GAAQnV,EAAM4a,OAAOzF,GACxCtS,EAAM7C,EAAM6a,OAAO1F,GAEvB,OAAOnV,EAAM6N,IAAIwQ,OAAO5c,EAAKoB,EAAMpB,EACrC,CAEA,SAAS6c,EAAatiB,GACpB,IAGI0B,EAHAW,EAAS,GACToD,EAAM,EACNoB,EAAM7G,EAAI3B,OAEVkkB,GAAY,EACZC,EAAU,EACVC,EAAU,GAEd/gB,EAAM1B,EAAIqF,WAAWI,GAErB,MAAOA,EAAMoB,EACA,MAAPnF,IACG6gB,GAOHE,GAAWziB,EAAI0iB,UAAUF,EAAS/c,EAAM,GACxC+c,EAAU/c,IANVpD,EAAO2E,KAAKyb,EAAUziB,EAAI0iB,UAAUF,EAAS/c,IAC7Cgd,EAAU,GACVD,EAAU/c,EAAM,IAQpB8c,EAAoB,KAAP7gB,EACb+D,IAEA/D,EAAK1B,EAAIqF,WAAWI,GAKtB,OAFApD,EAAO2E,KAAKyb,EAAUziB,EAAI0iB,UAAUF,IAE7BngB,CACT,CAGArE,EAAOC,QAAU,SAAe+F,EAAOgV,EAAWC,EAASyE,GACzD,IAAIhc,EAAIoe,EAAUra,EAAK7B,EAAGkW,EAAGgE,EAAU6E,EAASC,EAAa/H,EACzDgI,EAAQC,EAAGC,EAAYC,EAAY7E,EAAeI,EAClDC,EAAiByE,EAASC,EAG9B,GAAIlK,EAAY,EAAIC,EAAW,OAAO,EAItC,GAFA6E,EAAW9E,EAAY,EAEnBhV,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,UAAa,OAAO,EAGvD,GAAIxV,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,WAAa,EAAK,OAAO,EAO5D,GADA/T,EAAMzB,EAAM2a,OAAOb,GAAY9Z,EAAM4a,OAAOd,GACxCrY,GAAOzB,EAAM6a,OAAOf,GAAa,OAAO,EAG5C,GADAmF,EAAUjf,EAAM6N,IAAIxM,WAAWI,KACf,MAAZwd,GAAuC,KAAZA,GAAuC,KAAZA,EAA2B,OAAO,EAE5F,GAAIxd,GAAOzB,EAAM6a,OAAOf,GAAa,OAAO,EAG5C,GADAoF,EAAWlf,EAAM6N,IAAIxM,WAAWI,KACf,MAAbyd,GAAyC,KAAbA,GAAyC,KAAbA,IAA6B3P,EAAQ2P,GAC/F,OAAO,EAKT,GAAgB,KAAZD,GAA2B1P,EAAQ2P,GAAa,OAAO,EAE3D,MAAOzd,EAAMzB,EAAM6a,OAAOf,GAAW,CAGnC,GAFApc,EAAKsC,EAAM6N,IAAIxM,WAAWI,GAEf,MAAP/D,GAA6B,KAAPA,GAA6B,KAAPA,IAAuB6R,EAAQ7R,GAAO,OAAO,EAE7F+D,GACF,CAMA,IAJAqa,EAAWsC,EAAQpe,EAAOgV,EAAY,GAEtC2J,EAAU7C,EAAS5U,MAAM,KACzB2X,EAAS,GACJjf,EAAI,EAAGA,EAAI+e,EAAQtkB,OAAQuF,IAAK,CAEnC,GADAkf,EAAIH,EAAQ/e,GAAGiQ,QACViP,EAAG,CAGN,GAAU,IAANlf,GAAWA,IAAM+e,EAAQtkB,OAAS,EACpC,SAEA,OAAO,CAEX,CAEA,IAAK,WAAWkM,KAAKuY,GAAM,OAAO,EACC,KAA/BA,EAAEzd,WAAWyd,EAAEzkB,OAAS,GAC1BwkB,EAAO7b,KAAyB,KAApB8b,EAAEzd,WAAW,GAAqB,SAAW,SAC5B,KAApByd,EAAEzd,WAAW,GACtBwd,EAAO7b,KAAK,QAEZ6b,EAAO7b,KAAK,GAEhB,CAGA,GADA8Y,EAAWsC,EAAQpe,EAAOgV,GAAWnF,QACN,IAA3BiM,EAAS7c,QAAQ,KAAe,OAAO,EAC3C,GAAIe,EAAMuV,OAAOP,GAAahV,EAAMwV,WAAa,EAAK,OAAO,EAQ7D,GAPAmJ,EAAUL,EAAaxC,GACnB6C,EAAQtkB,QAAyB,KAAfskB,EAAQ,IAAWA,EAAQ7U,QAC7C6U,EAAQtkB,QAA0C,KAAhCskB,EAAQA,EAAQtkB,OAAS,IAAWskB,EAAQQ,MAIlEP,EAAcD,EAAQtkB,OACF,IAAhBukB,GAAqBA,IAAgBC,EAAOxkB,OAAU,OAAO,EAEjE,GAAIqf,EAAU,OAAO,EAkBrB,IAhBAS,EAAgBna,EAAM+a,WACtB/a,EAAM+a,WAAa,QAInBP,EAAkBxa,EAAM+Q,GAAGiC,MAAMQ,MAAM0B,SAAS,cAEhD2B,EAAY7W,EAAMgD,KAAK,aAAc,QAAS,GAC9C6T,EAAMrN,IAAMuV,EAAa,CAAE/J,EAAW,GAEtC6B,EAAY7W,EAAMgD,KAAK,aAAc,QAAS,GAC9C6T,EAAMrN,IAAM,CAAEwL,EAAWA,EAAY,GAErC6B,EAAY7W,EAAMgD,KAAK,UAAW,KAAM,GACxC6T,EAAMrN,IAAM,CAAEwL,EAAWA,EAAY,GAEhCpV,EAAI,EAAGA,EAAI+e,EAAQtkB,OAAQuF,IAC9BiX,EAAiB7W,EAAMgD,KAAK,UAAW,KAAM,GACzC6b,EAAOjf,KACTiX,EAAMY,MAAS,CAAE,CAAE,QAAS,cAAgBoH,EAAOjf,MAGrDiX,EAAiB7W,EAAMgD,KAAK,SAAU,GAAI,GAC1C6T,EAAME,QAAW4H,EAAQ/e,GAAGiQ,OAC5BgH,EAAMe,SAAW,GAEjBf,EAAiB7W,EAAMgD,KAAK,WAAY,MAAO,GAMjD,IAHA6T,EAAY7W,EAAMgD,KAAK,WAAY,MAAO,GAC1C6T,EAAY7W,EAAMgD,KAAK,cAAe,SAAU,GAE3C8W,EAAW9E,EAAY,EAAG8E,EAAW7E,EAAS6E,IAAY,CAC7D,GAAI9Z,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,UAAa,MAGhD,IADA+E,GAAY,EACP3a,EAAI,EAAGkW,EAAI0E,EAAgBngB,OAAQuF,EAAIkW,EAAGlW,IAC7C,GAAI4a,EAAgB5a,GAAGI,EAAO8Z,EAAU7E,GAAS,GAAO,CACtDsF,GAAY,EACZ,KACF,CAGF,GAAIA,EAAa,MAEjB,GADAuB,EAAWsC,EAAQpe,EAAO8Z,GAAUjK,QAC/BiM,EAAY,MACjB,GAAI9b,EAAMuV,OAAOuE,GAAY9Z,EAAMwV,WAAa,EAAK,MAarD,IAZAmJ,EAAUL,EAAaxC,GACnB6C,EAAQtkB,QAAyB,KAAfskB,EAAQ,IAAWA,EAAQ7U,QAC7C6U,EAAQtkB,QAA0C,KAAhCskB,EAAQA,EAAQtkB,OAAS,IAAWskB,EAAQQ,MAE9DrF,IAAa9E,EAAY,IAC3B6B,EAAY7W,EAAMgD,KAAK,aAAc,QAAS,GAC9C6T,EAAMrN,IAAMwV,EAAa,CAAEhK,EAAY,EAAG,IAG5C6B,EAAY7W,EAAMgD,KAAK,UAAW,KAAM,GACxC6T,EAAMrN,IAAM,CAAEsQ,EAAUA,EAAW,GAE9Bla,EAAI,EAAGA,EAAIgf,EAAahf,IAC3BiX,EAAiB7W,EAAMgD,KAAK,UAAW,KAAM,GACzC6b,EAAOjf,KACTiX,EAAMY,MAAS,CAAE,CAAE,QAAS,cAAgBoH,EAAOjf,MAGrDiX,EAAiB7W,EAAMgD,KAAK,SAAU,GAAI,GAC1C6T,EAAME,QAAW4H,EAAQ/e,GAAK+e,EAAQ/e,GAAGiQ,OAAS,GAClDgH,EAAMe,SAAW,GAEjBf,EAAiB7W,EAAMgD,KAAK,WAAY,MAAO,GAEjD6T,EAAQ7W,EAAMgD,KAAK,WAAY,MAAO,EACxC,CAYA,OAVIgc,IACFnI,EAAQ7W,EAAMgD,KAAK,cAAe,SAAU,GAC5Cgc,EAAW,GAAKlF,GAGlBjD,EAAQ7W,EAAMgD,KAAK,cAAe,SAAU,GAC5C+b,EAAW,GAAKjF,EAEhB9Z,EAAM+a,WAAaZ,EACnBna,EAAMmV,KAAO2E,GACN,CACT,C,uBCzNA9f,EAAOC,QAAU,SAAe+F,GAC9B,IAAI6W,EAEA7W,EAAM0U,YACRmC,EAAiB,IAAI7W,EAAMyd,MAAM,SAAU,GAAI,GAC/C5G,EAAME,QAAW/W,EAAM6N,IACvBgJ,EAAMrN,IAAW,CAAE,EAAG,GACtBqN,EAAMe,SAAW,GACjB5X,EAAMuU,OAAOvR,KAAK6T,IAElB7W,EAAM+Q,GAAGiC,MAAMb,MAAMnS,EAAM6N,IAAK7N,EAAM+Q,GAAI/Q,EAAMoU,IAAKpU,EAAMuU,OAE/D,C,wBCbAva,EAAOC,QAAU,SAAgB+F,GAC/B,IAA2Bof,EAAKxf,EAAGkW,EAA/BvB,EAASvU,EAAMuU,OAGnB,IAAK3U,EAAI,EAAGkW,EAAIvB,EAAOla,OAAQuF,EAAIkW,EAAGlW,IACpCwf,EAAM7K,EAAO3U,GACI,WAAbwf,EAAI7G,MACNvY,EAAM+Q,GAAGC,OAAOmB,MAAMiN,EAAIrI,QAAS/W,EAAM+Q,GAAI/Q,EAAMoU,IAAKgL,EAAIxH,SAGlE,C,8BCLA,IAAIhK,EAAiB,uBAGrB,SAASyR,EAAWrjB,GAClB,MAAO,YAAYuK,KAAKvK,EAC1B,CACA,SAASsjB,EAAYtjB,GACnB,MAAO,aAAauK,KAAKvK,EAC3B,CAGAhC,EAAOC,QAAU,SAAiB+F,GAChC,IAAIJ,EAAGyE,EAAGyR,EAAGvB,EAAQsC,EAAO0I,EAAcC,EAAOC,EAAIzZ,EAAMvE,EAAK+c,EAC5DnO,EAAOqP,EAAerV,EAAKsV,EAASC,EAEpCC,EADAC,EAAc9f,EAAMuU,OAGxB,GAAKvU,EAAM+Q,GAAGtG,QAAQ0I,QAEtB,IAAK9O,EAAI,EAAGyR,EAAIgK,EAAYzlB,OAAQgK,EAAIyR,EAAGzR,IACzC,GAA4B,WAAxByb,EAAYzb,GAAGkU,MACdvY,EAAM+Q,GAAGoC,QAAQvJ,QAAQkW,EAAYzb,GAAG0S,SAU7C,IANAxC,EAASuL,EAAYzb,GAAGuT,SAExB8H,EAAgB,EAIX9f,EAAI2U,EAAOla,OAAS,EAAGuF,GAAK,EAAGA,IAIlC,GAHA2f,EAAehL,EAAO3U,GAGI,eAAtB2f,EAAahH,MAiBjB,GAR0B,gBAAtBgH,EAAahH,OACX8G,EAAWE,EAAaxI,UAAY2I,EAAgB,GACtDA,IAEEJ,EAAYC,EAAaxI,UAC3B2I,OAGAA,EAAgB,IAEM,SAAtBH,EAAahH,MAAmBvY,EAAM+Q,GAAGoC,QAAQ5M,KAAKgZ,EAAaxI,SAAU,CAU/E,IARA/Q,EAAOuZ,EAAaxI,QACpB8I,EAAQ7f,EAAM+Q,GAAGoC,QAAQ1V,MAAMuI,GAG/BwZ,EAAQ,GACRnP,EAAQkP,EAAalP,MACrBmO,EAAU,EAELiB,EAAK,EAAGA,EAAKI,EAAMxlB,OAAQolB,IAE9BpV,EAAMwV,EAAMJ,GAAIpV,IAChBsV,EAAU3f,EAAM+Q,GAAGkB,cAAc5H,GAC5BrK,EAAM+Q,GAAGgB,aAAa4N,KAE3BC,EAAUC,EAAMJ,GAAIzZ,KAWlB4Z,EALGC,EAAMJ,GAAIvV,OAEiB,YAArB2V,EAAMJ,GAAIvV,QAAyB,YAAY3D,KAAKqZ,GAGnD5f,EAAM+Q,GAAG2B,kBAAkBkN,GAF3B5f,EAAM+Q,GAAG2B,kBAAkB,UAAYkN,GAASjjB,QAAQ,WAAY,IAFpEqD,EAAM+Q,GAAG2B,kBAAkB,UAAYkN,GAASjjB,QAAQ,aAAc,IAOlF8E,EAAMoe,EAAMJ,GAAItlB,MAEZsH,EAAM+c,IACR3H,EAAgB,IAAI7W,EAAMyd,MAAM,OAAQ,GAAI,GAC5C5G,EAAME,QAAU/Q,EAAKnJ,MAAM2hB,EAAS/c,GACpCoV,EAAMxG,MAAUA,EAChBmP,EAAMxc,KAAK6T,IAGbA,EAAgB,IAAI7W,EAAMyd,MAAM,YAAa,IAAK,GAClD5G,EAAMY,MAAU,CAAE,CAAE,OAAQkI,IAC5B9I,EAAMxG,MAAUA,IAChBwG,EAAMmE,OAAU,UAChBnE,EAAMQ,KAAU,OAChBmI,EAAMxc,KAAK6T,GAEXA,EAAgB,IAAI7W,EAAMyd,MAAM,OAAQ,GAAI,GAC5C5G,EAAME,QAAU6I,EAChB/I,EAAMxG,MAAUA,EAChBmP,EAAMxc,KAAK6T,GAEXA,EAAgB,IAAI7W,EAAMyd,MAAM,aAAc,KAAM,GACpD5G,EAAMxG,QAAYA,EAClBwG,EAAMmE,OAAU,UAChBnE,EAAMQ,KAAU,OAChBmI,EAAMxc,KAAK6T,GAEX2H,EAAUqB,EAAMJ,GAAIpgB,WAElBmf,EAAUxY,EAAK3L,SACjBwc,EAAgB,IAAI7W,EAAMyd,MAAM,OAAQ,GAAI,GAC5C5G,EAAME,QAAU/Q,EAAKnJ,MAAM2hB,GAC3B3H,EAAMxG,MAAUA,EAChBmP,EAAMxc,KAAK6T,IAIbiJ,EAAYzb,GAAGuT,SAAWrD,EAAS3G,EAAe2G,EAAQ3U,EAAG4f,EAC/D,MAvFA,CACE5f,IACA,MAAO2U,EAAO3U,GAAGyQ,QAAUkP,EAAalP,OAA4B,cAAnBkE,EAAO3U,GAAG2Y,KACzD3Y,GAGJ,CAoFN,C,wBC9HA,IAAImgB,EAAe,YACfC,EAAe,MAGnBhmB,EAAOC,QAAU,SAAmB+F,GAClC,IAAIhE,EAGJA,EAAMgE,EAAM6N,IAAIlR,QAAQojB,EAAa,MAGrC/jB,EAAMA,EAAIW,QAAQqjB,EAAS,KAE3BhgB,EAAM6N,IAAM7R,CACd,C,wBCHA,IAAIikB,EAAU,+BAIVC,EAAsB,kBAEtBC,EAAiB,mBACjBC,EAAc,CAChBpS,EAAG,IACHqS,EAAG,IACHC,EAAG,IACHC,GAAI,KAGN,SAASC,EAAU/iB,EAAOqL,GACxB,OAAOsX,EAAYtX,EAAKsB,cAC1B,CAEA,SAASqW,EAAeC,GACtB,IAAI9gB,EAAGiX,EAAO8J,EAAkB,EAEhC,IAAK/gB,EAAI8gB,EAAarmB,OAAS,EAAGuF,GAAK,EAAGA,IACxCiX,EAAQ6J,EAAa9gB,GAEF,SAAfiX,EAAM0B,MAAoBoI,IAC5B9J,EAAME,QAAUF,EAAME,QAAQpa,QAAQwjB,EAAgBK,IAGrC,cAAf3J,EAAM0B,MAAuC,SAAf1B,EAAMQ,MACtCsJ,IAGiB,eAAf9J,EAAM0B,MAAwC,SAAf1B,EAAMQ,MACvCsJ,GAGN,CAEA,SAASC,EAAaF,GACpB,IAAI9gB,EAAGiX,EAAO8J,EAAkB,EAEhC,IAAK/gB,EAAI8gB,EAAarmB,OAAS,EAAGuF,GAAK,EAAGA,IACxCiX,EAAQ6J,EAAa9gB,GAEF,SAAfiX,EAAM0B,MAAoBoI,GACxBV,EAAQ1Z,KAAKsQ,EAAME,WACrBF,EAAME,QAAUF,EAAME,QACnBpa,QAAQ,OAAQ,KAGhBA,QAAQ,UAAW,KAAKA,QAAQ,WAAY,QAC5CA,QAAQ,cAAe,UAAUA,QAAQ,SAAU,KAEnDA,QAAQ,0BAA2B,OAEnCA,QAAQ,qBAAsB,OAC9BA,QAAQ,6BAA8B,QAI1B,cAAfka,EAAM0B,MAAuC,SAAf1B,EAAMQ,MACtCsJ,IAGiB,eAAf9J,EAAM0B,MAAwC,SAAf1B,EAAMQ,MACvCsJ,GAGN,CAGA3mB,EAAOC,QAAU,SAAiB+F,GAChC,IAAI6gB,EAEJ,GAAK7gB,EAAM+Q,GAAGtG,QAAQ8L,YAEtB,IAAKsK,EAAS7gB,EAAMuU,OAAOla,OAAS,EAAGwmB,GAAU,EAAGA,IAEhB,WAA9B7gB,EAAMuU,OAAOsM,GAAQtI,OAErB2H,EAAoB3Z,KAAKvG,EAAMuU,OAAOsM,GAAQ9J,UAChD0J,EAAezgB,EAAMuU,OAAOsM,GAAQjJ,UAGlCqI,EAAQ1Z,KAAKvG,EAAMuU,OAAOsM,GAAQ9J,UACpC6J,EAAa5gB,EAAMuU,OAAOsM,GAAQjJ,UAIxC,C,8BCrGA,IAAIpI,EAAiB,qBACjBE,EAAiB,oBACjBC,EAAiB,uBAEjBmR,EAAgB,OAChBC,EAAW,QACXC,EAAa,IAGjB,SAASC,EAAUjlB,EAAK7B,EAAOuD,GAC7B,OAAO1B,EAAIqiB,OAAO,EAAGlkB,GAASuD,EAAK1B,EAAIqiB,OAAOlkB,EAAQ,EACxD,CAEA,SAAS+mB,EAAgB3M,EAAQvU,GAC/B,IAAIJ,EAAGiX,EAAO7Q,EAAM8Y,EAAGrd,EAAKoB,EAAKse,EAAWC,EAAMC,EAAUC,EACxDC,EAAiBC,EAAiBC,EAAkBC,EACpDC,EAASC,EAAUvd,EAAGwd,EAAUC,EAAOC,EAAWC,EAItD,IAFAF,EAAQ,GAEHliB,EAAI,EAAGA,EAAI2U,EAAOla,OAAQuF,IAAK,CAKlC,IAJAiX,EAAQtC,EAAO3U,GAEfuhB,EAAY5M,EAAO3U,GAAGyQ,MAEjBhM,EAAIyd,EAAMznB,OAAS,EAAGgK,GAAK,EAAGA,IACjC,GAAIyd,EAAMzd,GAAGgM,OAAS8Q,EAAa,MAIrC,GAFAW,EAAMznB,OAASgK,EAAI,EAEA,SAAfwS,EAAM0B,KAAV,CAEAvS,EAAO6Q,EAAME,QACbtV,EAAM,EACNoB,EAAMmD,EAAK3L,OAGX4nB,EACA,MAAOxgB,EAAMoB,EAAK,CAGhB,GAFAke,EAAS1hB,UAAYoC,EACrBqd,EAAIiC,EAAS9lB,KAAK+K,IACb8Y,EAAK,MAWV,GATA6C,EAAUC,GAAW,EACrBngB,EAAMqd,EAAE3kB,MAAQ,EAChB0nB,EAAqB,MAAT/C,EAAE,GAKduC,EAAW,GAEPvC,EAAE3kB,MAAQ,GAAK,EACjBknB,EAAWrb,EAAK3E,WAAWyd,EAAE3kB,MAAQ,QAErC,IAAKkK,EAAIzE,EAAI,EAAGyE,GAAK,EAAGA,IAAK,CAC3B,GAAuB,cAAnBkQ,EAAOlQ,GAAGkU,MAA2C,cAAnBhE,EAAOlQ,GAAGkU,KAAsB,MACtE,GAAKhE,EAAOlQ,GAAG0S,QAAf,CAEAsK,EAAW9M,EAAOlQ,GAAG0S,QAAQ1V,WAAWkT,EAAOlQ,GAAG0S,QAAQ1c,OAAS,GACnE,KAHgC,CAIlC,CAQF,GAFAinB,EAAW,GAEP7f,EAAMoB,EACRye,EAAWtb,EAAK3E,WAAWI,QAE3B,IAAK4C,EAAIzE,EAAI,EAAGyE,EAAIkQ,EAAOla,OAAQgK,IAAK,CACtC,GAAuB,cAAnBkQ,EAAOlQ,GAAGkU,MAA2C,cAAnBhE,EAAOlQ,GAAGkU,KAAsB,MACtE,GAAKhE,EAAOlQ,GAAG0S,QAAf,CAEAuK,EAAW/M,EAAOlQ,GAAG0S,QAAQ1V,WAAW,GACxC,KAHgC,CAIlC,CA4CF,GAzCAkgB,EAAkB5R,EAAe0R,IAAa3R,EAAYnT,OAAO6R,aAAaiT,IAC9EG,EAAkB7R,EAAe2R,IAAa5R,EAAYnT,OAAO6R,aAAakT,IAE9EG,EAAmBjS,EAAa6R,GAChCK,EAAmBlS,EAAa8R,GAE5BI,EACFC,GAAU,EACDH,IACHC,GAAoBF,IACxBI,GAAU,IAIVF,EACFG,GAAW,EACFL,IACHG,GAAoBF,IACxBI,GAAW,IAIE,KAAbN,GAAsC,MAATxC,EAAE,IAC7BuC,GAAY,IAAgBA,GAAY,KAE1CO,EAAWD,GAAU,GAIrBA,GAAWC,IAQbD,EAAUJ,EACVK,EAAWJ,GAGRG,GAAYC,EAAjB,CAQA,GAAIA,EAEF,IAAKvd,EAAIyd,EAAMznB,OAAS,EAAGgK,GAAK,EAAGA,IAAK,CAEtC,GADA+c,EAAOU,EAAMzd,GACTyd,EAAMzd,GAAGgM,MAAQ8Q,EAAa,MAClC,GAAIC,EAAKc,SAAWL,GAAYC,EAAMzd,GAAGgM,QAAU8Q,EAAW,CAC5DC,EAAOU,EAAMzd,GAETwd,GACFE,EAAY/hB,EAAM+Q,GAAGtG,QAAQ+L,OAAO,GACpCwL,EAAahiB,EAAM+Q,GAAGtG,QAAQ+L,OAAO,KAErCuL,EAAY/hB,EAAM+Q,GAAGtG,QAAQ+L,OAAO,GACpCwL,EAAahiB,EAAM+Q,GAAGtG,QAAQ+L,OAAO,IAMvCK,EAAME,QAAUkK,EAAUpK,EAAME,QAAS+H,EAAE3kB,MAAO6nB,GAClDzN,EAAO6M,EAAKvK,OAAOE,QAAUkK,EAC3B1M,EAAO6M,EAAKvK,OAAOE,QAASqK,EAAK3f,IAAKsgB,GAExCtgB,GAAOugB,EAAW3nB,OAAS,EACvB+mB,EAAKvK,QAAUjX,IAAK6B,GAAOsgB,EAAU1nB,OAAS,GAElD2L,EAAO6Q,EAAME,QACblU,EAAMmD,EAAK3L,OAEXynB,EAAMznB,OAASgK,EACf,SAAS4d,CACX,CACF,CAGEN,EACFG,EAAM9e,KAAK,CACT6T,MAAOjX,EACP6B,IAAKqd,EAAE3kB,MACP+nB,OAAQL,EACRxR,MAAO8Q,IAEAS,GAAYC,IACrBhL,EAAME,QAAUkK,EAAUpK,EAAME,QAAS+H,EAAE3kB,MAAO6mB,GA7CpD,MAJMa,IACFhL,EAAME,QAAUkK,EAAUpK,EAAME,QAAS+H,EAAE3kB,MAAO6mB,GAkDxD,CAjJuC,CAkJzC,CACF,CAGAhnB,EAAOC,QAAU,SAAqB+F,GAEpC,IAAI6gB,EAEJ,GAAK7gB,EAAM+Q,GAAGtG,QAAQ8L,YAEtB,IAAKsK,EAAS7gB,EAAMuU,OAAOla,OAAS,EAAGwmB,GAAU,EAAGA,IAEhB,WAA9B7gB,EAAMuU,OAAOsM,GAAQtI,MACpBuI,EAAcva,KAAKvG,EAAMuU,OAAOsM,GAAQ9J,UAI7CmK,EAAgBlhB,EAAMuU,OAAOsM,GAAQjJ,SAAU5X,EAEnD,C,8BCpMA,IAAIyd,EAAQ,EAAQ,MAGpB,SAAS0E,EAAUtU,EAAKkD,EAAIqD,GAC1BrU,KAAK8N,IAAMA,EACX9N,KAAKqU,IAAMA,EACXrU,KAAKwU,OAAS,GACdxU,KAAK2U,YAAa,EAClB3U,KAAKgR,GAAKA,CACZ,CAGAoR,EAAUpnB,UAAU0iB,MAAQA,EAG5BzjB,EAAOC,QAAUkoB,C,wBCbjB,IAAIC,EAAc,0IACdC,EAAc,sDAGlBroB,EAAOC,QAAU,SAAkB+F,EAAO0Z,GACxC,IAAIrP,EAAKsV,EAAS9I,EAAOnZ,EAAIqM,EAAOlH,EAChCpB,EAAMzB,EAAMyB,IAEhB,GAAkC,KAA9BzB,EAAM6N,IAAIxM,WAAWI,GAAwB,OAAO,EAKxD,IAHAsI,EAAQ/J,EAAMyB,IACdoB,EAAM7C,EAAM6Q,SAEH,CACP,KAAMpP,GAAOoB,EAAK,OAAO,EAIzB,GAFAnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,GAEf,KAAP/D,EAAqB,OAAO,EAChC,GAAW,KAAPA,EAAqB,KAC3B,CAIA,OAFA2M,EAAMrK,EAAM6N,IAAIhR,MAAMkN,EAAQ,EAAGtI,GAE7B4gB,EAAY9b,KAAK8D,IACnBsV,EAAU3f,EAAM+Q,GAAGkB,cAAc5H,KAC5BrK,EAAM+Q,GAAGgB,aAAa4N,KAEtBjG,IACH7C,EAAgB7W,EAAMgD,KAAK,YAAa,IAAK,GAC7C6T,EAAMY,MAAU,CAAE,CAAE,OAAQkI,IAC5B9I,EAAMmE,OAAU,WAChBnE,EAAMQ,KAAU,OAEhBR,EAAgB7W,EAAMgD,KAAK,OAAQ,GAAI,GACvC6T,EAAME,QAAU/W,EAAM+Q,GAAG2B,kBAAkBrI,GAE3CwM,EAAgB7W,EAAMgD,KAAK,aAAc,KAAM,GAC/C6T,EAAMmE,OAAU,WAChBnE,EAAMQ,KAAU,QAGlBrX,EAAMyB,KAAO4I,EAAIhQ,OAAS,GACnB,MAGL+nB,EAAS7b,KAAK8D,KAChBsV,EAAU3f,EAAM+Q,GAAGkB,cAAc,UAAY5H,KACxCrK,EAAM+Q,GAAGgB,aAAa4N,KAEtBjG,IACH7C,EAAgB7W,EAAMgD,KAAK,YAAa,IAAK,GAC7C6T,EAAMY,MAAU,CAAE,CAAE,OAAQkI,IAC5B9I,EAAMmE,OAAU,WAChBnE,EAAMQ,KAAU,OAEhBR,EAAgB7W,EAAMgD,KAAK,OAAQ,GAAI,GACvC6T,EAAME,QAAU/W,EAAM+Q,GAAG2B,kBAAkBrI,GAE3CwM,EAAgB7W,EAAMgD,KAAK,aAAc,KAAM,GAC/C6T,EAAMmE,OAAU,WAChBnE,EAAMQ,KAAU,QAGlBrX,EAAMyB,KAAO4I,EAAIhQ,OAAS,GACnB,GAIX,C,wBCtEAL,EAAOC,QAAU,SAAkB+F,EAAO0Z,GACxC,IAAI3P,EAAOlH,EAAK6N,EAAQmG,EAAOyL,EAAYC,EAAUC,EAAcC,EAC/DhhB,EAAMzB,EAAMyB,IACZ/D,EAAKsC,EAAM6N,IAAIxM,WAAWI,GAE9B,GAAW,KAAP/D,EAAsB,OAAO,EAEjCqM,EAAQtI,EACRA,IACAoB,EAAM7C,EAAM6Q,OAGZ,MAAOpP,EAAMoB,GAAqC,KAA9B7C,EAAM6N,IAAIxM,WAAWI,GAAwBA,IAKjE,GAHAiP,EAAS1Q,EAAM6N,IAAIhR,MAAMkN,EAAOtI,GAChC+gB,EAAe9R,EAAOrW,OAElB2F,EAAM0iB,mBAAqB1iB,EAAM2iB,UAAUH,IAAiB,IAAMzY,EAGpE,OAFK2P,IAAQ1Z,EAAMiW,SAAWvF,GAC9B1Q,EAAMyB,KAAO+gB,GACN,EAGTF,EAAaC,EAAW9gB,EAGxB,OAA4D,KAApD6gB,EAAatiB,EAAM6N,IAAI5O,QAAQ,IAAKsjB,IAAmB,CAC7DA,EAAWD,EAAa,EAGxB,MAAOC,EAAW1f,GAA0C,KAAnC7C,EAAM6N,IAAIxM,WAAWkhB,GAA6BA,IAI3E,GAFAE,EAAeF,EAAWD,EAEtBG,IAAiBD,EAUnB,OARK9I,IACH7C,EAAY7W,EAAMgD,KAAK,cAAe,OAAQ,GAC9C6T,EAAMmE,OAAUtK,EAChBmG,EAAME,QAAU/W,EAAM6N,IAAIhR,MAAM4E,EAAK6gB,GAClC3lB,QAAQ,MAAO,KACfA,QAAQ,WAAY,OAEzBqD,EAAMyB,IAAM8gB,GACL,EAITviB,EAAM2iB,UAAUF,GAAgBH,CAClC,CAOA,OAJAtiB,EAAM0iB,kBAAmB,EAEpBhJ,IAAQ1Z,EAAMiW,SAAWvF,GAC9B1Q,EAAMyB,KAAO+gB,GACN,CACT,C,wBCzDA,SAASI,EAAkB5iB,EAAO6iB,GAChC,IAAIC,EAAWC,EAAWC,EAAQC,EAAQC,EAAcC,EACpDC,EAAYC,EACZC,EAAgB,CAAC,EACjBzgB,EAAMggB,EAAWxoB,OAErB,GAAKwI,EAAL,CAGA,IAAI0gB,EAAY,EACZC,GAAgB,EAChBC,EAAQ,GAEZ,IAAKX,EAAY,EAAGA,EAAYjgB,EAAKigB,IAqBnC,GApBAE,EAASH,EAAWC,GAEpBW,EAAMzgB,KAAK,GAMP6f,EAAWU,GAAW7S,SAAWsS,EAAOtS,QAAU8S,IAAiBR,EAAOnM,MAAQ,IACpF0M,EAAYT,GAGdU,EAAeR,EAAOnM,MAMtBmM,EAAO3oB,OAAS2oB,EAAO3oB,QAAU,EAE5B2oB,EAAOU,MAAZ,CAgBA,IAVKJ,EAAczd,eAAemd,EAAOtS,UACvC4S,EAAcN,EAAOtS,QAAU,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAGxDwS,EAAeI,EAAcN,EAAOtS,SAASsS,EAAOW,KAAO,EAAI,GAAMX,EAAO3oB,OAAS,GAErF0oB,EAAYQ,EAAYE,EAAMF,GAAa,EAE3CJ,EAAkBJ,EAEXA,EAAYG,EAAcH,GAAaU,EAAMV,GAAa,EAG/D,GAFAE,EAASJ,EAAWE,GAEhBE,EAAOvS,SAAWsS,EAAOtS,QAEzBuS,EAAOU,MAAQV,EAAOjZ,IAAM,IAE9BoZ,GAAa,GASTH,EAAOS,OAASV,EAAOW,QACpBV,EAAO5oB,OAAS2oB,EAAO3oB,QAAU,IAAM,IACtC4oB,EAAO5oB,OAAS,IAAM,GAAK2oB,EAAO3oB,OAAS,IAAM,IACnD+oB,GAAa,KAKdA,GAAY,CAKfC,EAAWN,EAAY,IAAMF,EAAWE,EAAY,GAAGY,KACrDF,EAAMV,EAAY,GAAK,EACvB,EAEFU,EAAMX,GAAaA,EAAYC,EAAYM,EAC3CI,EAAMV,GAAaM,EAEnBL,EAAOW,MAAQ,EACfV,EAAOjZ,IAAQ8Y,EACfG,EAAOS,OAAQ,EACfP,GAAmB,EAGnBK,GAAgB,EAChB,KACF,EAIqB,IAArBL,IAQFG,EAAcN,EAAOtS,SAASsS,EAAOW,KAAO,EAAI,IAAOX,EAAO3oB,QAAU,GAAK,GAAM8oB,EAxE1D,CA5Bb,CAuGlB,CAGAnpB,EAAOC,QAAU,SAAoB+F,GACnC,IAAI4jB,EACAC,EAAc7jB,EAAM6jB,YACpBhhB,EAAM7C,EAAM6jB,YAAYxpB,OAI5B,IAFAuoB,EAAkB5iB,EAAOA,EAAM6iB,YAE1Be,EAAO,EAAGA,EAAO/gB,EAAK+gB,IACrBC,EAAYD,IAASC,EAAYD,GAAMf,YACzCD,EAAkB5iB,EAAO6jB,EAAYD,GAAMf,WAGjD,C,wBC3EA,SAASiB,EAAY9jB,EAAO6iB,GAC1B,IAAIjjB,EACAmkB,EACAC,EACAnN,EACAnZ,EACAumB,EACAphB,EAAMggB,EAAWxoB,OAErB,IAAKuF,EAAIiD,EAAM,EAAGjD,GAAK,EAAGA,IACxBmkB,EAAalB,EAAWjjB,GAEE,KAAtBmkB,EAAWrT,QAAgD,KAAtBqT,EAAWrT,SAK5B,IAApBqT,EAAW/Z,MAIfga,EAAWnB,EAAWkB,EAAW/Z,KAOjCia,EAAWrkB,EAAI,GACJijB,EAAWjjB,EAAI,GAAGoK,MAAQ+Z,EAAW/Z,IAAM,GAE3C6Y,EAAWjjB,EAAI,GAAG8Q,SAAWqT,EAAWrT,QACxCmS,EAAWjjB,EAAI,GAAGiX,QAAUkN,EAAWlN,MAAQ,GAE/CgM,EAAWkB,EAAW/Z,IAAM,GAAG6M,QAAUmN,EAASnN,MAAQ,EAErEnZ,EAAKnB,OAAO6R,aAAa2V,EAAWrT,QAEpCmG,EAAgB7W,EAAMuU,OAAOwP,EAAWlN,OACxCA,EAAM0B,KAAU0L,EAAW,cAAgB,UAC3CpN,EAAMyB,IAAU2L,EAAW,SAAW,KACtCpN,EAAMwB,QAAU,EAChBxB,EAAMmE,OAAUiJ,EAAWvmB,EAAKA,EAAKA,EACrCmZ,EAAME,QAAU,GAEhBF,EAAgB7W,EAAMuU,OAAOyP,EAASnN,OACtCA,EAAM0B,KAAU0L,EAAW,eAAiB,WAC5CpN,EAAMyB,IAAU2L,EAAW,SAAW,KACtCpN,EAAMwB,SAAW,EACjBxB,EAAMmE,OAAUiJ,EAAWvmB,EAAKA,EAAKA,EACrCmZ,EAAME,QAAU,GAEZkN,IACFjkB,EAAMuU,OAAOsO,EAAWjjB,EAAI,GAAGiX,OAAOE,QAAU,GAChD/W,EAAMuU,OAAOsO,EAAWkB,EAAW/Z,IAAM,GAAG6M,OAAOE,QAAU,GAC7DnX,KAGN,CAzGA5F,EAAOC,QAAQ,EAAW,SAAkB+F,EAAO0Z,GACjD,IAAI9Z,EAAGskB,EAASrN,EACZ9M,EAAQ/J,EAAMyB,IACdiP,EAAS1Q,EAAM6N,IAAIxM,WAAW0I,GAElC,GAAI2P,EAAU,OAAO,EAErB,GAAe,KAAXhJ,GAAsC,KAAXA,EAA2B,OAAO,EAIjE,IAFAwT,EAAUlkB,EAAMmkB,WAAWnkB,EAAMyB,IAAgB,KAAXiP,GAEjC9Q,EAAI,EAAGA,EAAIskB,EAAQ7pB,OAAQuF,IAC9BiX,EAAgB7W,EAAMgD,KAAK,OAAQ,GAAI,GACvC6T,EAAME,QAAUxa,OAAO6R,aAAasC,GAEpC1Q,EAAM6iB,WAAW7f,KAAK,CAGpB0N,OAAQA,EAIRrW,OAAQ6pB,EAAQ7pB,OAIhBwc,MAAQ7W,EAAMuU,OAAOla,OAAS,EAK9B2P,KAAS,EAKT2Z,KAAQO,EAAQE,SAChBV,MAAQQ,EAAQG,YAMpB,OAFArkB,EAAMyB,KAAOyiB,EAAQ7pB,QAEd,CACT,EAkEAL,EAAOC,QAAQ,EAAc,SAAkB+F,GAC7C,IAAI4jB,EACAC,EAAc7jB,EAAM6jB,YACpBhhB,EAAM7C,EAAM6jB,YAAYxpB,OAI5B,IAFAypB,EAAY9jB,EAAOA,EAAM6iB,YAEpBe,EAAO,EAAGA,EAAO/gB,EAAK+gB,IACrBC,EAAYD,IAASC,EAAYD,GAAMf,YACzCiB,EAAY9jB,EAAO6jB,EAAYD,GAAMf,WAG3C,C,8BC7HA,IAAIpU,EAAoB,EAAQ,MAC5Bd,EAAoB,YACpBI,EAAoB,0BACpBE,EAAoB,sBAGpBqW,EAAa,uCACbC,EAAa,4BAGjBvqB,EAAOC,QAAU,SAAgB+F,EAAO0Z,GACtC,IAAIhc,EAAIiR,EAAMlR,EAAOgE,EAAMzB,EAAMyB,IAAKoB,EAAM7C,EAAM6Q,OAElD,GAAkC,KAA9B7Q,EAAM6N,IAAIxM,WAAWI,GAAwB,OAAO,EAExD,GAAIA,EAAM,EAAIoB,EAGZ,GAFAnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,EAAM,GAErB,KAAP/D,GAEF,GADAD,EAAQuC,EAAM6N,IAAIhR,MAAM4E,GAAKhE,MAAM6mB,GAC/B7mB,EAMF,OALKic,IACH/K,EAAqC,MAA9BlR,EAAM,GAAG,GAAG2M,cAAwBwE,SAASnR,EAAM,GAAGZ,MAAM,GAAI,IAAM+R,SAASnR,EAAM,GAAI,IAChGuC,EAAMiW,SAAWlI,EAAkBY,GAAQV,EAAcU,GAAQV,EAAc,QAEjFjO,EAAMyB,KAAOhE,EAAM,GAAGpD,QACf,OAIT,GADAoD,EAAQuC,EAAM6N,IAAIhR,MAAM4E,GAAKhE,MAAM8mB,GAC/B9mB,GACEkQ,EAAIc,EAAUhR,EAAM,IAGtB,OAFKic,IAAU1Z,EAAMiW,SAAWxH,EAAShR,EAAM,KAC/CuC,EAAMyB,KAAOhE,EAAM,GAAGpD,QACf,EAQf,OAFKqf,IAAU1Z,EAAMiW,SAAW,KAChCjW,EAAMyB,OACC,CACT,C,8BCvCA,IAJA,IAAI8N,EAAU,gBAEViV,EAAU,GAEL5kB,EAAI,EAAGA,EAAI,IAAKA,IAAO4kB,EAAQxhB,KAAK,GAE7C,qCACGkE,MAAM,IAAIvC,SAAQ,SAAUjH,GAAM8mB,EAAQ9mB,EAAG2D,WAAW,IAAM,CAAG,IAGpErH,EAAOC,QAAU,SAAgB+F,EAAO0Z,GACtC,IAAIhc,EAAI+D,EAAMzB,EAAMyB,IAAKoB,EAAM7C,EAAM6Q,OAErC,GAAkC,KAA9B7Q,EAAM6N,IAAIxM,WAAWI,GAAwB,OAAO,EAIxD,GAFAA,IAEIA,EAAMoB,EAAK,CAGb,GAFAnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,GAEtB/D,EAAK,KAAuB,IAAhB8mB,EAAQ9mB,GAGtB,OAFKgc,IAAU1Z,EAAMiW,SAAWjW,EAAM6N,IAAIpM,IAC1CzB,EAAMyB,KAAO,GACN,EAGT,GAAW,KAAP/D,EAAa,CACVgc,GACH1Z,EAAMgD,KAAK,YAAa,KAAM,GAGhCvB,IAEA,MAAOA,EAAMoB,EAAK,CAEhB,GADAnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,IACrB8N,EAAQ7R,GAAO,MACpB+D,GACF,CAGA,OADAzB,EAAMyB,IAAMA,GACL,CACT,CACF,CAIA,OAFKiY,IAAU1Z,EAAMiW,SAAW,MAChCjW,EAAMyB,OACC,CACT,C,6BC9CA,IAAI+L,EAAc,UAGlB,SAASiX,EAAS/mB,GAEhB,IAAIgnB,EAAU,GAALhnB,EACT,OAAQgnB,GAAM,IAAiBA,GAAM,GACvC,CAGA1qB,EAAOC,QAAU,SAAqB+F,EAAO0Z,GAC3C,IAAIhc,EAAID,EAAOoF,EAAKgU,EAChBpV,EAAMzB,EAAMyB,IAEhB,QAAKzB,EAAM+Q,GAAGtG,QAAQ0L,OAGtBtT,EAAM7C,EAAM6Q,SACsB,KAA9B7Q,EAAM6N,IAAIxM,WAAWI,IACrBA,EAAM,GAAKoB,KAKfnF,EAAKsC,EAAM6N,IAAIxM,WAAWI,EAAM,KACrB,KAAP/D,GACO,KAAPA,GACO,KAAPA,IACC+mB,EAAS/mB,MAIdD,EAAQuC,EAAM6N,IAAIhR,MAAM4E,GAAKhE,MAAM+P,KAC9B/P,IAEAic,IACH7C,EAAgB7W,EAAMgD,KAAK,cAAe,GAAI,GAC9C6T,EAAME,QAAU/W,EAAM6N,IAAIhR,MAAM4E,EAAKA,EAAMhE,EAAM,GAAGpD,SAEtD2F,EAAMyB,KAAOhE,EAAM,GAAGpD,QACf,KACT,C,8BC1CA,IAAIuV,EAAuB,2BACvBL,EAAuB,gBAG3BvV,EAAOC,QAAU,SAAe+F,EAAO0Z,GACrC,IAAIjC,EACA9I,EACAoI,EACAuG,EACA1M,EACA+T,EACAljB,EACAmjB,EACA9gB,EACAyZ,EACA1G,EACAtC,EACAxK,EACAsT,EAAO,GACPvM,EAAS9Q,EAAMyB,IACfoB,EAAM7C,EAAM6Q,OAEhB,GAAwC,KAApC7Q,EAAM6N,IAAIxM,WAAWrB,EAAMyB,KAAwB,OAAO,EAC9D,GAA4C,KAAxCzB,EAAM6N,IAAIxM,WAAWrB,EAAMyB,IAAM,GAAsB,OAAO,EAMlE,GAJAkjB,EAAa3kB,EAAMyB,IAAM,EACzBmP,EAAW5Q,EAAM+Q,GAAGI,QAAQjB,eAAelQ,EAAOA,EAAMyB,IAAM,GAAG,GAG7DmP,EAAW,EAAK,OAAO,EAG3B,GADAnP,EAAMmP,EAAW,EACbnP,EAAMoB,GAAqC,KAA9B7C,EAAM6N,IAAIxM,WAAWI,GAAsB,CAQ1D,IADAA,IACOA,EAAMoB,EAAKpB,IAEhB,GADAkN,EAAO3O,EAAM6N,IAAIxM,WAAWI,IACvB8N,EAAQZ,IAAkB,KAATA,EAAiB,MAEzC,GAAIlN,GAAOoB,EAAO,OAAO,EAkBzB,IAdAkH,EAAQtI,EACRqC,EAAM9D,EAAM+Q,GAAGI,QAAQhB,qBAAqBnQ,EAAM6N,IAAKpM,EAAKzB,EAAM6Q,QAC9D/M,EAAIyM,KACN8M,EAAOrd,EAAM+Q,GAAGkB,cAAcnO,EAAI9H,KAC9BgE,EAAM+Q,GAAGgB,aAAasL,GACxB5b,EAAMqC,EAAIrC,IAEV4b,EAAO,IAMXtT,EAAQtI,EACDA,EAAMoB,EAAKpB,IAEhB,GADAkN,EAAO3O,EAAM6N,IAAIxM,WAAWI,IACvB8N,EAAQZ,IAAkB,KAATA,EAAiB,MAMzC,GADA7K,EAAM9D,EAAM+Q,GAAGI,QAAQf,eAAepQ,EAAM6N,IAAKpM,EAAKzB,EAAM6Q,QACxDpP,EAAMoB,GAAOkH,IAAUtI,GAAOqC,EAAIyM,IAMpC,IALAgN,EAAQzZ,EAAI9H,IACZyF,EAAMqC,EAAIrC,IAIHA,EAAMoB,EAAKpB,IAEhB,GADAkN,EAAO3O,EAAM6N,IAAIxM,WAAWI,IACvB8N,EAAQZ,IAAkB,KAATA,EAAiB,WAGzC4O,EAAQ,GAGV,GAAI9b,GAAOoB,GAAqC,KAA9B7C,EAAM6N,IAAIxM,WAAWI,GAErC,OADAzB,EAAMyB,IAAMqP,GACL,EAETrP,GACF,KAAO,CAIL,GAAoC,qBAAzBzB,EAAMoU,IAAIoJ,WAA8B,OAAO,EAmB1D,GAjBI/b,EAAMoB,GAAqC,KAA9B7C,EAAM6N,IAAIxM,WAAWI,IACpCsI,EAAQtI,EAAM,EACdA,EAAMzB,EAAM+Q,GAAGI,QAAQjB,eAAelQ,EAAOyB,GACzCA,GAAO,EACT6b,EAAQtd,EAAM6N,IAAIhR,MAAMkN,EAAOtI,KAE/BA,EAAMmP,EAAW,GAGnBnP,EAAMmP,EAAW,EAKd0M,IAASA,EAAQtd,EAAM6N,IAAIhR,MAAM8nB,EAAY/T,IAElDgU,EAAM5kB,EAAMoU,IAAIoJ,WAAW5N,EAAmB0N,KACzCsH,EAEH,OADA5kB,EAAMyB,IAAMqP,GACL,EAETuM,EAAOuH,EAAIvH,KACXE,EAAQqH,EAAIrH,KACd,CA4BA,OAtBK7D,IACH3C,EAAU/W,EAAM6N,IAAIhR,MAAM8nB,EAAY/T,GAEtC5Q,EAAM+Q,GAAGC,OAAOmB,MACd4E,EACA/W,EAAM+Q,GACN/Q,EAAMoU,IACNG,EAAS,IAGXsC,EAAiB7W,EAAMgD,KAAK,QAAS,MAAO,GAC5C6T,EAAMY,MAAWA,EAAQ,CAAE,CAAE,MAAO4F,GAAQ,CAAE,MAAO,KACrDxG,EAAMe,SAAWrD,EACjBsC,EAAME,QAAWA,EAEbwG,GACF9F,EAAMzU,KAAK,CAAE,QAASua,KAI1Bvd,EAAMyB,IAAMA,EACZzB,EAAM6Q,OAAShO,GACR,CACT,C,8BCnJA,IAAI+M,EAAuB,2BACvBL,EAAuB,gBAG3BvV,EAAOC,QAAU,SAAc+F,EAAO0Z,GACpC,IAAIjC,EACA9I,EACA2O,EACA1M,EACA+T,EACAljB,EACAqC,EACA8gB,EACA/N,EACAwG,EAAO,GACPE,EAAQ,GACRzM,EAAS9Q,EAAMyB,IACfoB,EAAM7C,EAAM6Q,OACZ9G,EAAQ/J,EAAMyB,IACdojB,GAAiB,EAErB,GAAwC,KAApC7kB,EAAM6N,IAAIxM,WAAWrB,EAAMyB,KAAwB,OAAO,EAM9D,GAJAkjB,EAAa3kB,EAAMyB,IAAM,EACzBmP,EAAW5Q,EAAM+Q,GAAGI,QAAQjB,eAAelQ,EAAOA,EAAMyB,KAAK,GAGzDmP,EAAW,EAAK,OAAO,EAG3B,GADAnP,EAAMmP,EAAW,EACbnP,EAAMoB,GAAqC,KAA9B7C,EAAM6N,IAAIxM,WAAWI,GAAsB,CAW1D,IALAojB,GAAiB,EAIjBpjB,IACOA,EAAMoB,EAAKpB,IAEhB,GADAkN,EAAO3O,EAAM6N,IAAIxM,WAAWI,IACvB8N,EAAQZ,IAAkB,KAATA,EAAiB,MAEzC,GAAIlN,GAAOoB,EAAO,OAAO,EAMzB,GAFAkH,EAAQtI,EACRqC,EAAM9D,EAAM+Q,GAAGI,QAAQhB,qBAAqBnQ,EAAM6N,IAAKpM,EAAKzB,EAAM6Q,QAC9D/M,EAAIyM,GAAI,CAWV,IAVA8M,EAAOrd,EAAM+Q,GAAGkB,cAAcnO,EAAI9H,KAC9BgE,EAAM+Q,GAAGgB,aAAasL,GACxB5b,EAAMqC,EAAIrC,IAEV4b,EAAO,GAKTtT,EAAQtI,EACDA,EAAMoB,EAAKpB,IAEhB,GADAkN,EAAO3O,EAAM6N,IAAIxM,WAAWI,IACvB8N,EAAQZ,IAAkB,KAATA,EAAiB,MAMzC,GADA7K,EAAM9D,EAAM+Q,GAAGI,QAAQf,eAAepQ,EAAM6N,IAAKpM,EAAKzB,EAAM6Q,QACxDpP,EAAMoB,GAAOkH,IAAUtI,GAAOqC,EAAIyM,GAMpC,IALAgN,EAAQzZ,EAAI9H,IACZyF,EAAMqC,EAAIrC,IAIHA,EAAMoB,EAAKpB,IAEhB,GADAkN,EAAO3O,EAAM6N,IAAIxM,WAAWI,IACvB8N,EAAQZ,IAAkB,KAATA,EAAiB,KAG7C,EAEIlN,GAAOoB,GAAqC,KAA9B7C,EAAM6N,IAAIxM,WAAWI,MAErCojB,GAAiB,GAEnBpjB,GACF,CAEA,GAAIojB,EAAgB,CAIlB,GAAoC,qBAAzB7kB,EAAMoU,IAAIoJ,WAA8B,OAAO,EAmB1D,GAjBI/b,EAAMoB,GAAqC,KAA9B7C,EAAM6N,IAAIxM,WAAWI,IACpCsI,EAAQtI,EAAM,EACdA,EAAMzB,EAAM+Q,GAAGI,QAAQjB,eAAelQ,EAAOyB,GACzCA,GAAO,EACT6b,EAAQtd,EAAM6N,IAAIhR,MAAMkN,EAAOtI,KAE/BA,EAAMmP,EAAW,GAGnBnP,EAAMmP,EAAW,EAKd0M,IAASA,EAAQtd,EAAM6N,IAAIhR,MAAM8nB,EAAY/T,IAElDgU,EAAM5kB,EAAMoU,IAAIoJ,WAAW5N,EAAmB0N,KACzCsH,EAEH,OADA5kB,EAAMyB,IAAMqP,GACL,EAETuM,EAAOuH,EAAIvH,KACXE,EAAQqH,EAAIrH,KACd,CAuBA,OAjBK7D,IACH1Z,EAAMyB,IAAMkjB,EACZ3kB,EAAM6Q,OAASD,EAEfiG,EAAe7W,EAAMgD,KAAK,YAAa,IAAK,GAC5C6T,EAAMY,MAASA,EAAQ,CAAE,CAAE,OAAQ4F,IAC/BE,GACF9F,EAAMzU,KAAK,CAAE,QAASua,IAGxBvd,EAAM+Q,GAAGC,OAAO+D,SAAS/U,GAEzB6W,EAAe7W,EAAMgD,KAAK,aAAc,KAAM,IAGhDhD,EAAMyB,IAAMA,EACZzB,EAAM6Q,OAAShO,GACR,CACT,C,8BC/IA,IAAI0M,EAAU,gBAGdvV,EAAOC,QAAU,SAAiB+F,EAAO0Z,GACvC,IAAIoL,EAAMjiB,EAAKkiB,EAAItjB,EAAMzB,EAAMyB,IAE/B,GAAkC,KAA9BzB,EAAM6N,IAAIxM,WAAWI,GAAyB,OAAO,EASzD,GAPAqjB,EAAO9kB,EAAMiW,QAAQ5b,OAAS,EAC9BwI,EAAM7C,EAAM6Q,QAMP6I,EACH,GAAIoL,GAAQ,GAAwC,KAAnC9kB,EAAMiW,QAAQ5U,WAAWyjB,GACxC,GAAIA,GAAQ,GAA4C,KAAvC9kB,EAAMiW,QAAQ5U,WAAWyjB,EAAO,GAAa,CAE5DC,EAAKD,EAAO,EACZ,MAAOC,GAAM,GAA0C,KAArC/kB,EAAMiW,QAAQ5U,WAAW0jB,EAAK,GAAaA,IAE7D/kB,EAAMiW,QAAUjW,EAAMiW,QAAQpZ,MAAM,EAAGkoB,GACvC/kB,EAAMgD,KAAK,YAAa,KAAM,EAChC,MACEhD,EAAMiW,QAAUjW,EAAMiW,QAAQpZ,MAAM,GAAI,GACxCmD,EAAMgD,KAAK,YAAa,KAAM,QAIhChD,EAAMgD,KAAK,YAAa,KAAM,GAIlCvB,IAGA,MAAOA,EAAMoB,GAAO0M,EAAQvP,EAAM6N,IAAIxM,WAAWI,IAASA,IAG1D,OADAzB,EAAMyB,IAAMA,GACL,CACT,C,6BCxCA,IAAIgc,EAAiB,EAAQ,MACzBjO,EAAiB,qBACjBE,EAAiB,oBACjBC,EAAiB,uBAGrB,SAASqV,EAAYnX,EAAKkD,EAAIqD,EAAKuB,GACjC5V,KAAK8N,IAAMA,EACX9N,KAAKqU,IAAMA,EACXrU,KAAKgR,GAAKA,EACVhR,KAAKwU,OAASoB,EACd5V,KAAK8jB,YAAcnf,MAAMiR,EAAUtb,QAEnC0F,KAAK0B,IAAM,EACX1B,KAAK8Q,OAAS9Q,KAAK8N,IAAIxT,OACvB0F,KAAKsQ,MAAQ,EACbtQ,KAAKkW,QAAU,GACflW,KAAKklB,aAAe,EAIpBllB,KAAKiW,MAAQ,CAAC,EAGdjW,KAAK8iB,WAAa,GAGlB9iB,KAAKmlB,iBAAmB,GAGxBnlB,KAAK4iB,UAAY,CAAC,EAClB5iB,KAAK2iB,kBAAmB,CAC1B,CAKAsC,EAAYjqB,UAAUmb,YAAc,WAClC,IAAIW,EAAQ,IAAI4G,EAAM,OAAQ,GAAI,GAKlC,OAJA5G,EAAME,QAAUhX,KAAKkW,QACrBY,EAAMxG,MAAQtQ,KAAKklB,aACnBllB,KAAKwU,OAAOvR,KAAK6T,GACjB9W,KAAKkW,QAAU,GACRY,CACT,EAMAmO,EAAYjqB,UAAUiI,KAAO,SAAUuV,EAAMD,EAAKD,GAC5CtY,KAAKkW,SACPlW,KAAKmW,cAGP,IAAIW,EAAQ,IAAI4G,EAAMlF,EAAMD,EAAKD,GAC7B8M,EAAa,KAqBjB,OAnBI9M,EAAU,IAEZtY,KAAKsQ,QACLtQ,KAAK8iB,WAAa9iB,KAAKmlB,iBAAiB/F,OAG1CtI,EAAMxG,MAAQtQ,KAAKsQ,MAEfgI,EAAU,IAEZtY,KAAKsQ,QACLtQ,KAAKmlB,iBAAiBliB,KAAKjD,KAAK8iB,YAChC9iB,KAAK8iB,WAAa,GAClBsC,EAAa,CAAEtC,WAAY9iB,KAAK8iB,aAGlC9iB,KAAKklB,aAAellB,KAAKsQ,MACzBtQ,KAAKwU,OAAOvR,KAAK6T,GACjB9W,KAAK8jB,YAAY7gB,KAAKmiB,GACftO,CACT,EASAmO,EAAYjqB,UAAUopB,WAAa,SAAUpa,EAAOqb,GAClD,IAAiB/D,EAAUC,EAAU+D,EAAOjB,EAAUC,EAClD5C,EAAkBF,EAClBG,EAAkBF,EAFlB/f,EAAMsI,EAGNub,GAAgB,EAChBC,GAAiB,EACjB1iB,EAAM9C,KAAK8Q,OACXH,EAAS3Q,KAAK8N,IAAIxM,WAAW0I,GAGjCsX,EAAWtX,EAAQ,EAAIhK,KAAK8N,IAAIxM,WAAW0I,EAAQ,GAAK,GAExD,MAAOtI,EAAMoB,GAAO9C,KAAK8N,IAAIxM,WAAWI,KAASiP,EAAUjP,IAqC3D,OAnCA4jB,EAAQ5jB,EAAMsI,EAGduX,EAAW7f,EAAMoB,EAAM9C,KAAK8N,IAAIxM,WAAWI,GAAO,GAElD8f,EAAkB5R,EAAe0R,IAAa3R,EAAYnT,OAAO6R,aAAaiT,IAC9EG,EAAkB7R,EAAe2R,IAAa5R,EAAYnT,OAAO6R,aAAakT,IAE9EG,EAAmBjS,EAAa6R,GAChCK,EAAmBlS,EAAa8R,GAE5BI,EACF4D,GAAgB,EACP9D,IACHC,GAAoBF,IACxB+D,GAAgB,IAIhB7D,EACF8D,GAAiB,EACRhE,IACHG,GAAoBF,IACxB+D,GAAiB,IAIhBH,GAIHhB,EAAYkB,EACZjB,EAAYkB,IAJZnB,EAAYkB,KAAoBC,GAAkBhE,GAClD8C,EAAYkB,KAAoBD,GAAkB9D,IAM7C,CACL4C,SAAWA,EACXC,UAAWA,EACXhqB,OAAWgrB,EAEf,EAIAL,EAAYjqB,UAAU0iB,MAAQA,EAG9BzjB,EAAOC,QAAU+qB,C,wBCzGjB,SAASlB,EAAY9jB,EAAO6iB,GAC1B,IAAIjjB,EAAGyE,EACH0f,EACAC,EACAnN,EACA2O,EAAc,GACd3iB,EAAMggB,EAAWxoB,OAErB,IAAKuF,EAAI,EAAGA,EAAIiD,EAAKjD,IACnBmkB,EAAalB,EAAWjjB,GAEE,MAAtBmkB,EAAWrT,SAIS,IAApBqT,EAAW/Z,MAIfga,EAAWnB,EAAWkB,EAAW/Z,KAEjC6M,EAAgB7W,EAAMuU,OAAOwP,EAAWlN,OACxCA,EAAM0B,KAAU,SAChB1B,EAAMyB,IAAU,IAChBzB,EAAMwB,QAAU,EAChBxB,EAAMmE,OAAU,KAChBnE,EAAME,QAAU,GAEhBF,EAAgB7W,EAAMuU,OAAOyP,EAASnN,OACtCA,EAAM0B,KAAU,UAChB1B,EAAMyB,IAAU,IAChBzB,EAAMwB,SAAW,EACjBxB,EAAMmE,OAAU,KAChBnE,EAAME,QAAU,GAE8B,SAA1C/W,EAAMuU,OAAOyP,EAASnN,MAAQ,GAAG0B,MACY,MAA7CvY,EAAMuU,OAAOyP,EAASnN,MAAQ,GAAGE,SAEnCyO,EAAYxiB,KAAKghB,EAASnN,MAAQ,IAUtC,MAAO2O,EAAYnrB,OAAQ,CACzBuF,EAAI4lB,EAAYrG,MAChB9a,EAAIzE,EAAI,EAER,MAAOyE,EAAIrE,EAAMuU,OAAOla,QAAmC,YAAzB2F,EAAMuU,OAAOlQ,GAAGkU,KAChDlU,IAGFA,IAEIzE,IAAMyE,IACRwS,EAAQ7W,EAAMuU,OAAOlQ,GACrBrE,EAAMuU,OAAOlQ,GAAKrE,EAAMuU,OAAO3U,GAC/BI,EAAMuU,OAAO3U,GAAKiX,EAEtB,CACF,CAzGA7c,EAAOC,QAAQ,EAAW,SAAuB+F,EAAO0Z,GACtD,IAAI9Z,EAAGskB,EAASrN,EAAO9L,EAAKrN,EACxBqM,EAAQ/J,EAAMyB,IACdiP,EAAS1Q,EAAM6N,IAAIxM,WAAW0I,GAElC,GAAI2P,EAAU,OAAO,EAErB,GAAe,MAAXhJ,EAA0B,OAAO,EAMrC,GAJAwT,EAAUlkB,EAAMmkB,WAAWnkB,EAAMyB,KAAK,GACtCsJ,EAAMmZ,EAAQ7pB,OACdqD,EAAKnB,OAAO6R,aAAasC,GAErB3F,EAAM,EAAK,OAAO,EAQtB,IANIA,EAAM,IACR8L,EAAgB7W,EAAMgD,KAAK,OAAQ,GAAI,GACvC6T,EAAME,QAAUrZ,EAChBqN,KAGGnL,EAAI,EAAGA,EAAImL,EAAKnL,GAAK,EACxBiX,EAAgB7W,EAAMgD,KAAK,OAAQ,GAAI,GACvC6T,EAAME,QAAUrZ,EAAKA,EAErBsC,EAAM6iB,WAAW7f,KAAK,CACpB0N,OAAQA,EACRrW,OAAQ,EACRwc,MAAQ7W,EAAMuU,OAAOla,OAAS,EAC9B2P,KAAS,EACT2Z,KAAQO,EAAQE,SAChBV,MAAQQ,EAAQG,YAMpB,OAFArkB,EAAMyB,KAAOyiB,EAAQ7pB,QAEd,CACT,EAwEAL,EAAOC,QAAQ,EAAc,SAAuB+F,GAClD,IAAI4jB,EACAC,EAAc7jB,EAAM6jB,YACpBhhB,EAAM7C,EAAM6jB,YAAYxpB,OAI5B,IAFAypB,EAAY9jB,EAAOA,EAAM6iB,YAEpBe,EAAO,EAAGA,EAAO/gB,EAAK+gB,IACrBC,EAAYD,IAASC,EAAYD,GAAMf,YACzCiB,EAAY9jB,EAAO6jB,EAAYD,GAAMf,WAG3C,C,wBCpHA,SAAS4C,EAAiB/nB,GACxB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,EACT,QACE,OAAO,EAEb,CAEA1D,EAAOC,QAAU,SAAc+F,EAAO0Z,GACpC,IAAIjY,EAAMzB,EAAMyB,IAEhB,MAAOA,EAAMzB,EAAM6Q,SAAW4U,EAAiBzlB,EAAM6N,IAAIxM,WAAWI,IAClEA,IAGF,OAAIA,IAAQzB,EAAMyB,MAEbiY,IAAU1Z,EAAMiW,SAAWjW,EAAM6N,IAAIhR,MAAMmD,EAAMyB,IAAKA,IAE3DzB,EAAMyB,IAAMA,GAEL,EACT,C,wBC/CAzH,EAAOC,QAAU,SAAuB+F,GACtC,IAAI4jB,EAAM3I,EACN5K,EAAQ,EACRkE,EAASvU,EAAMuU,OACf1R,EAAM7C,EAAMuU,OAAOla,OAEvB,IAAKupB,EAAO3I,EAAO,EAAG2I,EAAO/gB,EAAK+gB,IAG5BrP,EAAOqP,GAAMvL,QAAU,GAAGhI,IAC9BkE,EAAOqP,GAAMvT,MAAQA,EACjBkE,EAAOqP,GAAMvL,QAAU,GAAGhI,IAEJ,SAAtBkE,EAAOqP,GAAMrL,MACbqL,EAAO,EAAI/gB,GACe,SAA1B0R,EAAOqP,EAAO,GAAGrL,KAGnBhE,EAAOqP,EAAO,GAAG7M,QAAUxC,EAAOqP,GAAM7M,QAAUxC,EAAOqP,EAAO,GAAG7M,SAE/D6M,IAAS3I,IAAQ1G,EAAO0G,GAAQ1G,EAAOqP,IAE3C3I,KAIA2I,IAAS3I,IACX1G,EAAOla,OAAS4gB,EAEpB,C,wBC1BA,SAASwC,EAAMlF,EAAMD,EAAKD,GAMxBtY,KAAKwY,KAAWA,EAOhBxY,KAAKuY,IAAWA,EAOhBvY,KAAK0X,MAAW,KAOhB1X,KAAKyJ,IAAW,KAWhBzJ,KAAKsY,QAAWA,EAOhBtY,KAAKsQ,MAAW,EAOhBtQ,KAAK6X,SAAW,KAQhB7X,KAAKgX,QAAW,GAOhBhX,KAAKib,OAAW,GAWhBjb,KAAKsX,KAAW,GAOhBtX,KAAK2lB,KAAW,KAQhB3lB,KAAKiT,OAAW,EAQhBjT,KAAKqY,QAAW,CAClB,CAQAqF,EAAM1iB,UAAUyc,UAAY,SAAmB1O,GAC7C,IAAI2O,EAAO7X,EAAGmL,EAEd,IAAKhL,KAAK0X,MAAS,OAAQ,EAI3B,IAFAA,EAAQ1X,KAAK0X,MAER7X,EAAI,EAAGmL,EAAM0M,EAAMpd,OAAQuF,EAAImL,EAAKnL,IACvC,GAAI6X,EAAM7X,GAAG,KAAOkJ,EAAQ,OAAOlJ,EAErC,OAAQ,CACV,EAQA6d,EAAM1iB,UAAU4qB,SAAW,SAAkBC,GACvC7lB,KAAK0X,MACP1X,KAAK0X,MAAMzU,KAAK4iB,GAEhB7lB,KAAK0X,MAAQ,CAAEmO,EAEnB,EAQAnI,EAAM1iB,UAAU8qB,QAAU,SAAiB/c,EAAMxM,GAC/C,IAAIoP,EAAM3L,KAAKyX,UAAU1O,GACrB8c,EAAW,CAAE9c,EAAMxM,GAEnBoP,EAAM,EACR3L,KAAK4lB,SAASC,GAEd7lB,KAAK0X,MAAM/L,GAAOka,CAEtB,EAQAnI,EAAM1iB,UAAU+qB,QAAU,SAAiBhd,GACzC,IAAI4C,EAAM3L,KAAKyX,UAAU1O,GAAOxM,EAAQ,KAIxC,OAHIoP,GAAO,IACTpP,EAAQyD,KAAK0X,MAAM/L,GAAK,IAEnBpP,CACT,EASAmhB,EAAM1iB,UAAUgrB,SAAW,SAAkBjd,EAAMxM,GACjD,IAAIoP,EAAM3L,KAAKyX,UAAU1O,GAErB4C,EAAM,EACR3L,KAAK4lB,SAAS,CAAE7c,EAAMxM,IAEtByD,KAAK0X,MAAM/L,GAAK,GAAK3L,KAAK0X,MAAM/L,GAAK,GAAK,IAAMpP,CAEpD,EAGAtC,EAAOC,QAAUwjB,C,wBClMjB,IAAIuI,EAAc,CAAC,EAEnB,SAASC,EAAeC,GACtB,IAAItmB,EAAGlC,EAAIsY,EAAQgQ,EAAYE,GAC/B,GAAIlQ,EAAS,OAAOA,EAIpB,IAFAA,EAAQgQ,EAAYE,GAAW,GAE1BtmB,EAAI,EAAGA,EAAI,IAAKA,IACnBlC,EAAKnB,OAAO6R,aAAaxO,GACzBoW,EAAMhT,KAAKtF,GAGb,IAAKkC,EAAI,EAAGA,EAAIsmB,EAAQ7rB,OAAQuF,IAC9BlC,EAAKwoB,EAAQ7kB,WAAWzB,GACxBoW,EAAMtY,GAAM,KAAO,IAAMA,EAAGY,SAAS,IAAIwR,eAAejT,OAAO,GAGjE,OAAOmZ,CACT,CAKA,SAASpD,EAAOlT,EAAQwmB,GACtB,IAAIlQ,EAQJ,MANuB,kBAAZkQ,IACTA,EAAUtT,EAAOC,cAGnBmD,EAAQiQ,EAAeC,GAEhBxmB,EAAO/C,QAAQ,qBAAqB,SAASwpB,GAClD,IAAIvmB,EAAGkW,EAAGsQ,EAAIC,EAAIC,EAAIC,EAAIC,EACtBnoB,EAAS,GAEb,IAAKuB,EAAI,EAAGkW,EAAIqQ,EAAI9rB,OAAQuF,EAAIkW,EAAGlW,GAAK,EACtCwmB,EAAKxX,SAASuX,EAAItpB,MAAM+C,EAAI,EAAGA,EAAI,GAAI,IAEnCwmB,EAAK,IACP/nB,GAAU2X,EAAMoQ,GAIE,OAAV,IAALA,IAAwBxmB,EAAI,EAAIkW,IAEnCuQ,EAAKzX,SAASuX,EAAItpB,MAAM+C,EAAI,EAAGA,EAAI,GAAI,IAEnB,OAAV,IAALymB,KACHG,EAAQJ,GAAM,EAAK,KAAe,GAALC,EAG3BhoB,GADEmoB,EAAM,IACE,KAEAjqB,OAAO6R,aAAaoY,GAGhC5mB,GAAK,GAKW,OAAV,IAALwmB,IAAwBxmB,EAAI,EAAIkW,IAEnCuQ,EAAKzX,SAASuX,EAAItpB,MAAM+C,EAAI,EAAGA,EAAI,GAAI,IACvC0mB,EAAK1X,SAASuX,EAAItpB,MAAM+C,EAAI,EAAGA,EAAI,GAAI,IAEnB,OAAV,IAALymB,IAAuC,OAAV,IAALC,KAC3BE,EAAQJ,GAAM,GAAM,MAAYC,GAAM,EAAK,KAAe,GAALC,EAGnDjoB,GADEmoB,EAAM,MAAUA,GAAO,OAAUA,GAAO,MAChC,MAEAjqB,OAAO6R,aAAaoY,GAGhC5mB,GAAK,GAKW,OAAV,IAALwmB,IAAwBxmB,EAAI,EAAIkW,IAEnCuQ,EAAKzX,SAASuX,EAAItpB,MAAM+C,EAAI,EAAGA,EAAI,GAAI,IACvC0mB,EAAK1X,SAASuX,EAAItpB,MAAM+C,EAAI,EAAGA,EAAI,GAAI,IACvC2mB,EAAK3X,SAASuX,EAAItpB,MAAM+C,EAAI,GAAIA,EAAI,IAAK,IAErB,OAAV,IAALymB,IAAuC,OAAV,IAALC,IAAuC,OAAV,IAALC,KACnDC,EAAQJ,GAAM,GAAM,QAAcC,GAAM,GAAM,OAAaC,GAAM,EAAK,KAAe,GAALC,EAE5EC,EAAM,OAAWA,EAAM,QACzBnoB,GAAU,QAEVmoB,GAAO,MACPnoB,GAAU9B,OAAO6R,aAAa,OAAUoY,GAAO,IAAK,OAAgB,KAANA,KAGhE5mB,GAAK,GAKTvB,GAAU,IAGZ,OAAOA,CACT,GACF,CAGAuU,EAAOC,aAAiB,cACxBD,EAAO6T,eAAiB,GAGxBzsB,EAAOC,QAAU2Y,C,uBCrHjB,IAAI8T,EAAc,CAAC,EAMnB,SAASC,EAAeT,GACtB,IAAItmB,EAAGlC,EAAIsY,EAAQ0Q,EAAYR,GAC/B,GAAIlQ,EAAS,OAAOA,EAIpB,IAFAA,EAAQ0Q,EAAYR,GAAW,GAE1BtmB,EAAI,EAAGA,EAAI,IAAKA,IACnBlC,EAAKnB,OAAO6R,aAAaxO,GAErB,cAAc2G,KAAK7I,GAErBsY,EAAMhT,KAAKtF,GAEXsY,EAAMhT,KAAK,KAAO,IAAMpD,EAAEtB,SAAS,IAAIwR,eAAejT,OAAO,IAIjE,IAAK+C,EAAI,EAAGA,EAAIsmB,EAAQ7rB,OAAQuF,IAC9BoW,EAAMkQ,EAAQ7kB,WAAWzB,IAAMsmB,EAAQtmB,GAGzC,OAAOoW,CACT,CAUA,SAASxD,EAAO9S,EAAQwmB,EAASU,GAC/B,IAAIhnB,EAAGkW,EAAGnH,EAAMkY,EAAU7Q,EACtB3X,EAAS,GAcb,IAZuB,kBAAZ6nB,IAETU,EAAeV,EACfA,EAAU1T,EAAOK,cAGQ,qBAAhB+T,IACTA,GAAc,GAGhB5Q,EAAQ2Q,EAAeT,GAElBtmB,EAAI,EAAGkW,EAAIpW,EAAOrF,OAAQuF,EAAIkW,EAAGlW,IAGpC,GAFA+O,EAAOjP,EAAO2B,WAAWzB,GAErBgnB,GAAwB,KAATjY,GAAyB/O,EAAI,EAAIkW,GAC9C,iBAAiBvP,KAAK7G,EAAO7C,MAAM+C,EAAI,EAAGA,EAAI,IAChDvB,GAAUqB,EAAO7C,MAAM+C,EAAGA,EAAI,GAC9BA,GAAK,OAKT,GAAI+O,EAAO,IACTtQ,GAAU2X,EAAMrH,QAIlB,GAAIA,GAAQ,OAAUA,GAAQ,MAA9B,CACE,GAAIA,GAAQ,OAAUA,GAAQ,OAAU/O,EAAI,EAAIkW,IAC9C+Q,EAAWnnB,EAAO2B,WAAWzB,EAAI,GAC7BinB,GAAY,OAAUA,GAAY,OAAQ,CAC5CxoB,GAAUyoB,mBAAmBpnB,EAAOE,GAAKF,EAAOE,EAAI,IACpDA,IACA,QACF,CAEFvB,GAAU,WAEZ,MAEAA,GAAUyoB,mBAAmBpnB,EAAOE,IAGtC,OAAOvB,CACT,CAEAmU,EAAOK,aAAiB,uBACxBL,EAAOiU,eAAiB,YAGxBzsB,EAAOC,QAAUuY,C,wBC7FjBxY,EAAOC,QAAU,SAAgBoQ,GAC/B,IAAIhM,EAAS,GAkBb,OAhBAA,GAAUgM,EAAIgI,UAAY,GAC1BhU,GAAUgM,EAAI0c,QAAU,KAAO,GAC/B1oB,GAAUgM,EAAI2c,KAAO3c,EAAI2c,KAAO,IAAM,GAElC3c,EAAI+H,WAA2C,IAA/B/H,EAAI+H,SAASnT,QAAQ,KAEvCZ,GAAU,IAAMgM,EAAI+H,SAAW,IAE/B/T,GAAUgM,EAAI+H,UAAY,GAG5B/T,GAAUgM,EAAI4c,KAAO,IAAM5c,EAAI4c,KAAO,GACtC5oB,GAAUgM,EAAI6c,UAAY,GAC1B7oB,GAAUgM,EAAIe,QAAU,GACxB/M,GAAUgM,EAAI8c,MAAQ,GAEf9oB,CACT,C,8BCrBArE,EAAOC,QAAQuY,OAAS,EAAxB,KACAxY,EAAOC,QAAQ2Y,OAAS,EAAxB,MACA5Y,EAAOC,QAAQwY,OAAS,EAAxB,MACAzY,EAAOC,QAAQkY,MAAf,O,wBCuCA,SAASiV,IACPrnB,KAAKsS,SAAW,KAChBtS,KAAKgnB,QAAU,KACfhnB,KAAKinB,KAAO,KACZjnB,KAAKknB,KAAO,KACZlnB,KAAKqS,SAAW,KAChBrS,KAAKonB,KAAO,KACZpnB,KAAKqL,OAAS,KACdrL,KAAKmnB,SAAW,IAClB,CAMA,IAAIG,EAAkB,oBAClBC,EAAc,WAGdC,EAAoB,qCAIpBC,EAAS,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MAGhDC,EAAS,CAAE,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM1kB,OAAOykB,GAGlDE,EAAa,CAAE,KAAO3kB,OAAO0kB,GAK7BE,EAAe,CAAE,IAAK,IAAK,IAAK,IAAK,KAAM5kB,OAAO2kB,GAClDE,EAAkB,CAAE,IAAK,IAAK,KAC9BC,EAAiB,IACjBC,EAAsB,yBACtBC,EAAoB,+BAIpBC,EAAmB,CACjB,YAAc,EACd,eAAe,GAGjBC,EAAkB,CAChB,MAAQ,EACR,OAAS,EACT,KAAO,EACP,QAAU,EACV,MAAQ,EACR,SAAS,EACT,UAAU,EACV,QAAQ,EACR,WAAW,EACX,SAAS,GAIf,SAASC,EAAS7d,EAAK8d,GACrB,GAAI9d,GAAOA,aAAe+c,EAAO,OAAO/c,EAExC,IAAI+d,EAAI,IAAIhB,EAEZ,OADAgB,EAAEjW,MAAM9H,EAAK8d,GACNC,CACT,CAEAhB,EAAIrsB,UAAUoX,MAAQ,SAAS9H,EAAK8d,GAClC,IAAIvoB,EAAGkW,EAAGuS,EAAYC,EAAKvB,EACvBwB,EAAOle,EAMX,GAFAke,EAAOA,EAAK1Y,QAEPsY,GAA+C,IAA1B9d,EAAInD,MAAM,KAAK7M,OAAc,CAErD,IAAImuB,EAAajB,EAAkBtsB,KAAKstB,GACxC,GAAIC,EAKF,OAJAzoB,KAAKmnB,SAAWsB,EAAW,GACvBA,EAAW,KACbzoB,KAAKqL,OAASod,EAAW,IAEpBzoB,IAEX,CAEA,IAAImC,EAAQmlB,EAAgBpsB,KAAKstB,GAoBjC,GAnBIrmB,IACFA,EAAQA,EAAM,GACdmmB,EAAanmB,EAAMkI,cACnBrK,KAAKsS,SAAWnQ,EAChBqmB,EAAOA,EAAKlK,OAAOnc,EAAM7H,UAOvB8tB,GAAqBjmB,GAASqmB,EAAK9qB,MAAM,2BAC3CspB,EAAgC,OAAtBwB,EAAKlK,OAAO,EAAG,IACrB0I,GAAa7kB,GAAS8lB,EAAiB9lB,KACzCqmB,EAAOA,EAAKlK,OAAO,GACnBte,KAAKgnB,SAAU,KAIdiB,EAAiB9lB,KACjB6kB,GAAY7kB,IAAU+lB,EAAgB/lB,IAAU,CAkBnD,IAUI8kB,EAAMyB,EAVNC,GAAW,EACf,IAAK9oB,EAAI,EAAGA,EAAIgoB,EAAgBvtB,OAAQuF,IACtC0oB,EAAMC,EAAKtpB,QAAQ2oB,EAAgBhoB,KACtB,IAAT0oB,KAA4B,IAAbI,GAAkBJ,EAAMI,KACzCA,EAAUJ,GA0Bd,IAjBEG,GAFe,IAAbC,EAEOH,EAAKI,YAAY,KAIjBJ,EAAKI,YAAY,IAAKD,IAKjB,IAAZD,IACFzB,EAAOuB,EAAK1rB,MAAM,EAAG4rB,GACrBF,EAAOA,EAAK1rB,MAAM4rB,EAAS,GAC3B1oB,KAAKinB,KAAOA,GAId0B,GAAW,EACN9oB,EAAI,EAAGA,EAAI+nB,EAAattB,OAAQuF,IACnC0oB,EAAMC,EAAKtpB,QAAQ0oB,EAAa/nB,KACnB,IAAT0oB,KAA4B,IAAbI,GAAkBJ,EAAMI,KACzCA,EAAUJ,IAIG,IAAbI,IACFA,EAAUH,EAAKluB,QAGS,MAAtBkuB,EAAKG,EAAU,IAAcA,IACjC,IAAIE,EAAOL,EAAK1rB,MAAM,EAAG6rB,GACzBH,EAAOA,EAAK1rB,MAAM6rB,GAGlB3oB,KAAK8oB,UAAUD,GAIf7oB,KAAKqS,SAAWrS,KAAKqS,UAAY,GAIjC,IAAI0W,EAAoC,MAArB/oB,KAAKqS,SAAS,IACe,MAA5CrS,KAAKqS,SAASrS,KAAKqS,SAAS/X,OAAS,GAGzC,IAAKyuB,EAAc,CACjB,IAAIC,EAAYhpB,KAAKqS,SAASlL,MAAM,MACpC,IAAKtH,EAAI,EAAGkW,EAAIiT,EAAU1uB,OAAQuF,EAAIkW,EAAGlW,IAAK,CAC5C,IAAIopB,EAAOD,EAAUnpB,GACrB,GAAKopB,IACAA,EAAKvrB,MAAMqqB,GAAsB,CAEpC,IADA,IAAImB,EAAU,GACL5kB,EAAI,EAAGuB,EAAIojB,EAAK3uB,OAAQgK,EAAIuB,EAAGvB,IAClC2kB,EAAK3nB,WAAWgD,GAAK,IAIvB4kB,GAAW,IAEXA,GAAWD,EAAK3kB,GAIpB,IAAK4kB,EAAQxrB,MAAMqqB,GAAsB,CACvC,IAAIoB,EAAaH,EAAUlsB,MAAM,EAAG+C,GAChCupB,EAAUJ,EAAUlsB,MAAM+C,EAAI,GAC9BwpB,EAAMJ,EAAKvrB,MAAMsqB,GACjBqB,IACFF,EAAWlmB,KAAKomB,EAAI,IACpBD,EAAQE,QAAQD,EAAI,KAElBD,EAAQ9uB,SACVkuB,EAAOY,EAAQhhB,KAAK,KAAOogB,GAE7BxoB,KAAKqS,SAAW8W,EAAW/gB,KAAK,KAChC,KACF,CACF,CACF,CACF,CAEIpI,KAAKqS,SAAS/X,OAASwtB,IACzB9nB,KAAKqS,SAAW,IAKd0W,IACF/oB,KAAKqS,SAAWrS,KAAKqS,SAASiM,OAAO,EAAGte,KAAKqS,SAAS/X,OAAS,GAEnE,CAGA,IAAI8sB,EAAOoB,EAAKtpB,QAAQ,MACV,IAAVkoB,IAEFpnB,KAAKonB,KAAOoB,EAAKlK,OAAO8I,GACxBoB,EAAOA,EAAK1rB,MAAM,EAAGsqB,IAEvB,IAAImC,EAAKf,EAAKtpB,QAAQ,KAWtB,OAVY,IAARqqB,IACFvpB,KAAKqL,OAASmd,EAAKlK,OAAOiL,GAC1Bf,EAAOA,EAAK1rB,MAAM,EAAGysB,IAEnBf,IAAQxoB,KAAKmnB,SAAWqB,GACxBN,EAAgBI,IAChBtoB,KAAKqS,WAAarS,KAAKmnB,WACzBnnB,KAAKmnB,SAAW,IAGXnnB,IACT,EAEAqnB,EAAIrsB,UAAU8tB,UAAY,SAASD,GACjC,IAAI3B,EAAOK,EAAYrsB,KAAK2tB,GACxB3B,IACFA,EAAOA,EAAK,GACC,MAATA,IACFlnB,KAAKknB,KAAOA,EAAK5I,OAAO,IAE1BuK,EAAOA,EAAKvK,OAAO,EAAGuK,EAAKvuB,OAAS4sB,EAAK5sB,SAEvCuuB,IAAQ7oB,KAAKqS,SAAWwW,EAC9B,EAEA5uB,EAAOC,QAAUiuB,C,sJCpTjB,MAAMqB,EAAS,WAGTC,EAAO,GACPC,EAAO,EACPC,EAAO,GACPC,EAAO,GACPC,EAAO,IACPC,EAAc,GACdC,EAAW,IACXC,EAAY,IAGZC,EAAgB,QAChBC,EAAgB,aAChBC,EAAkB,4BAGlBC,EAAS,CACd,SAAY,kDACZ,YAAa,iDACb,gBAAiB,iBAIZC,EAAgBZ,EAAOC,EACvBhtB,EAAQC,KAAKD,MACb4tB,EAAqB9tB,OAAO6R,aAUlC,SAASkc,EAAM/R,GACd,MAAM,IAAIgS,WAAWJ,EAAO5R,GAC7B,CAUA,SAAS/O,EAAIghB,EAAOC,GACnB,MAAMpsB,EAAS,GACf,IAAIhE,EAASmwB,EAAMnwB,OACnB,MAAOA,IACNgE,EAAOhE,GAAUowB,EAASD,EAAMnwB,IAEjC,OAAOgE,CACR,CAYA,SAASqsB,EAAUC,EAAQF,GAC1B,MAAMG,EAAQD,EAAOzjB,MAAM,KAC3B,IAAI7I,EAAS,GACTusB,EAAMvwB,OAAS,IAGlBgE,EAASusB,EAAM,GAAK,IACpBD,EAASC,EAAM,IAGhBD,EAASA,EAAOhuB,QAAQutB,EAAiB,KACzC,MAAMW,EAASF,EAAOzjB,MAAM,KACtB4jB,EAAUthB,EAAIqhB,EAAQJ,GAAUtiB,KAAK,KAC3C,OAAO9J,EAASysB,CACjB,CAeA,SAASC,EAAWrrB,GACnB,MAAMsrB,EAAS,GACf,IAAIC,EAAU,EACd,MAAM5wB,EAASqF,EAAOrF,OACtB,MAAO4wB,EAAU5wB,EAAQ,CACxB,MAAMiC,EAAQoD,EAAO2B,WAAW4pB,KAChC,GAAI3uB,GAAS,OAAUA,GAAS,OAAU2uB,EAAU5wB,EAAQ,CAE3D,MAAM6wB,EAAQxrB,EAAO2B,WAAW4pB,KACR,QAAX,MAARC,GACJF,EAAOhoB,OAAe,KAAR1G,IAAkB,KAAe,KAAR4uB,GAAiB,QAIxDF,EAAOhoB,KAAK1G,GACZ2uB,IAEF,MACCD,EAAOhoB,KAAK1G,EAEd,CACA,OAAO0uB,CACR,CAUA,MAAMG,EAAaC,GAAc7uB,OAAO0R,iBAAiBmd,GAWnDC,EAAe,SAASC,GAC7B,OAAIA,GAAa,IAAQA,EAAY,GACvBA,EAAY,GAAlB,GAEJA,GAAa,IAAQA,EAAY,GAC7BA,EAAY,GAEhBA,GAAa,IAAQA,EAAY,IAC7BA,EAAY,GAEb9B,CACR,EAaM+B,EAAe,SAASC,EAAOC,GAGpC,OAAOD,EAAQ,GAAK,IAAMA,EAAQ,MAAgB,GAARC,IAAc,EACzD,EAOMC,EAAQ,SAASC,EAAOC,EAAWC,GACxC,IAAIjmB,EAAI,EAGR,IAFA+lB,EAAQE,EAAYpvB,EAAMkvB,EAAQ/B,GAAQ+B,GAAS,EACnDA,GAASlvB,EAAMkvB,EAAQC,GACOD,EAAQvB,EAAgBV,GAAQ,EAAG9jB,GAAK4jB,EACrEmC,EAAQlvB,EAAMkvB,EAAQvB,GAEvB,OAAO3tB,EAAMmJ,GAAKwkB,EAAgB,GAAKuB,GAASA,EAAQhC,GACzD,EASM/W,EAAS,SAASpS,GAEvB,MAAMwqB,EAAS,GACTc,EAActrB,EAAMnG,OAC1B,IAAIuF,EAAI,EACJhC,EAAIksB,EACJiC,EAAOlC,EAMPmC,EAAQxrB,EAAMmoB,YAAYoB,GAC1BiC,EAAQ,IACXA,EAAQ,GAGT,IAAK,IAAI3nB,EAAI,EAAGA,EAAI2nB,IAAS3nB,EAExB7D,EAAMa,WAAWgD,IAAM,KAC1BimB,EAAM,aAEPU,EAAOhoB,KAAKxC,EAAMa,WAAWgD,IAM9B,IAAK,IAAIlK,EAAQ6xB,EAAQ,EAAIA,EAAQ,EAAI,EAAG7xB,EAAQ2xB,GAAwC,CAO3F,MAAMG,EAAOrsB,EACb,IAAK,IAAIssB,EAAI,EAAGtmB,EAAI4jB,GAA0B5jB,GAAK4jB,EAAM,CAEpDrvB,GAAS2xB,GACZxB,EAAM,iBAGP,MAAMkB,EAAQH,EAAa7qB,EAAMa,WAAWlH,MAExCqxB,GAAShC,GACZc,EAAM,iBAEHkB,EAAQ/uB,GAAO8sB,EAAS3pB,GAAKssB,IAChC5B,EAAM,YAGP1qB,GAAK4rB,EAAQU,EACb,MAAMpN,EAAIlZ,GAAKmmB,EAAOtC,EAAQ7jB,GAAKmmB,EAAOrC,EAAOA,EAAO9jB,EAAImmB,EAE5D,GAAIP,EAAQ1M,EACX,MAGD,MAAMqN,EAAa3C,EAAO1K,EACtBoN,EAAIzvB,EAAM8sB,EAAS4C,IACtB7B,EAAM,YAGP4B,GAAKC,CAEN,CAEA,MAAMC,EAAMpB,EAAO3wB,OAAS,EAC5B0xB,EAAOL,EAAM9rB,EAAIqsB,EAAMG,EAAa,GAARH,GAIxBxvB,EAAMmD,EAAIwsB,GAAO7C,EAAS3rB,GAC7B0sB,EAAM,YAGP1sB,GAAKnB,EAAMmD,EAAIwsB,GACfxsB,GAAKwsB,EAGLpB,EAAO1R,OAAO1Z,IAAK,EAAGhC,EAEvB,CAEA,OAAOrB,OAAO0R,iBAAiB+c,EAChC,EASMxY,EAAS,SAAShS,GACvB,MAAMwqB,EAAS,GAGfxqB,EAAQuqB,EAAWvqB,GAGnB,MAAMsrB,EAActrB,EAAMnG,OAG1B,IAAIuD,EAAIksB,EACJ6B,EAAQ,EACRI,EAAOlC,EAGX,IAAK,MAAMwC,KAAgB7rB,EACtB6rB,EAAe,KAClBrB,EAAOhoB,KAAKqnB,EAAmBgC,IAIjC,MAAMC,EAActB,EAAO3wB,OAC3B,IAAIkyB,EAAiBD,EAMjBA,GACHtB,EAAOhoB,KAAK+mB,GAIb,MAAOwC,EAAiBT,EAAa,CAIpC,IAAIxuB,EAAIisB,EACR,IAAK,MAAM8C,KAAgB7rB,EACtB6rB,GAAgBzuB,GAAKyuB,EAAe/uB,IACvCA,EAAI+uB,GAMN,MAAMG,EAAwBD,EAAiB,EAC3CjvB,EAAIM,EAAInB,GAAO8sB,EAASoC,GAASa,IACpClC,EAAM,YAGPqB,IAAUruB,EAAIM,GAAK4uB,EACnB5uB,EAAIN,EAEJ,IAAK,MAAM+uB,KAAgB7rB,EAI1B,GAHI6rB,EAAezuB,KAAO+tB,EAAQpC,GACjCe,EAAM,YAEH+B,IAAiBzuB,EAAG,CAEvB,IAAI6uB,EAAId,EACR,IAAK,IAAI/lB,EAAI4jB,GAA0B5jB,GAAK4jB,EAAM,CACjD,MAAM1K,EAAIlZ,GAAKmmB,EAAOtC,EAAQ7jB,GAAKmmB,EAAOrC,EAAOA,EAAO9jB,EAAImmB,EAC5D,GAAIU,EAAI3N,EACP,MAED,MAAM4N,EAAUD,EAAI3N,EACdqN,EAAa3C,EAAO1K,EAC1BkM,EAAOhoB,KACNqnB,EAAmBkB,EAAazM,EAAI4N,EAAUP,EAAY,KAE3DM,EAAIhwB,EAAMiwB,EAAUP,EACrB,CAEAnB,EAAOhoB,KAAKqnB,EAAmBkB,EAAakB,EAAG,KAC/CV,EAAOL,EAAMC,EAAOa,EAAuBD,IAAmBD,GAC9DX,EAAQ,IACNY,CACH,GAGCZ,IACA/tB,CAEH,CACA,OAAOotB,EAAO7iB,KAAK,GACpB,EAaMwK,EAAY,SAASnS,GAC1B,OAAOkqB,EAAUlqB,GAAO,SAASd,GAChC,OAAOsqB,EAAczjB,KAAK7G,GACvBkT,EAAOlT,EAAO7C,MAAM,GAAGuN,eACvB1K,CACJ,GACD,EAaM4S,EAAU,SAAS9R,GACxB,OAAOkqB,EAAUlqB,GAAO,SAASd,GAChC,OAAOuqB,EAAc1jB,KAAK7G,GACvB,OAAS8S,EAAO9S,GAChBA,CACJ,GACD,EAKM8R,EAAW,CAMhB,QAAW,QAQX,KAAQ,CACP,OAAUuZ,EACV,OAAUI,GAEX,OAAUvY,EACV,OAAUJ,EACV,QAAWF,EACX,UAAaK,GAId,G,WC3bA3Y,EAAOC,QAAQ,oB,WCAfD,EAAOC,QAAQ,uN,WCAfD,EAAOC,QAAQ,o2D,WCAfD,EAAOC,QAAQ,0D,8BCEfA,EAAQ0yB,IAAM,EAAd,MACA1yB,EAAQ2yB,GAAR,QACA3yB,EAAQ4yB,GAAR,QACA5yB,EAAQ6yB,EAAR,QACA7yB,EAAQ8yB,EAAR,O,WCNA/yB,EAAOC,QAAQ,kI,yICEX+yB,GAAc,QAAgB,CAC9BlkB,KAAM,cACNmkB,MAAO,CACH7sB,OAAQ,CACJmY,KAAMhc,OACN2wB,UAAU,GAEdziB,QAAS,CACL8N,KAAM3T,OACNsoB,UAAU,IAGlBC,KAAM,WACF,MAAO,CACHpc,GAAI,KAEZ,EACAqc,SAAU,CACNrW,QAAS,WACL,IAAIsW,EACAxf,EAAM9N,KAAKK,OACf,OAA0B,QAAlBitB,EAAKttB,KAAKgR,UAAuB,IAAPsc,OAAgB,EAASA,EAAG7Y,OAAO3G,EACzE,GAEJyf,QAAS,WACL,IAAID,EACJttB,KAAKgR,GAAK,IAAI,IAAJ,CAAuC,QAAvBsc,EAAKttB,KAAK0K,eAA4B,IAAP4iB,EAAgBA,EAAK,CAAC,EACnF,EACA7Y,OAAQ,WACJ,OAAO,IAAA+Y,GAAE,MAAO,CAAEC,UAAWztB,KAAKgX,SACtC,IAEJ,U,UCrBA0W,EAAe,CACb3kB,KAAM,cACNmkB,MAAO,CACH1P,MAAOhhB,OACPmxB,QAASnxB,OACToxB,IAAKpxB,S,qOCbLqxB,EAAc,EAEpB,I,cCgEA,MAAAH,EAAe,CACb3kB,KAAM,cACNwK,WAAY,CACVua,YAAWA,I,4BAjDb,MAAMtQ,GAAQuQ,EAAAA,EAAAA,IAAS,CAAC,GAClBJ,GAAUI,EAAAA,EAAAA,IAAS,CAAC,GACpBH,GAAMG,EAAAA,EAAAA,IAAS,CAAC,GAChBC,GAAgBD,EAAAA,EAAAA,IAAS,IAEzBE,EAAYC,UAChB,MAAM5vB,cAAuB6vB,MAAM,sCAAuC,CAACC,OAAQ,SAASC,OAE5F,OADAC,QAAQC,IAAIjwB,GACLA,CAAM,EAETkwB,EAAM,SAASrtB,GACnB,GAAS,IAALA,EAAS,MAAO,CAAC,EACrB,MAAMstB,EAAI,CAAC,EACX,IAAK,IAAI5uB,EAAI,EAAGA,EAAIsB,EAAE7G,SAAUuF,EAChC,CACI,MAAM0gB,EAAEpf,EAAEtB,GAAGsH,MAAM,IAAK,GACR,GAAZoZ,EAAEjmB,OACFm0B,EAAElO,EAAE,IAAM,GAEVkO,EAAElO,EAAE,IAAMmO,mBAAmBnO,EAAE,GAAG3jB,QAAQ,MAAO,KACzD,CACA,OAAO6xB,CACX,CAZc,CAYXE,OAAOC,SAASvjB,OAAOiT,OAAO,GAAGnX,MAAM,MAGlC4X,EAAIyP,EAAG,S,OAEbP,IAAYY,MAAMvwB,IAChB0vB,EAAczU,OAAO,EAAGyU,EAAc1zB,UAAWgE,GACjDkf,EAAMA,MAAQwQ,EAAcjP,GAAGvB,MAC/BmQ,EAAQA,QAAUK,EAAcjP,GAAG4O,QACnCC,EAAIA,IAAMI,EAAcjP,GAAG+P,QAC3BR,QAAQC,IAAI/Q,EAAM,I,4zBCtDhB,EAAc,EAEpB,G","sources":["webpack://GC-App2/./node_modules/core-js/internals/advance-string-index.js","webpack://GC-App2/./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack://GC-App2/./node_modules/core-js/internals/get-substitution.js","webpack://GC-App2/./node_modules/core-js/internals/regexp-exec-abstract.js","webpack://GC-App2/./node_modules/core-js/internals/regexp-exec.js","webpack://GC-App2/./node_modules/core-js/internals/regexp-flags.js","webpack://GC-App2/./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack://GC-App2/./node_modules/core-js/internals/regexp-unsupported-dot-all.js","webpack://GC-App2/./node_modules/core-js/internals/regexp-unsupported-ncg.js","webpack://GC-App2/./node_modules/core-js/internals/string-multibyte.js","webpack://GC-App2/./node_modules/core-js/internals/to-string.js","webpack://GC-App2/./node_modules/core-js/modules/es.regexp.exec.js","webpack://GC-App2/./node_modules/core-js/modules/es.string.replace.js","webpack://GC-App2/./node_modules/linkify-it/index.js","webpack://GC-App2/./node_modules/linkify-it/lib/re.js","webpack://GC-App2/./node_modules/markdown-it/index.js","webpack://GC-App2/./node_modules/markdown-it/lib/common/entities.js","webpack://GC-App2/./node_modules/markdown-it/lib/common/html_blocks.js","webpack://GC-App2/./node_modules/markdown-it/lib/common/html_re.js","webpack://GC-App2/./node_modules/markdown-it/lib/common/utils.js","webpack://GC-App2/./node_modules/markdown-it/lib/helpers/index.js","webpack://GC-App2/./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://GC-App2/./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://GC-App2/./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://GC-App2/./node_modules/markdown-it/lib/index.js","webpack://GC-App2/./node_modules/markdown-it/lib/parser_block.js","webpack://GC-App2/./node_modules/markdown-it/lib/parser_core.js","webpack://GC-App2/./node_modules/markdown-it/lib/parser_inline.js","webpack://GC-App2/./node_modules/markdown-it/lib/presets/commonmark.js","webpack://GC-App2/./node_modules/markdown-it/lib/presets/default.js","webpack://GC-App2/./node_modules/markdown-it/lib/presets/zero.js","webpack://GC-App2/./node_modules/markdown-it/lib/renderer.js","webpack://GC-App2/./node_modules/markdown-it/lib/ruler.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_block/code.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_block/fence.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_block/heading.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_block/hr.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_block/html_block.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_block/lheading.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_block/list.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_block/reference.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_block/state_block.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_block/table.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_core/block.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_core/inline.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_core/linkify.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_core/normalize.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_core/replacements.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_core/state_core.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/entity.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/escape.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/image.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/link.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/newline.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/text.js","webpack://GC-App2/./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack://GC-App2/./node_modules/markdown-it/lib/token.js","webpack://GC-App2/./node_modules/mdurl/decode.js","webpack://GC-App2/./node_modules/mdurl/encode.js","webpack://GC-App2/./node_modules/mdurl/format.js","webpack://GC-App2/./node_modules/mdurl/index.js","webpack://GC-App2/./node_modules/mdurl/parse.js","webpack://GC-App2/./node_modules/punycode/punycode.es6.js","webpack://GC-App2/./node_modules/uc.micro/categories/Cc/regex.js","webpack://GC-App2/./node_modules/uc.micro/categories/Cf/regex.js","webpack://GC-App2/./node_modules/uc.micro/categories/P/regex.js","webpack://GC-App2/./node_modules/uc.micro/categories/Z/regex.js","webpack://GC-App2/./node_modules/uc.micro/index.js","webpack://GC-App2/./node_modules/uc.micro/properties/Any/regex.js","webpack://GC-App2/./node_modules/vue-markdown-render/dist/VueMarkdown.js","webpack://GC-App2/./src/views/ArticleTemp.vue","webpack://GC-App2/./src/views/ArticleTemp.vue?2ced","webpack://GC-App2/./src/views/ArticlePage.vue","webpack://GC-App2/./src/views/ArticlePage.vue?36e4"],"sourcesContent":["'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.es/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    FORCED\n  ) {\n    var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var uncurriedNativeMethod = uncurryThis(nativeMethod);\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };\n        }\n        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n\n    defineBuiltIn(String.prototype, KEY, methods[0]);\n    defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);\n  }\n\n  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\n// eslint-disable-next-line redos/no-vulnerable -- safe\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (charAt(ch, 0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return stringSlice(str, 0, position);\n      case \"'\": return stringSlice(str, tailPos);\n      case '<':\n        capture = namedCaptures[stringSlice(ch, 1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","var call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof-raw');\nvar regexpExec = require('../internals/regexp-exec');\n\nvar $TypeError = TypeError;\n\n// `RegExpExec` abstract operation\n// https://tc39.es/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (isCallable(exec)) {\n    var result = call(exec, R, S);\n    if (result !== null) anObject(result);\n    return result;\n  }\n  if (classof(R) === 'RegExp') return call(regexpExec, R, S);\n  throw $TypeError('RegExp#exec called on incompatible receiver');\n};\n","'use strict';\n/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\n/* eslint-disable regexp/no-useless-quantifier -- testing */\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar regexpFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar shared = require('../internals/shared');\nvar create = require('../internals/object-create');\nvar getInternalState = require('../internals/internal-state').get;\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\n\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\nvar nativeExec = RegExp.prototype.exec;\nvar patchedExec = nativeExec;\nvar charAt = uncurryThis(''.charAt);\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  call(nativeExec, re1, 'a');\n  call(nativeExec, re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\n\nif (PATCH) {\n  patchedExec = function exec(string) {\n    var re = this;\n    var state = getInternalState(re);\n    var str = toString(string);\n    var raw = state.raw;\n    var result, reCopy, lastIndex, match, i, object, group;\n\n    if (raw) {\n      raw.lastIndex = re.lastIndex;\n      result = call(patchedExec, raw, str);\n      re.lastIndex = raw.lastIndex;\n      return result;\n    }\n\n    var groups = state.groups;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = call(regexpFlags, re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = replace(flags, 'y', '');\n      if (indexOf(flags, 'g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = stringSlice(str, re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = call(nativeExec, sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = stringSlice(match.input, charsAdded);\n        match[0] = stringSlice(match[0], charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/\n      call(nativeReplace, match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    if (match && groups) {\n      match.groups = object = create(null);\n      for (i = 0; i < groups.length; i++) {\n        group = groups[i];\n        object[group[0]] = match[group[1]];\n      }\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nvar UNSUPPORTED_Y = fails(function () {\n  var re = $RegExp('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\n// UC Browser bug\n// https://github.com/zloirock/core-js/issues/1008\nvar MISSED_STICKY = UNSUPPORTED_Y || fails(function () {\n  return !$RegExp('a', 'y').sticky;\n});\n\nvar BROKEN_CARET = UNSUPPORTED_Y || fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = $RegExp('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n\nmodule.exports = {\n  BROKEN_CARET: BROKEN_CARET,\n  MISSED_STICKY: MISSED_STICKY,\n  UNSUPPORTED_Y: UNSUPPORTED_Y\n};\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('.', 's');\n  return !(re.dotAll && re.exec('\\n') && re.flags === 's');\n});\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('(?<a>b)', 'g');\n  return re.exec('b').groups.a !== 'b' ||\n    'b'.replace(re, '$<a>c') !== 'bc';\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar stringSlice = uncurryThis(''.slice);\n\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toIntegerOrInfinity(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = charCodeAt(S, position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING\n          ? charAt(S, position)\n          : first\n        : CONVERT_TO_STRING\n          ? stringSlice(S, position, position + 2)\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","var classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n// `RegExp.prototype.exec` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.exec\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar fails = require('../internals/fails');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getMethod = require('../internals/get-method');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar max = Math.max;\nvar min = Math.min;\nvar concat = uncurryThis([].concat);\nvar push = uncurryThis([].push);\nvar stringIndexOf = uncurryThis(''.indexOf);\nvar stringSlice = uncurryThis(''.slice);\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = isNullOrUndefined(searchValue) ? undefined : getMethod(searchValue, REPLACE);\n      return replacer\n        ? call(replacer, searchValue, O, replaceValue)\n        : call(nativeReplace, toString(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (string, replaceValue) {\n      var rx = anObject(this);\n      var S = toString(string);\n\n      if (\n        typeof replaceValue == 'string' &&\n        stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&\n        stringIndexOf(replaceValue, '$<') === -1\n      ) {\n        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var functionalReplace = isCallable(replaceValue);\n      if (!functionalReplace) replaceValue = toString(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        push(results, result);\n        if (!global) break;\n\n        var matchStr = toString(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = toString(result[0]);\n        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) push(captures, maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = concat([matched], captures, position, S);\n          if (namedCaptures !== undefined) push(replacerArgs, namedCaptures);\n          var replacement = toString(apply(replaceValue, undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + stringSlice(S, nextSourcePosition);\n    }\n  ];\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","import { h, defineComponent } from 'vue';\nimport MarkdownIt from 'markdown-it';\nvar VueMarkdown = defineComponent({\n    name: 'VueMarkdown',\n    props: {\n        source: {\n            type: String,\n            required: true,\n        },\n        options: {\n            type: Object,\n            required: false,\n        },\n    },\n    data: function () {\n        return {\n            md: null,\n        };\n    },\n    computed: {\n        content: function () {\n            var _a;\n            var src = this.source;\n            return (_a = this.md) === null || _a === void 0 ? void 0 : _a.render(src);\n        },\n    },\n    created: function () {\n        var _a;\n        this.md = new MarkdownIt((_a = this.options) !== null && _a !== void 0 ? _a : {});\n    },\n    render: function () {\n        return h('div', { innerHTML: this.content });\n    },\n});\nexport default VueMarkdown;\n//# sourceMappingURL=VueMarkdown.js.map","<template>\r\n  <img :src=\"img\" alt=\"Article Image\" id=\"articleimg\">\r\n  <vue-markdown :source=\"article + ''\" id=\"article\"></vue-markdown>\r\n</template>\r\n\r\n<script setup>\r\nimport VueMarkdown from 'vue-markdown-render'\r\n\r\n</script>\r\n\r\n<script>\r\nimport { reactive } from 'vue';\r\n\r\nexport default {\r\n  name: 'ArticleComp',\r\n  props: {\r\n      title: String,\r\n      article: String,\r\n      img: String\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  #article {\r\n    margin: 17px;\r\n  }\r\n  #articleimg {\r\n    position: relative;\r\n    width: 95%;\r\n    left: 2.5%;\r\n    border-radius: 25px;\r\n  }\r\n</style>","import script from \"./ArticleTemp.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ArticleTemp.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ArticleTemp.vue?vue&type=style&index=0&id=91a07fc0&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <ion-page>\r\n      <ion-header :translucent=\"true\">\r\n        <ion-toolbar>\r\n          <ion-buttons slot=\"start\">\r\n            <ion-menu-button color=\"primary\"></ion-menu-button>\r\n          </ion-buttons>\r\n          <ion-title>Announcments</ion-title>\r\n        </ion-toolbar>\r\n      </ion-header>\r\n  \r\n      <ion-content :fullscreen=\"true\">\r\n        <ion-header collapse=\"condense\">\r\n          <ion-toolbar>\r\n            <ion-title size=\"large\">{{ title.title }}</ion-title>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ArticleComp :title=\"title.title\" :article=\"article.article\" :img=\"img.img\"></ArticleComp>\r\n\r\n      </ion-content>\r\n    </ion-page>\r\n  </template>\r\n  \r\n<script setup>\r\n  const title = reactive({});\r\n  const article = reactive({});\r\n  const img = reactive({});\r\n  const announcements = reactive([]); \r\n\r\n  const getNewAnn = async () => {\r\n    const result =  await (await fetch(\"http://localhost:3000/announcements\", {method: \"GET\"})).json();\r\n    console.log(result);\r\n    return result;\r\n  }\r\n  const qs = (function(a) {\r\n    if (a == \"\") return {};\r\n    const b = {};\r\n    for (let i = 0; i < a.length; ++i)\r\n    {\r\n        const p=a[i].split('=', 2);\r\n        if (p.length == 1)\r\n            b[p[0]] = \"\";\r\n        else\r\n            b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\r\n    }\r\n    return b;\r\n})(window.location.search.substr(1).split('&'));\r\n\r\n\r\n  const t = qs[\"index\"];\r\n\r\n  getNewAnn().then((result) => {\r\n    announcements.splice(0, announcements.length, ...result);\r\n    title.title = announcements[t].title;\r\n    article.article = announcements[t].article\r\n    img.img = announcements[t].imglink;\r\n    console.log(title);\r\n  });\r\n\r\n\r\n</script>\r\n\r\n  <script>\r\nimport ArticleComp from './ArticleTemp.vue';\r\n\r\nimport { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/vue';\r\n  import { reactive } from 'vue';\r\n\r\n\r\n\r\nexport default {\r\n  name: 'MyComponent',\r\n  components: {\r\n    ArticleComp\r\n  }\r\n}\r\n</script>\r\n  ","import script from \"./ArticlePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ArticlePage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["charAt","module","exports","S","index","unicode","length","uncurryThis","defineBuiltIn","regexpExec","fails","wellKnownSymbol","createNonEnumerableProperty","SPECIES","RegExpPrototype","RegExp","prototype","KEY","exec","FORCED","SHAM","SYMBOL","DELEGATES_TO_SYMBOL","O","DELEGATES_TO_EXEC","execCalled","re","constructor","flags","uncurriedNativeRegExpMethod","methods","nativeMethod","regexp","str","arg2","forceStringMethod","uncurriedNativeMethod","$exec","done","value","String","toObject","floor","Math","replace","stringSlice","slice","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","matched","position","captures","namedCaptures","replacement","tailPos","m","symbols","undefined","match","ch","capture","n","f","call","anObject","isCallable","classof","$TypeError","TypeError","R","result","toString","regexpFlags","stickyHelpers","shared","create","getInternalState","UNSUPPORTED_DOT_ALL","UNSUPPORTED_NCG","nativeReplace","nativeExec","patchedExec","indexOf","UPDATES_LAST_INDEX_WRONG","re1","re2","lastIndex","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","PATCH","string","reCopy","i","object","group","this","state","raw","groups","sticky","source","charsAdded","strCopy","multiline","input","global","arguments","that","hasIndices","ignoreCase","dotAll","unicodeSets","$RegExp","MISSED_STICKY","a","toIntegerOrInfinity","requireObjectCoercible","charCodeAt","createMethod","CONVERT_TO_STRING","$this","pos","first","second","size","codeAt","$String","argument","$","target","proto","forced","apply","fixRegExpWellKnownSymbolLogic","isNullOrUndefined","toLength","advanceStringIndex","getMethod","getSubstitution","regExpExec","REPLACE","max","min","concat","push","stringIndexOf","maybeToString","it","REPLACE_KEEPS_$0","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_SUPPORTS_NAMED_GROUPS","_","maybeCallNative","UNSAFE_SUBSTITUTE","searchValue","replaceValue","replacer","rx","res","functionalReplace","fullUnicode","results","matchStr","accumulatedResult","nextSourcePosition","j","replacerArgs","assign","obj","sources","Array","forEach","Object","keys","key","_class","isString","isObject","isRegExp","isFunction","escapeRE","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","k","hasOwnProperty","defaultSchemas","validate","text","self","tail","http","src_auth","src_host_port_strict","src_path","test","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_2ch_src_re","tlds_default","split","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","normalize","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","Match","shift","start","end","__last_index__","schema","__schema__","toLowerCase","url","createMatch","LinkifyIt","schemas","options","add","definition","set","ml","me","len","next","tld_pos","at_pos","testSchemaAt","search","list","keepOld","isArray","sort","el","idx","arr","reverse","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","has","arrayReplaceAt","src","newElements","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","code","parseInt","unescapeMd","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","trim","toUpperCase","lib","mdurl","ucmicro","parseLinkLabel","parseLinkDestination","parseLinkTitle","level","lines","ok","disableNested","found","marker","prevPos","labelEnd","posMax","oldPos","md","inline","skipToken","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","block","core","renderer","linkify","configure","presets","components","rules","ruler","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","args","env","State","process","tokens","render","parseInline","inlineMode","renderInline","Ruler","_rules","alt","tokenize","startLine","endLine","getRules","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","Core","l","_rules2","cache","pending","pushPending","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","default_rules","code_inline","slf","token","renderAttrs","content","code_block","fence","highlighted","tmpAttrs","tmpToken","info","langName","langAttrs","attrIndex","attrs","image","renderInlineAsText","children","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","hidden","nesting","tag","type","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","fn","at","opt","before","beforeName","ruleName","splice","after","afterName","chainName","silent","adjustTab","initial","lastLineEmpty","nextLine","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","bMarks","tShift","eMarks","bsCount","parentType","markup","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","tmp","skipSpacesBack","skipCharsBack","cnt","block_names","HTML_SEQUENCES","lineText","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","_endLine","destEndPos","destEndLineNo","href","label","title","references","Token","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","queue","lineStart","getLine","substr","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","firstCh","secondCh","pop","tok","isLinkOpen","isLinkClose","currentToken","nodes","ln","htmlLinkLevel","fullUrl","urlText","links","blockTokens","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","StateCore","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","open","curr","tokens_meta","postProcess","startDelim","endDelim","isStrong","scanned","scanDelims","can_open","can_close","DIGITAL_RE","NAMED_RE","ESCAPED","isLetter","lc","labelStart","ref","parseReference","pmax","ws","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","loneMarkers","isTerminatorChar","meta","attrPush","attrData","attrSet","attrGet","attrJoin","decodeCache","getDecodeCache","exclude","seq","b1","b2","b3","b4","chr","componentChars","encodeCache","getEncodeCache","keepEscaped","nextCode","encodeURIComponent","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","stringFromCharCode","error","RangeError","array","callback","mapDomain","domain","parts","labels","encoded","ucs2decode","output","counter","extra","ucs2encode","codePoints","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","inputLength","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","Any","Cc","Cf","P","Z","VueMarkdown","props","required","data","computed","_a","created","h","innerHTML","__default__","article","img","__exports__","ArticleComp","reactive","announcements","getNewAnn","async","fetch","method","json","console","log","qs","b","decodeURIComponent","window","location","then","imglink"],"sourceRoot":""}