{"version":3,"file":"js/845-legacy.2476bb01.js","mappings":"8HAEO,MAAMA,EAAU,CACnBC,cAAe,qBACfC,UAAW,cACXC,aAAc,kBAOVH,EAAQC,cACRD,EAAQE,UACRF,EAAQG,Y,8BCbhB,IAAIC,EAAc,EAAQ,MACtBC,EAAU,EAAQ,MAElBC,EAAaC,UAEbC,EAA2BC,OAAOD,yBAGlCE,EAAoCN,IAAgB,WAEtD,QAAaO,IAATC,KAAoB,OAAO,EAC/B,IAEEH,OAAOI,eAAe,GAAI,SAAU,CAAEC,UAAU,IAASC,OAAS,CACpE,CAAE,MAAOC,GACP,OAAOA,aAAiBT,SAC1B,CACF,CATwD,GAWxDU,EAAOC,QAAUR,EAAoC,SAAUS,EAAGJ,GAChE,GAAIV,EAAQc,KAAOX,EAAyBW,EAAG,UAAUL,SACvD,MAAMR,EAAW,gCACjB,OAAOa,EAAEJ,OAASA,CACtB,EAAI,SAAUI,EAAGJ,GACf,OAAOI,EAAEJ,OAASA,CACpB,C,wBCzBA,IAAIT,EAAaC,UACba,EAAmB,iBAEvBH,EAAOC,QAAU,SAAUG,GACzB,GAAIA,EAAKD,EAAkB,MAAMd,EAAW,kCAC5C,OAAOe,CACT,C,8BCNA,IAAIC,EAAU,EAAQ,MAKtBL,EAAOC,QAAUK,MAAMlB,SAAW,SAAiBmB,GACjD,MAA6B,UAAtBF,EAAQE,EACjB,C,8BCPA,IAAIC,EAAI,EAAQ,MACZC,EAAY,iBACZC,EAAQ,EAAQ,MAChBC,EAAmB,EAAQ,MAG3BC,EAAmBF,GAAM,WAE3B,OAAQJ,MAAM,GAAGO,UACnB,IAIAL,EAAE,CAAEM,OAAQ,QAASC,OAAO,EAAMC,OAAQJ,GAAoB,CAC5DC,SAAU,SAAkBI,GAC1B,OAAOR,EAAUd,KAAMsB,EAAIC,UAAUpB,OAAS,EAAIoB,UAAU,QAAKxB,EACnE,IAIFiB,EAAiB,W,8BCpBjB,IAAIH,EAAI,EAAQ,MACZW,EAAW,EAAQ,MACnBC,EAAoB,EAAQ,MAC5BC,EAAiB,EAAQ,MACzBC,EAA2B,EAAQ,MACnCZ,EAAQ,EAAQ,MAEhBa,EAAsBb,GAAM,WAC9B,OAAoD,aAA7C,GAAGc,KAAKC,KAAK,CAAE3B,OAAQ,YAAe,EAC/C,IAII4B,EAAiC,WACnC,IAEElC,OAAOI,eAAe,GAAI,SAAU,CAAEC,UAAU,IAAS2B,MAC3D,CAAE,MAAOzB,GACP,OAAOA,aAAiBT,SAC1B,CACF,EAEIqC,EAASJ,IAAwBG,IAIrClB,EAAE,CAAEM,OAAQ,QAASC,OAAO,EAAMa,MAAO,EAAGZ,OAAQW,GAAU,CAE5DH,KAAM,SAAcK,GAClB,IAAI3B,EAAIiB,EAASxB,MACbmC,EAAMV,EAAkBlB,GACxB6B,EAAWb,UAAUpB,OACzBwB,EAAyBQ,EAAMC,GAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAUC,IAC5B9B,EAAE4B,GAAOZ,UAAUc,GACnBF,IAGF,OADAT,EAAenB,EAAG4B,GACXA,CACT,G;;;;;;;CClCF,SAAUG,GAA8DjC,EAAOC,QAAQgC,GAA8O,EAArU,EAAuU,WAAqC,OAAO,SAAUC,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,OAAE,EAAoC,IAAID,GAAGC,EAAE,OAAO,QAAEF,GAAE,GAAI,GAAGP,EAAE,OAAOA,EAAEO,GAAE,GAAI,IAAIN,EAAE,IAAIS,MAAM,uBAAuBH,EAAE,KAAK,MAAON,EAAEU,KAAK,mBAAoBV,CAAE,CAAC,IAAIW,EAAER,EAAEG,GAAG,CAACtC,QAAQ,CAAC,GAAGkC,EAAEI,GAAG,GAAGd,KAAKmB,EAAE3C,SAAQ,SAASiC,GAAG,IAAIE,EAAED,EAAEI,GAAG,GAAGL,GAAG,OAAOI,EAAEF,GAAIF,EAAE,GAAEU,EAAEA,EAAE3C,QAAQiC,EAAEC,EAAEC,EAAEC,EAAE,CAAC,OAAOD,EAAEG,GAAGtC,OAAO,CAA2C,IAA1C,IAAI+B,OAAE,EAA4CO,EAAE,EAAEA,EAAEF,EAAEvC,OAAOyC,IAAID,EAAED,EAAEE,IAAI,OAAOD,CAAE,CAA5b,CAA8b,CAAC,EAAE,CAAC,SAASO,EAAQ7C,EAAOC,IAC70B,SAAW6C,GACX,aACA,IAEIC,EAyCAC,EA3CAC,EAAWH,EAAOI,kBAAoBJ,EAAOK,uBAK/C,GAAIF,EAAU,CACZ,IAAIG,EAAS,EACTC,EAAW,IAAIJ,EAASK,GACxBC,EAAUT,EAAOU,SAASC,eAAe,IAC7CJ,EAASK,QAAQH,EAAS,CACxBI,eAAe,IAEjBZ,EAAgB,WACdQ,EAAQK,KAAQR,IAAWA,EAAS,CACtC,CACF,MAAO,GAAKN,EAAOe,cAAiD,qBAA1Bf,EAAOgB,eAO/Cf,EADS,aAAcD,GAAU,uBAAwBA,EAAOU,SAASO,cAAc,UACvE,WAId,IAAIC,EAAWlB,EAAOU,SAASO,cAAc,UAC7CC,EAASC,mBAAqB,WAC5BX,IAEAU,EAASC,mBAAqB,KAC9BD,EAASE,WAAWC,YAAYH,GAChCA,EAAW,IACb,EACAlB,EAAOU,SAASY,gBAAgBC,YAAYL,EAC9C,EAEgB,WACdM,WAAWhB,EAAU,EACvB,MAxB+E,CAC/E,IAAIiB,EAAU,IAAIzB,EAAOgB,eACzBS,EAAQC,MAAMC,UAAYnB,EAC1BP,EAAgB,WACdwB,EAAQG,MAAMC,YAAY,EAC5B,CACF,CAuBF,IAAIC,EAAQ,GAEZ,SAAStB,IAEP,IAAItB,EAAG6C,EADP7B,GAAW,EAEX,IAAIlB,EAAM8C,EAAM9E,OAChB,MAAOgC,EAAK,CACV+C,EAAWD,EACXA,EAAQ,GACR5C,GAAK,EACL,QAASA,EAAIF,EACX+C,EAAS7C,KAEXF,EAAM8C,EAAM9E,MACd,CACAkD,GAAW,CACb,CAGA,SAAS8B,EAAUC,GACQ,IAArBH,EAAMpD,KAAKuD,IAAgB/B,GAC7BD,GAEJ,CALA/C,EAAOC,QAAU6E,CAOhB,GAAErD,KAAK9B,KAAuB,qBAAX,EAAAqF,EAAyB,EAAAA,EAAyB,qBAATC,KAAuBA,KAAyB,qBAAXC,OAAyBA,OAAS,CAAC,EACrI,EAAE,CAAC,GAAG,EAAE,CAAC,SAASrC,EAAQ7C,EAAOC,GACjC,aACA,IAAI6E,EAAYjC,EAAQ,GAGxB,SAASsC,IAAY,CAErB,IAAIC,EAAW,CAAC,EAEZC,EAAW,CAAC,YACZC,EAAY,CAAC,aACbC,EAAU,CAAC,WAIf,SAASC,EAAQC,GACf,GAAwB,oBAAbA,EACT,MAAM,IAAInG,UAAU,+BAEtBK,KAAK+F,MAAQH,EACb5F,KAAKiF,MAAQ,GACbjF,KAAKgG,aAAU,EACXF,IAAaN,GACfS,EAAsBjG,KAAM8F,EAEhC,CAoBA,SAASI,EAAUC,EAASC,EAAaC,GACvCrG,KAAKmG,QAAUA,EACY,oBAAhBC,IACTpG,KAAKoG,YAAcA,EACnBpG,KAAKsG,cAAgBtG,KAAKuG,oBAEF,oBAAfF,IACTrG,KAAKqG,WAAaA,EAClBrG,KAAKwG,aAAexG,KAAKyG,kBAE7B,CAcA,SAASC,EAAOP,EAASQ,EAAMC,GAC7BzB,GAAU,WACR,IAAI0B,EACJ,IACEA,EAAcF,EAAKC,EACrB,CAAE,MAAOrE,GACP,OAAOkD,EAASqB,OAAOX,EAAS5D,EAClC,CACIsE,IAAgBV,EAClBV,EAASqB,OAAOX,EAAS,IAAIxG,UAAU,uCAEvC8F,EAASsB,QAAQZ,EAASU,EAE9B,GACF,CAiCA,SAASG,EAAQC,GAEf,IAAIC,EAAOD,GAAOA,EAAIC,KACtB,GAAID,IAAuB,kBAARA,GAAmC,oBAARA,IAAuC,oBAATC,EAC1E,OAAO,WACLA,EAAKC,MAAMF,EAAK1F,UAClB,CAEJ,CAEA,SAAS0E,EAAsBX,EAAM8B,GAEnC,IAAI3D,GAAS,EACb,SAAS4D,EAAQT,GACXnD,IAGJA,GAAS,EACTgC,EAASqB,OAAOxB,EAAMsB,GACxB,CAEA,SAASU,EAAUV,GACbnD,IAGJA,GAAS,EACTgC,EAASsB,QAAQzB,EAAMsB,GACzB,CAEA,SAASW,IACPH,EAASE,EAAWD,EACtB,CAEA,IAAIG,EAASC,EAASF,GACA,UAAlBC,EAAOE,QACTL,EAAQG,EAAOZ,MAEnB,CAEA,SAASa,EAASd,EAAMC,GACtB,IAAIe,EAAM,CAAC,EACX,IACEA,EAAIf,MAAQD,EAAKC,GACjBe,EAAID,OAAS,SACf,CAAE,MAAOnF,GACPoF,EAAID,OAAS,QACbC,EAAIf,MAAQrE,CACd,CACA,OAAOoF,CACT,CAGA,SAASZ,EAAQH,GACf,OAAIA,aAAiB5G,KACZ4G,EAEFnB,EAASsB,QAAQ,IAAI/G,KAAKwF,GAAWoB,EAC9C,CAGA,SAASE,EAAOc,GACd,IAAIzB,EAAU,IAAInG,KAAKwF,GACvB,OAAOC,EAASqB,OAAOX,EAASyB,EAClC,CAGA,SAASC,EAAIC,GACX,IAAIxC,EAAOtF,KACX,GAAiD,mBAA7CH,OAAOkI,UAAUC,SAASlG,KAAKgG,GACjC,OAAO9H,KAAK8G,OAAO,IAAInH,UAAU,qBAGnC,IAAIwC,EAAM2F,EAAS3H,OACfsD,GAAS,EACb,IAAKtB,EACH,OAAOnC,KAAK+G,QAAQ,IAGtB,IAAIkB,EAAS,IAAItH,MAAMwB,GACnB+F,EAAW,EACX7F,GAAK,EACL8D,EAAU,IAAInG,KAAKwF,GAEvB,QAASnD,EAAIF,EACXgG,EAAYL,EAASzF,GAAIA,GAE3B,OAAO8D,EACP,SAASgC,EAAYvB,EAAOvE,GAO1B,SAAS+F,EAAeC,GACtBJ,EAAO5F,GAAKgG,IACNH,IAAa/F,GAAQsB,IACzBA,GAAS,EACTgC,EAASsB,QAAQZ,EAAS8B,GAE9B,CAZA3C,EAAKyB,QAAQH,GAAOM,KAAKkB,GAAgB,SAAUhI,GAC5CqD,IACHA,GAAS,EACTgC,EAASqB,OAAOX,EAAS/F,GAE7B,GAQF,CACF,CAGA,SAASkI,EAAKR,GACZ,IAAIxC,EAAOtF,KACX,GAAiD,mBAA7CH,OAAOkI,UAAUC,SAASlG,KAAKgG,GACjC,OAAO9H,KAAK8G,OAAO,IAAInH,UAAU,qBAGnC,IAAIwC,EAAM2F,EAAS3H,OACfsD,GAAS,EACb,IAAKtB,EACH,OAAOnC,KAAK+G,QAAQ,IAGtB,IAAI1E,GAAK,EACL8D,EAAU,IAAInG,KAAKwF,GAEvB,QAASnD,EAAIF,EACX2D,EAASgC,EAASzF,IAEpB,OAAO8D,EACP,SAASL,EAASc,GAChBtB,EAAKyB,QAAQH,GAAOM,MAAK,SAAUqB,GAC5B9E,IACHA,GAAS,EACTgC,EAASsB,QAAQZ,EAASoC,GAE9B,IAAG,SAAUnI,GACNqD,IACHA,GAAS,EACTgC,EAASqB,OAAOX,EAAS/F,GAE7B,GACF,CACF,CAhPAC,EAAOC,QAAUuF,EAcjBA,EAAQkC,UAAU,SAAW,SAAU1B,GACrC,OAAOrG,KAAKkH,KAAK,KAAMb,EACzB,EACAR,EAAQkC,UAAUb,KAAO,SAAUd,EAAaC,GAC9C,GAA2B,oBAAhBD,GAA8BpG,KAAK+F,QAAUJ,GAChC,oBAAfU,GAA6BrG,KAAK+F,QAAUL,EACnD,OAAO1F,KAET,IAAImG,EAAU,IAAInG,KAAKwI,YAAYhD,GACnC,GAAIxF,KAAK+F,QAAUH,EAAS,CAC1B,IAAIE,EAAW9F,KAAK+F,QAAUJ,EAAYS,EAAcC,EACxDK,EAAOP,EAASL,EAAU9F,KAAKgG,QACjC,MACEhG,KAAKiF,MAAMpD,KAAK,IAAIqE,EAAUC,EAASC,EAAaC,IAGtD,OAAOF,CACT,EAYAD,EAAU6B,UAAUzB,cAAgB,SAAUM,GAC5CnB,EAASsB,QAAQ/G,KAAKmG,QAASS,EACjC,EACAV,EAAU6B,UAAUxB,mBAAqB,SAAUK,GACjDF,EAAO1G,KAAKmG,QAASnG,KAAKoG,YAAaQ,EACzC,EACAV,EAAU6B,UAAUvB,aAAe,SAAUI,GAC3CnB,EAASqB,OAAO9G,KAAKmG,QAASS,EAChC,EACAV,EAAU6B,UAAUtB,kBAAoB,SAAUG,GAChDF,EAAO1G,KAAKmG,QAASnG,KAAKqG,WAAYO,EACxC,EAkBAnB,EAASsB,QAAU,SAAUzB,EAAMsB,GACjC,IAAIY,EAASC,EAAST,EAASJ,GAC/B,GAAsB,UAAlBY,EAAOE,OACT,OAAOjC,EAASqB,OAAOxB,EAAMkC,EAAOZ,OAEtC,IAAIQ,EAAWI,EAAOZ,MAEtB,GAAIQ,EACFnB,EAAsBX,EAAM8B,OACvB,CACL9B,EAAKS,MAAQJ,EACbL,EAAKU,QAAUY,EACf,IAAIvE,GAAK,EACLF,EAAMmD,EAAKL,MAAM9E,OACrB,QAASkC,EAAIF,EACXmD,EAAKL,MAAM5C,GAAGiE,cAAcM,EAEhC,CACA,OAAOtB,CACT,EACAG,EAASqB,OAAS,SAAUxB,EAAMlF,GAChCkF,EAAKS,MAAQL,EACbJ,EAAKU,QAAU5F,EACf,IAAIiC,GAAK,EACLF,EAAMmD,EAAKL,MAAM9E,OACrB,QAASkC,EAAIF,EACXmD,EAAKL,MAAM5C,GAAGmE,aAAapG,GAE7B,OAAOkF,CACT,EAqDAO,EAAQkB,QAAUA,EAQlBlB,EAAQiB,OAASA,EAMjBjB,EAAQgC,IAAMA,EAuCdhC,EAAQyC,KAAOA,CAmCf,EAAE,CAAC,EAAI,IAAI,EAAE,CAAC,SAASpF,EAAQ7C,EAAOC,IACtC,SAAW6C,GACX,aAC8B,oBAAnBA,EAAO0C,UAChB1C,EAAO0C,QAAU3C,EAAQ,GAG1B,GAAEpB,KAAK9B,KAAuB,qBAAX,EAAAqF,EAAyB,EAAAA,EAAyB,qBAATC,KAAuBA,KAAyB,qBAAXC,OAAyBA,OAAS,CAAC,EACrI,EAAE,CAAC,EAAI,IAAI,EAAE,CAAC,SAASrC,EAAQ7C,EAAOC,GACtC,aAEA,IAAImI,EAA4B,oBAAXC,QAAoD,kBAApBA,OAAOC,SAAwB,SAAU1B,GAAO,cAAcA,CAAK,EAAI,SAAUA,GAAO,OAAOA,GAAyB,oBAAXyB,QAAyBzB,EAAIuB,cAAgBE,QAAUzB,IAAQyB,OAAOX,UAAY,gBAAkBd,CAAK,EAE3Q,SAAS2B,EAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAInJ,UAAU,oCAAwC,CAExJ,SAASoJ,IAEL,IACI,GAAyB,qBAAdC,UACP,OAAOA,UAEX,GAA+B,qBAApBC,gBACP,OAAOA,gBAEX,GAA4B,qBAAjBC,aACP,OAAOA,aAEX,GAA0B,qBAAfC,WACP,OAAOA,WAEX,GAA2B,qBAAhBC,YACP,OAAOA,WAEf,CAAE,MAAO7G,GACL,MACJ,CACJ,CAEA,IAAI8G,EAAMN,IAEV,SAASO,IACL,IAGI,IAAKD,IAAQA,EAAIE,KACb,OAAO,EAMX,IAAIC,EAAmC,qBAAjBC,cAAgC,4BAA4BC,KAAKC,UAAUC,aAAe,SAASF,KAAKC,UAAUC,aAAe,aAAaF,KAAKC,UAAUE,UAE/KC,EAA4B,oBAAVC,QAAsE,IAA9CA,MAAM/B,WAAWgC,QAAQ,gBAQvE,QAASR,GAAYM,IAAkC,qBAAdd,WAKlB,qBAAhBiB,WACX,CAAE,MAAO1H,GACL,OAAO,CACX,CACJ,CAQA,SAAS2H,EAAWC,EAAOC,GAEvBD,EAAQA,GAAS,GACjBC,EAAaA,GAAc,CAAC,EAC5B,IACI,OAAO,IAAIC,KAAKF,EAAOC,EAC3B,CAAE,MAAO7H,GACL,GAAe,cAAXA,EAAE+H,KACF,MAAM/H,EAIV,IAFA,IAAIgI,EAAiC,qBAAhBC,YAA8BA,YAAuC,qBAAlBC,cAAgCA,cAA0C,qBAAnBC,eAAiCA,eAAiBC,kBAC7KC,EAAU,IAAIL,EACTlI,EAAI,EAAGA,EAAI8H,EAAMhK,OAAQkC,GAAK,EACnCuI,EAAQC,OAAOV,EAAM9H,IAEzB,OAAOuI,EAAQE,QAAQV,EAAWW,KACtC,CACJ,CAIuB,qBAAZlF,SAGP3C,EAAQ,GAEZ,IAAI8H,EAAYnF,QAEhB,SAASoF,EAAgB9E,EAAS+E,GAC1BA,GACA/E,EAAQe,MAAK,SAAUM,GACnB0D,EAAS,KAAM1D,EACnB,IAAG,SAAUpH,GACT8K,EAAS9K,EACb,GAER,CAEA,SAAS+K,EAAoBhF,EAAS+E,EAAUE,GACpB,oBAAbF,GACP/E,EAAQe,KAAKgE,GAGY,oBAAlBE,GACPjF,EAAQ,SAASiF,EAEzB,CAEA,SAASC,EAAaC,GAOlB,MALmB,kBAARA,IACPC,QAAQC,KAAKF,EAAM,2CACnBA,EAAMG,OAAOH,IAGVA,CACX,CAEA,SAASI,IACL,GAAInK,UAAUpB,QAAqD,oBAApCoB,UAAUA,UAAUpB,OAAS,GACxD,OAAOoB,UAAUA,UAAUpB,OAAS,EAE5C,CAKA,IAAIwL,EAA4B,mCAC5BC,OAAgB,EAChBC,EAAa,CAAC,EACd7D,EAAWnI,OAAOkI,UAAUC,SAG5B8D,EAAY,WACZC,EAAa,YAOjB,SAASC,EAAwBC,GAI7B,IAHA,IAAI9L,EAAS8L,EAAI9L,OACb+L,EAAM,IAAIC,YAAYhM,GACtBiM,EAAM,IAAIC,WAAWH,GAChB7J,EAAI,EAAGA,EAAIlC,EAAQkC,IACxB+J,EAAI/J,GAAK4J,EAAIK,WAAWjK,GAE5B,OAAO6J,CACX,CAiBA,SAASK,EAAgClD,GACrC,OAAO,IAAI2B,GAAU,SAAUjE,GAC3B,IAAIyF,EAAMnD,EAAIoD,YAAYd,EAA2BI,GACjDW,EAAOxC,EAAW,CAAC,KACvBsC,EAAIG,YAAYhB,GAA2BiB,IAAIF,EAAM,OAErDF,EAAIK,QAAU,SAAUtK,GAGpBA,EAAEuK,iBACFvK,EAAEwK,kBACFhG,GAAQ,EACZ,EAEAyF,EAAIQ,WAAa,WACb,IAAIC,EAAgBtD,UAAUC,UAAUsD,MAAM,iBAC1CC,EAAcxD,UAAUC,UAAUsD,MAAM,UAG5CnG,EAAQoG,IAAgBF,GAAiBG,SAASH,EAAc,GAAI,KAAO,GAC/E,CACJ,IAAG,UAAS,WACR,OAAO,CACX,GACJ,CAEA,SAASI,EAAkBhE,GACvB,MAA6B,mBAAlBuC,EACAZ,EAAUjE,QAAQ6E,GAEtBW,EAAgClD,GAAKnC,MAAK,SAAUN,GAEvD,OADAgF,EAAgBhF,EACTgF,CACX,GACJ,CAEA,SAAS0B,EAAgBC,GACrB,IAAIC,EAAY3B,EAAW0B,EAAOjD,MAG9BmD,EAAoB,CAAC,EAEzBA,EAAkBtH,QAAU,IAAI6E,GAAU,SAAUjE,EAASD,GACzD2G,EAAkB1G,QAAUA,EAC5B0G,EAAkB3G,OAASA,CAC/B,IAGA0G,EAAUE,mBAAmB7L,KAAK4L,GAG7BD,EAAUG,QAGXH,EAAUG,QAAUH,EAAUG,QAAQzG,MAAK,WACvC,OAAOuG,EAAkBtH,OAC7B,IAJAqH,EAAUG,QAAUF,EAAkBtH,OAM9C,CAEA,SAASyH,EAAkBL,GACvB,IAAIC,EAAY3B,EAAW0B,EAAOjD,MAG9BmD,EAAoBD,EAAUE,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkB1G,UACX0G,EAAkBtH,OAEjC,CAEA,SAAS2H,EAAiBP,EAAQQ,GAC9B,IAAIP,EAAY3B,EAAW0B,EAAOjD,MAG9BmD,EAAoBD,EAAUE,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkB3G,OAAOiH,GAClBN,EAAkBtH,OAEjC,CAEA,SAAS6H,EAAeT,EAAQU,GAC5B,OAAO,IAAIjD,GAAU,SAAUjE,EAASD,GAGpC,GAFA+E,EAAW0B,EAAOjD,MAAQuB,EAAW0B,EAAOjD,OAAS4D,IAEjDX,EAAOY,GAAI,CACX,IAAIF,EAIA,OAAOlH,EAAQwG,EAAOY,IAHtBb,EAAgBC,GAChBA,EAAOY,GAAGC,OAIlB,CAEA,IAAIC,EAAS,CAACd,EAAOjD,MAEjB2D,GACAI,EAAOxM,KAAK0L,EAAOe,SAGvB,IAAIC,EAAUlF,EAAIE,KAAKpC,MAAMkC,EAAKgF,GAE9BJ,IACAM,EAAQC,gBAAkB,SAAUjM,GAChC,IAAI4L,EAAKI,EAAQ/G,OACjB,IACI2G,EAAGM,kBAAkBlB,EAAOmB,WACxBnM,EAAEoM,YAAc,GAEhBR,EAAGM,kBAAkB9C,EAE7B,CAAE,MAAOiD,GACL,GAAgB,oBAAZA,EAAGtE,KAGH,MAAMsE,EAFNrD,QAAQC,KAAK,iBAAmB+B,EAAOjD,KAA1B,oCAA4E/H,EAAEoM,WAAa,eAAiBpM,EAAEsM,WAAa,sBAAwBtB,EAAOmB,UAAY,oBAI3L,CACJ,GAGJH,EAAQO,QAAU,SAAUvM,GACxBA,EAAEuK,iBACFhG,EAAOyH,EAAQnO,MACnB,EAEAmO,EAAQQ,UAAY,WAChB,IAAIZ,EAAKI,EAAQ/G,OACjB2G,EAAGa,gBAAkB,SAAUzM,GAM3BA,EAAEpB,OAAOiN,OACb,EACArH,EAAQoH,GACRP,EAAkBL,EACtB,CACJ,GACJ,CAEA,SAAS0B,EAAuB1B,GAC5B,OAAOS,EAAeT,GAAQ,EAClC,CAEA,SAAS2B,EAAuB3B,GAC5B,OAAOS,EAAeT,GAAQ,EAClC,CAEA,SAAS4B,EAAiB5B,EAAQ6B,GAC9B,IAAK7B,EAAOY,GACR,OAAO,EAGX,IAAIkB,GAAc9B,EAAOY,GAAGmB,iBAAiBC,SAAShC,EAAOmB,WACzDc,EAAcjC,EAAOe,QAAUf,EAAOY,GAAGG,QACzCmB,EAAYlC,EAAOe,QAAUf,EAAOY,GAAGG,QAY3C,GAVIkB,IAGIjC,EAAOe,UAAYc,GACnB7D,QAAQC,KAAK,iBAAmB+B,EAAOjD,KAA1B,uCAA8EiD,EAAOY,GAAGG,QAAU,eAAiBf,EAAOe,QAAU,KAGrJf,EAAOe,QAAUf,EAAOY,GAAGG,SAG3BmB,GAAaJ,EAAY,CAIzB,GAAIA,EAAY,CACZ,IAAIK,EAAanC,EAAOY,GAAGG,QAAU,EACjCoB,EAAanC,EAAOe,UACpBf,EAAOe,QAAUoB,EAEzB,CAEA,OAAO,CACX,CAEA,OAAO,CACX,CAGA,SAASC,EAAYjD,GACjB,OAAO,IAAI1B,GAAU,SAAUjE,EAASD,GACpC,IAAI8I,EAAS,IAAIC,WACjBD,EAAOd,QAAUhI,EACjB8I,EAAOE,UAAY,SAAUvN,GACzB,IAAIwN,EAASC,KAAKzN,EAAEpB,OAAOqG,QAAU,IACrCT,EAAQ,CACJkJ,6BAA6B,EAC7BhM,KAAM8L,EACNhF,KAAM2B,EAAK3B,MAEnB,EACA6E,EAAOM,mBAAmBxD,EAC9B,GACJ,CAGA,SAASyD,EAAYC,GACjB,IAAIC,EAAYrE,EAAwBsE,KAAKF,EAAYnM,OACzD,OAAOiG,EAAW,CAACmG,GAAY,CAAEtF,KAAMqF,EAAYrF,MACvD,CAGA,SAASwF,EAAe3J,GACpB,OAAOA,GAASA,EAAMqJ,2BAC1B,CAMA,SAASO,EAAYtF,GACjB,IAAI5F,EAAOtF,KAEPmG,EAAUb,EAAKmL,aAAavJ,MAAK,WACjC,IAAIsG,EAAY3B,EAAWvG,EAAKoL,QAAQpG,MAExC,GAAIkD,GAAaA,EAAUG,QACvB,OAAOH,EAAUG,OAEzB,IAGA,OADAxC,EAAoBhF,EAAS+E,EAAUA,GAChC/E,CACX,CAKA,SAASwK,EAAcpD,GACnBD,EAAgBC,GAKhB,IAHA,IAAIC,EAAY3B,EAAW0B,EAAOjD,MAC9BsG,EAAUpD,EAAUoD,QAEfvO,EAAI,EAAGA,EAAIuO,EAAQzQ,OAAQkC,IAAK,CACrC,IAAIwO,EAASD,EAAQvO,GACjBwO,EAAOH,QAAQvC,KACf0C,EAAOH,QAAQvC,GAAGC,QAClByC,EAAOH,QAAQvC,GAAK,KAE5B,CAGA,OAFAZ,EAAOY,GAAK,KAELc,EAAuB1B,GAAQrG,MAAK,SAAUiH,GAEjD,OADAZ,EAAOY,GAAKA,EACRgB,EAAiB5B,GAEV2B,EAAuB3B,GAE3BY,CACX,IAAGjH,MAAK,SAAUiH,GAGdZ,EAAOY,GAAKX,EAAUW,GAAKA,EAC3B,IAAK,IAAI9L,EAAI,EAAGA,EAAIuO,EAAQzQ,OAAQkC,IAChCuO,EAAQvO,GAAGqO,QAAQvC,GAAKA,CAEhC,IAAG,UAAS,SAAUJ,GAElB,MADAD,EAAiBP,EAAQQ,GACnBA,CACV,GACJ,CAIA,SAAS+C,EAAkBvD,EAAQwD,EAAM7F,EAAU8F,QAC/BjR,IAAZiR,IACAA,EAAU,GAGd,IACI,IAAIC,EAAK1D,EAAOY,GAAG1B,YAAYc,EAAOmB,UAAWqC,GACjD7F,EAAS,KAAM+F,EACnB,CAAE,MAAOlD,GACL,GAAIiD,EAAU,KAAOzD,EAAOY,IAAmB,sBAAbJ,EAAIzD,MAA6C,kBAAbyD,EAAIzD,MACtE,OAAOU,EAAUjE,UAAUG,MAAK,WAC5B,IAAKqG,EAAOY,IAAmB,kBAAbJ,EAAIzD,OAA6BiD,EAAOY,GAAGmB,iBAAiBC,SAAShC,EAAOmB,YAAcnB,EAAOe,SAAWf,EAAOY,GAAGG,QAMpI,OAJIf,EAAOY,KACPZ,EAAOe,QAAUf,EAAOY,GAAGG,QAAU,GAGlCY,EAAuB3B,EAEtC,IAAGrG,MAAK,WACJ,OAAOyJ,EAAcpD,GAAQrG,MAAK,WAC9B4J,EAAkBvD,EAAQwD,EAAM7F,EAAU8F,EAAU,EACxD,GACJ,IAAG,SAAS9F,GAGhBA,EAAS6C,EACb,CACJ,CAEA,SAASG,IACL,MAAO,CAEH0C,QAAS,GAETzC,GAAI,KAEJR,QAAS,KAETD,mBAAoB,GAE5B,CAIA,SAASwD,EAAaC,GAClB,IAAI7L,EAAOtF,KACPuN,EAAS,CACTY,GAAI,MAGR,GAAIgD,EACA,IAAK,IAAI9O,KAAK8O,EACV5D,EAAOlL,GAAK8O,EAAQ9O,GAK5B,IAAImL,EAAY3B,EAAW0B,EAAOjD,MAG7BkD,IACDA,EAAYU,IAEZrC,EAAW0B,EAAOjD,MAAQkD,GAI9BA,EAAUoD,QAAQ/O,KAAKyD,GAGlBA,EAAKmL,aACNnL,EAAKmL,WAAanL,EAAK8L,MACvB9L,EAAK8L,MAAQZ,GAIjB,IAAIa,EAAe,GAEnB,SAASC,IAGL,OAAOtG,EAAUjE,SACrB,CAEA,IAAK,IAAIwK,EAAI,EAAGA,EAAI/D,EAAUoD,QAAQzQ,OAAQoR,IAAK,CAC/C,IAAIV,EAASrD,EAAUoD,QAAQW,GAC3BV,IAAWvL,GAEX+L,EAAaxP,KAAKgP,EAAOJ,aAAa,SAASa,GAEvD,CAGA,IAAIV,EAAUpD,EAAUoD,QAAQY,MAAM,GAItC,OAAOxG,EAAUnD,IAAIwJ,GAAcnK,MAAK,WAGpC,OAFAqG,EAAOY,GAAKX,EAAUW,GAEfc,EAAuB1B,EAClC,IAAGrG,MAAK,SAAUiH,GAEd,OADAZ,EAAOY,GAAKA,EACRgB,EAAiB5B,EAAQjI,EAAKmM,eAAenD,SAEtCY,EAAuB3B,GAE3BY,CACX,IAAGjH,MAAK,SAAUiH,GACdZ,EAAOY,GAAKX,EAAUW,GAAKA,EAC3B7I,EAAKoL,QAAUnD,EAEf,IAAK,IAAImE,EAAI,EAAGA,EAAId,EAAQzQ,OAAQuR,IAAK,CACrC,IAAIb,EAASD,EAAQc,GACjBb,IAAWvL,IAEXuL,EAAOH,QAAQvC,GAAKZ,EAAOY,GAC3B0C,EAAOH,QAAQpC,QAAUf,EAAOe,QAExC,CACJ,GACJ,CAEA,SAASqD,EAAQrG,EAAKJ,GAClB,IAAI5F,EAAOtF,KAEXsL,EAAMD,EAAaC,GAEnB,IAAInF,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd4J,EAAkBxL,EAAKoL,QAAS5E,GAAW,SAAUiC,EAAKtB,GACtD,GAAIsB,EACA,OAAOjH,EAAOiH,GAGlB,IACI,IAAI6D,EAAQnF,EAAYE,YAAYrH,EAAKoL,QAAQhC,WAC7CmD,EAAMD,EAAME,IAAIxG,GAEpBuG,EAAI9C,UAAY,WACZ,IAAInI,EAAQiL,EAAIrK,YACFzH,IAAV6G,IACAA,EAAQ,MAER2J,EAAe3J,KACfA,EAAQuJ,EAAYvJ,IAExBG,EAAQH,EACZ,EAEAiL,EAAI/C,QAAU,WACVhI,EAAO+K,EAAIzR,MACf,CACJ,CAAE,MAAOmC,GACLuE,EAAOvE,EACX,CACJ,GACJ,IAAG,SAASuE,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAGA,SAAS4L,EAAQpJ,EAAUuC,GACvB,IAAI5F,EAAOtF,KAEPmG,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd4J,EAAkBxL,EAAKoL,QAAS5E,GAAW,SAAUiC,EAAKtB,GACtD,GAAIsB,EACA,OAAOjH,EAAOiH,GAGlB,IACI,IAAI6D,EAAQnF,EAAYE,YAAYrH,EAAKoL,QAAQhC,WAC7CmD,EAAMD,EAAMI,aACZC,EAAkB,EAEtBJ,EAAI9C,UAAY,WACZ,IAAImD,EAASL,EAAIrK,OAEjB,GAAI0K,EAAQ,CACR,IAAItL,EAAQsL,EAAOtL,MACf2J,EAAe3J,KACfA,EAAQuJ,EAAYvJ,IAExB,IAAIY,EAASmB,EAAS/B,EAAOsL,EAAO5G,IAAK2G,UAK1B,IAAXzK,EACAT,EAAQS,GAER0K,EAAO,aAEf,MACInL,GAER,EAEA8K,EAAI/C,QAAU,WACVhI,EAAO+K,EAAIzR,MACf,CACJ,CAAE,MAAOmC,GACLuE,EAAOvE,EACX,CACJ,GACJ,IAAG,SAASuE,EAChB,IAIA,OAFAmE,EAAgB9E,EAAS+E,GAElB/E,CACX,CAEA,SAASgM,EAAQ7G,EAAK1E,EAAOsE,GACzB,IAAI5F,EAAOtF,KAEXsL,EAAMD,EAAaC,GAEnB,IAAInF,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3C,IAAIyG,EACJjI,EAAK8L,QAAQlK,MAAK,WAEd,OADAqG,EAASjI,EAAKoL,QACe,kBAAzB1I,EAASlG,KAAK8E,GACPyG,EAAkBE,EAAOY,IAAIjH,MAAK,SAAUkL,GAC/C,OAAIA,EACOxL,EAEJ+I,EAAY/I,EACvB,IAEGA,CACX,IAAGM,MAAK,SAAUN,GACdkK,EAAkBxL,EAAKoL,QAAS3E,GAAY,SAAUgC,EAAKtB,GACvD,GAAIsB,EACA,OAAOjH,EAAOiH,GAGlB,IACI,IAAI6D,EAAQnF,EAAYE,YAAYrH,EAAKoL,QAAQhC,WAMnC,OAAV9H,IACAA,OAAQ7G,GAGZ,IAAI8R,EAAMD,EAAMhF,IAAIhG,EAAO0E,GAE3BmB,EAAYO,WAAa,gBAOPjN,IAAV6G,IACAA,EAAQ,MAGZG,EAAQH,EACZ,EACA6F,EAAYI,QAAUJ,EAAYqC,QAAU,WACxC,IAAIf,EAAM8D,EAAIzR,MAAQyR,EAAIzR,MAAQyR,EAAIpF,YAAYrM,MAClD0G,EAAOiH,EACX,CACJ,CAAE,MAAOxL,GACLuE,EAAOvE,EACX,CACJ,GACJ,IAAG,SAASuE,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,SAASkM,EAAW/G,EAAKJ,GACrB,IAAI5F,EAAOtF,KAEXsL,EAAMD,EAAaC,GAEnB,IAAInF,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd4J,EAAkBxL,EAAKoL,QAAS3E,GAAY,SAAUgC,EAAKtB,GACvD,GAAIsB,EACA,OAAOjH,EAAOiH,GAGlB,IACI,IAAI6D,EAAQnF,EAAYE,YAAYrH,EAAKoL,QAAQhC,WAM7CmD,EAAMD,EAAM,UAAUtG,GAC1BmB,EAAYO,WAAa,WACrBjG,GACJ,EAEA0F,EAAYqC,QAAU,WAClBhI,EAAO+K,EAAIzR,MACf,EAIAqM,EAAYI,QAAU,WAClB,IAAIkB,EAAM8D,EAAIzR,MAAQyR,EAAIzR,MAAQyR,EAAIpF,YAAYrM,MAClD0G,EAAOiH,EACX,CACJ,CAAE,MAAOxL,GACLuE,EAAOvE,EACX,CACJ,GACJ,IAAG,SAASuE,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,SAASmM,EAAMpH,GACX,IAAI5F,EAAOtF,KAEPmG,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd4J,EAAkBxL,EAAKoL,QAAS3E,GAAY,SAAUgC,EAAKtB,GACvD,GAAIsB,EACA,OAAOjH,EAAOiH,GAGlB,IACI,IAAI6D,EAAQnF,EAAYE,YAAYrH,EAAKoL,QAAQhC,WAC7CmD,EAAMD,EAAMU,QAEhB7F,EAAYO,WAAa,WACrBjG,GACJ,EAEA0F,EAAYI,QAAUJ,EAAYqC,QAAU,WACxC,IAAIf,EAAM8D,EAAIzR,MAAQyR,EAAIzR,MAAQyR,EAAIpF,YAAYrM,MAClD0G,EAAOiH,EACX,CACJ,CAAE,MAAOxL,GACLuE,EAAOvE,EACX,CACJ,GACJ,IAAG,SAASuE,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,SAAShG,EAAO+K,GACZ,IAAI5F,EAAOtF,KAEPmG,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd4J,EAAkBxL,EAAKoL,QAAS5E,GAAW,SAAUiC,EAAKtB,GACtD,GAAIsB,EACA,OAAOjH,EAAOiH,GAGlB,IACI,IAAI6D,EAAQnF,EAAYE,YAAYrH,EAAKoL,QAAQhC,WAC7CmD,EAAMD,EAAMW,QAEhBV,EAAI9C,UAAY,WACZhI,EAAQ8K,EAAIrK,OAChB,EAEAqK,EAAI/C,QAAU,WACVhI,EAAO+K,EAAIzR,MACf,CACJ,CAAE,MAAOmC,GACLuE,EAAOvE,EACX,CACJ,GACJ,IAAG,SAASuE,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,SAASmF,EAAI7I,EAAGyI,GACZ,IAAI5F,EAAOtF,KAEPmG,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GACvCrE,EAAI,EACJsE,EAAQ,MAKZzB,EAAK8L,QAAQlK,MAAK,WACd4J,EAAkBxL,EAAKoL,QAAS5E,GAAW,SAAUiC,EAAKtB,GACtD,GAAIsB,EACA,OAAOjH,EAAOiH,GAGlB,IACI,IAAI6D,EAAQnF,EAAYE,YAAYrH,EAAKoL,QAAQhC,WAC7C8D,GAAW,EACXX,EAAMD,EAAMa,gBAEhBZ,EAAI9C,UAAY,WACZ,IAAImD,EAASL,EAAIrK,OACZ0K,EAOK,IAANzP,GAKK+P,EAFLzL,EAAQmL,EAAO5G,MAKXkH,GAAW,EACXN,EAAOQ,QAAQjQ,IAdnBsE,EAAQ,KAoBhB,EAEA8K,EAAI/C,QAAU,WACVhI,EAAO+K,EAAIzR,MACf,CACJ,CAAE,MAAOmC,GACLuE,EAAOvE,EACX,CACJ,GACJ,IAAG,SAASuE,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,SAASwM,EAAKzH,GACV,IAAI5F,EAAOtF,KAEPmG,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd4J,EAAkBxL,EAAKoL,QAAS5E,GAAW,SAAUiC,EAAKtB,GACtD,GAAIsB,EACA,OAAOjH,EAAOiH,GAGlB,IACI,IAAI6D,EAAQnF,EAAYE,YAAYrH,EAAKoL,QAAQhC,WAC7CmD,EAAMD,EAAMa,gBACZE,EAAO,GAEXd,EAAI9C,UAAY,WACZ,IAAImD,EAASL,EAAIrK,OAEZ0K,GAKLS,EAAK9Q,KAAKqQ,EAAO5G,KACjB4G,EAAO,eALHnL,EAAQ4L,EAMhB,EAEAd,EAAI/C,QAAU,WACVhI,EAAO+K,EAAIzR,MACf,CACJ,CAAE,MAAOmC,GACLuE,EAAOvE,EACX,CACJ,GACJ,IAAG,SAASuE,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,SAASyM,EAAazB,EAASjG,GAC3BA,EAAWQ,EAAYvE,MAAMnH,KAAMuB,WAEnC,IAAIsR,EAAgB7S,KAAK8S,SACzB3B,EAA6B,oBAAZA,GAA0BA,GAAW,CAAC,EAClDA,EAAQ7G,OACT6G,EAAQ7G,KAAO6G,EAAQ7G,MAAQuI,EAAcvI,KAC7C6G,EAAQzC,UAAYyC,EAAQzC,WAAamE,EAAcnE,WAG3D,IACIvI,EADAb,EAAOtF,KAEX,GAAKmR,EAAQ7G,KAEN,CACH,IAAIyI,EAAc5B,EAAQ7G,OAASuI,EAAcvI,MAAQhF,EAAKoL,QAAQvC,GAElE6E,EAAYD,EAAc/H,EAAUjE,QAAQzB,EAAKoL,QAAQvC,IAAMc,EAAuBkC,GAASjK,MAAK,SAAUiH,GAC9G,IAAIX,EAAY3B,EAAWsF,EAAQ7G,MAC/BsG,EAAUpD,EAAUoD,QACxBpD,EAAUW,GAAKA,EACf,IAAK,IAAI9L,EAAI,EAAGA,EAAIuO,EAAQzQ,OAAQkC,IAChCuO,EAAQvO,GAAGqO,QAAQvC,GAAKA,EAE5B,OAAOA,CACX,IAqDIhI,EAnDCgL,EAAQzC,UAmDCsE,EAAU9L,MAAK,SAAUiH,GAC/B,GAAKA,EAAGmB,iBAAiBC,SAAS4B,EAAQzC,WAA1C,CAIA,IAAIG,EAAaV,EAAGG,QAAU,EAE9BhB,EAAgB6D,GAEhB,IAAI3D,EAAY3B,EAAWsF,EAAQ7G,MAC/BsG,EAAUpD,EAAUoD,QAExBzC,EAAGC,QACH,IAAK,IAAI/L,EAAI,EAAGA,EAAIuO,EAAQzQ,OAAQkC,IAAK,CACrC,IAAIwO,EAASD,EAAQvO,GACrBwO,EAAOH,QAAQvC,GAAK,KACpB0C,EAAOH,QAAQpC,QAAUO,CAC7B,CAEA,IAAIoE,EAAoB,IAAIjI,GAAU,SAAUjE,EAASD,GACrD,IAAI+K,EAAMxI,EAAIE,KAAK4H,EAAQ7G,KAAMuE,GAEjCgD,EAAI/C,QAAU,SAAUf,GACpB,IAAII,EAAK0D,EAAIrK,OACb2G,EAAGC,QACHtH,EAAOiH,EACX,EAEA8D,EAAIrD,gBAAkB,WAClB,IAAIL,EAAK0D,EAAIrK,OACb2G,EAAG+E,kBAAkB/B,EAAQzC,UACjC,EAEAmD,EAAI9C,UAAY,WACZ,IAAIZ,EAAK0D,EAAIrK,OACb2G,EAAGC,QACHrH,EAAQoH,EACZ,CACJ,IAEA,OAAO8E,EAAkB/L,MAAK,SAAUiH,GACpCX,EAAUW,GAAKA,EACf,IAAK,IAAIoD,EAAI,EAAGA,EAAIX,EAAQzQ,OAAQoR,IAAK,CACrC,IAAI4B,EAAWvC,EAAQW,GACvB4B,EAASzC,QAAQvC,GAAKA,EACtBP,EAAkBuF,EAASzC,QAC/B,CACJ,IAAG,UAAS,SAAU3C,GAElB,MADCD,EAAiBqD,EAASpD,IAAQ/C,EAAUjE,WAAW,UAAS,WAAa,IACxEgH,CACV,GA/CA,CAgDJ,IArGUiF,EAAU9L,MAAK,SAAUiH,GAC/Bb,EAAgB6D,GAEhB,IAAI3D,EAAY3B,EAAWsF,EAAQ7G,MAC/BsG,EAAUpD,EAAUoD,QAExBzC,EAAGC,QACH,IAAK,IAAI/L,EAAI,EAAGA,EAAIuO,EAAQzQ,OAAQkC,IAAK,CACrC,IAAIwO,EAASD,EAAQvO,GACrBwO,EAAOH,QAAQvC,GAAK,IACxB,CAEA,IAAIiF,EAAgB,IAAIpI,GAAU,SAAUjE,EAASD,GACjD,IAAI+K,EAAMxI,EAAIgK,eAAelC,EAAQ7G,MAErCuH,EAAI/C,QAAU,WACV,IAAIX,EAAK0D,EAAIrK,OACT2G,GACAA,EAAGC,QAEPtH,EAAO+K,EAAIzR,MACf,EAEAyR,EAAIyB,UAAY,WAGZ/H,QAAQC,KAAK,sCAAwC2F,EAAQ7G,KAAO,0CACxE,EAEAuH,EAAI9C,UAAY,WACZ,IAAIZ,EAAK0D,EAAIrK,OACT2G,GACAA,EAAGC,QAEPrH,EAAQoH,EACZ,CACJ,IAEA,OAAOiF,EAAclM,MAAK,SAAUiH,GAChCX,EAAUW,GAAKA,EACf,IAAK,IAAI9L,EAAI,EAAGA,EAAIuO,EAAQzQ,OAAQkC,IAAK,CACrC,IAAIkR,EAAU3C,EAAQvO,GACtBuL,EAAkB2F,EAAQ7C,QAC9B,CACJ,IAAG,UAAS,SAAU3C,GAElB,MADCD,EAAiBqD,EAASpD,IAAQ/C,EAAUjE,WAAW,UAAS,WAAa,IACxEgH,CACV,GACJ,GAuDR,MAtHI5H,EAAU6E,EAAUlE,OAAO,qBAyH/B,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,IAAIqN,EAAe,CACfC,QAAS,eACTvC,aAAcA,EACdwC,SAAUpK,IACVyI,QAASA,EACTJ,QAASA,EACTQ,QAASA,EACTE,WAAYA,EACZC,MAAOA,EACPnS,OAAQA,EACRmL,IAAKA,EACLqH,KAAMA,EACNC,aAAcA,GAGlB,SAASe,IACL,MAA+B,oBAAjBlK,YAClB,CAKA,IAAImK,EAAa,mEAEbC,EAAmB,uBACnBC,EAAyB,gCAEzBC,EAAoB,YACpBC,EAA2BD,EAAkB5T,OAG7C8T,GAAmB,OACnBC,GAAY,OACZC,GAAiB,OACjBC,GAAkB,OAClBC,GAAyB,OACzBC,GAAkB,OAClBC,GAAkB,OAClBC,GAAmB,OACnBC,GAAmB,OACnBC,GAAoB,OACpBC,GAAoB,OACpBC,GAAgCZ,EAA2BC,GAAiB9T,OAE5E0U,GAAahV,OAAOkI,UAAUC,SAElC,SAAS8M,GAAeC,GAEpB,IAEI1S,EAEA2S,EAAUC,EAAUC,EAAUC,EAJ9BC,EAAyC,IAA1BL,EAAiB5U,OAChCgC,EAAM4S,EAAiB5U,OAEvBkV,EAAI,EAG8C,MAAlDN,EAAiBA,EAAiB5U,OAAS,KAC3CiV,IACsD,MAAlDL,EAAiBA,EAAiB5U,OAAS,IAC3CiV,KAIR,IAAIE,EAAS,IAAInJ,YAAYiJ,GACzBG,EAAQ,IAAIlJ,WAAWiJ,GAE3B,IAAKjT,EAAI,EAAGA,EAAIF,EAAKE,GAAK,EACtB2S,EAAWpB,EAAW5J,QAAQ+K,EAAiB1S,IAC/C4S,EAAWrB,EAAW5J,QAAQ+K,EAAiB1S,EAAI,IACnD6S,EAAWtB,EAAW5J,QAAQ+K,EAAiB1S,EAAI,IACnD8S,EAAWvB,EAAW5J,QAAQ+K,EAAiB1S,EAAI,IAGnDkT,EAAMF,KAAOL,GAAY,EAAIC,GAAY,EACzCM,EAAMF,MAAmB,GAAXJ,IAAkB,EAAIC,GAAY,EAChDK,EAAMF,MAAmB,EAAXH,IAAiB,EAAe,GAAXC,EAEvC,OAAOG,CACX,CAIA,SAASE,GAAeF,GAEpB,IAEIjT,EAFAkT,EAAQ,IAAIlJ,WAAWiJ,GACvBG,EAAe,GAGnB,IAAKpT,EAAI,EAAGA,EAAIkT,EAAMpV,OAAQkC,GAAK,EAE/BoT,GAAgB7B,EAAW2B,EAAMlT,IAAM,GACvCoT,GAAgB7B,GAAuB,EAAX2B,EAAMlT,KAAW,EAAIkT,EAAMlT,EAAI,IAAM,GACjEoT,GAAgB7B,GAA2B,GAAf2B,EAAMlT,EAAI,KAAY,EAAIkT,EAAMlT,EAAI,IAAM,GACtEoT,GAAgB7B,EAA0B,GAAf2B,EAAMlT,EAAI,IASzC,OANIkT,EAAMpV,OAAS,IAAM,EACrBsV,EAAeA,EAAaC,UAAU,EAAGD,EAAatV,OAAS,GAAK,IAC7DoV,EAAMpV,OAAS,IAAM,IAC5BsV,EAAeA,EAAaC,UAAU,EAAGD,EAAatV,OAAS,GAAK,MAGjEsV,CACX,CAKA,SAASE,GAAU/O,EAAOsE,GACtB,IAAI0K,EAAY,GAShB,GARIhP,IACAgP,EAAYf,GAAW/S,KAAK8E,IAO5BA,IAAwB,yBAAdgP,GAAwChP,EAAM0O,QAA4C,yBAAlCT,GAAW/S,KAAK8E,EAAM0O,SAAqC,CAG7H,IAAIA,EACAO,EAAS9B,EAETnN,aAAiBuF,aACjBmJ,EAAS1O,EACTiP,GAAU5B,KAEVqB,EAAS1O,EAAM0O,OAEG,uBAAdM,EACAC,GAAU1B,GACW,wBAAdyB,EACPC,GAAUzB,GACW,+BAAdwB,EACPC,GAAUxB,GACW,wBAAduB,EACPC,GAAUvB,GACW,yBAAdsB,EACPC,GAAUrB,GACW,wBAAdoB,EACPC,GAAUtB,GACW,yBAAdqB,EACPC,GAAUpB,GACW,0BAAdmB,EACPC,GAAUnB,GACW,0BAAdkB,EACPC,GAAUlB,GAEVzJ,EAAS,IAAInI,MAAM,wCAI3BmI,EAAS2K,EAASL,GAAeF,GACrC,MAAO,GAAkB,kBAAdM,EAA+B,CAEtC,IAAIE,EAAa,IAAIjG,WAErBiG,EAAWC,OAAS,WAEhB,IAAIC,EAAMnC,EAAmBjN,EAAMmE,KAAO,IAAMyK,GAAexV,KAAKwH,QAEpE0D,EAAS6I,EAAoBG,GAAY8B,EAC7C,EAEAF,EAAWG,kBAAkBrP,EACjC,MACI,IACIsE,EAASgL,KAAKC,UAAUvP,GAC5B,CAAE,MAAOrE,GACLgJ,QAAQnL,MAAM,8CAA+CwG,GAE7DsE,EAAS,KAAM3I,EACnB,CAER,CAUA,SAAS6T,GAAYxP,GAIjB,GAAIA,EAAM8O,UAAU,EAAG1B,KAA8BD,EACjD,OAAOmC,KAAKG,MAAMzP,GAMtB,IAGI0P,EAHAvB,EAAmBnO,EAAM8O,UAAUd,IACnC7J,EAAOnE,EAAM8O,UAAU1B,EAA0BY,IAKrD,GAAI7J,IAASmJ,IAAaJ,EAAuBpK,KAAKqL,GAAmB,CACrE,IAAIwB,EAAUxB,EAAiB7H,MAAM4G,GACrCwC,EAAWC,EAAQ,GACnBxB,EAAmBA,EAAiBW,UAAUa,EAAQ,GAAGpW,OAC7D,CACA,IAAImV,EAASR,GAAeC,GAI5B,OAAQhK,GACJ,KAAKkJ,GACD,OAAOqB,EACX,KAAKpB,GACD,OAAOhK,EAAW,CAACoL,GAAS,CAAEvK,KAAMuL,IACxC,KAAKnC,GACD,OAAO,IAAIqC,UAAUlB,GACzB,KAAKlB,GACD,OAAO,IAAI/H,WAAWiJ,GAC1B,KAAKjB,GACD,OAAO,IAAIoC,kBAAkBnB,GACjC,KAAKhB,GACD,OAAO,IAAIoC,WAAWpB,GAC1B,KAAKd,GACD,OAAO,IAAImC,YAAYrB,GAC3B,KAAKf,GACD,OAAO,IAAIqC,WAAWtB,GAC1B,KAAKb,GACD,OAAO,IAAIoC,YAAYvB,GAC3B,KAAKZ,GACD,OAAO,IAAIoC,aAAaxB,GAC5B,KAAKX,GACD,OAAO,IAAIoC,aAAazB,GAC5B,QACI,MAAM,IAAIvS,MAAM,gBAAkBgI,GAE9C,CAEA,IAAIiM,GAAwB,CACxBrB,UAAWA,GACXS,YAAaA,GACbtB,eAAgBA,GAChBU,eAAgBA,IAapB,SAASyB,GAAczU,EAAG+K,EAAQrC,EAAUE,GACxC5I,EAAE0U,WAAW,8BAAgC3J,EAAOmB,UAAvC,+CAAwG,GAAIxD,EAAUE,EACvI,CAIA,SAAS+L,GAAehG,GACpB,IAAI7L,EAAOtF,KACPuN,EAAS,CACTY,GAAI,MAGR,GAAIgD,EACA,IAAK,IAAI9O,KAAK8O,EACV5D,EAAOlL,GAA2B,kBAAf8O,EAAQ9O,GAAkB8O,EAAQ9O,GAAG2F,WAAamJ,EAAQ9O,GAIrF,IAAI+U,EAAgB,IAAIpM,GAAU,SAAUjE,EAASD,GAGjD,IACIyG,EAAOY,GAAK1E,aAAa8D,EAAOjD,KAAMmB,OAAO8B,EAAOe,SAAUf,EAAO8J,YAAa9J,EAAO+J,KAC7F,CAAE,MAAO/U,GACL,OAAOuE,EAAOvE,EAClB,CAGAgL,EAAOY,GAAG1B,aAAY,SAAUjK,GAC5ByU,GAAczU,EAAG+K,GAAQ,WACrBjI,EAAKoL,QAAUnD,EACfxG,GACJ,IAAG,SAAUvE,EAAGpC,GACZ0G,EAAO1G,EACX,GACJ,GAAG0G,EACP,IAGA,OADAyG,EAAOgK,WAAaP,GACbI,CACX,CAEA,SAASI,GAAchV,EAAG+K,EAAQkK,EAAcC,EAAMxM,EAAUE,GAC5D5I,EAAE0U,WAAWO,EAAcC,EAAMxM,GAAU,SAAU1I,EAAGpC,GAChDA,EAAM4C,OAAS5C,EAAMuX,WACrBnV,EAAE0U,WAAW,iEAAuE,CAAC3J,EAAOmB,YAAY,SAAUlM,EAAGoV,GAC5GA,EAAQC,KAAK1X,OAOdiL,EAAc5I,EAAGpC,GAJjB6W,GAAczU,EAAG+K,GAAQ,WACrB/K,EAAE0U,WAAWO,EAAcC,EAAMxM,EAAUE,EAC/C,GAAGA,EAIX,GAAGA,GAEHA,EAAc5I,EAAGpC,EAEzB,GAAGgL,EACP,CAEA,SAAS0M,GAAUxM,EAAKJ,GACpB,IAAI5F,EAAOtF,KAEXsL,EAAMD,EAAaC,GAEnB,IAAInF,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd,IAAIqG,EAASjI,EAAKoL,QAClBnD,EAAOY,GAAG1B,aAAY,SAAUjK,GAC5BgV,GAAchV,EAAG+K,EAAQ,iBAAmBA,EAAOmB,UAAY,yBAA0B,CAACpD,IAAM,SAAU9I,EAAGoV,GACzG,IAAIpQ,EAASoQ,EAAQC,KAAK1X,OAASyX,EAAQC,KAAK3V,KAAK,GAAG0E,MAAQ,KAI5DY,IACAA,EAAS+F,EAAOgK,WAAWnB,YAAY5O,IAG3CT,EAAQS,EACZ,IAAG,SAAUhF,EAAGpC,GACZ0G,EAAO1G,EACX,GACJ,GACJ,IAAG,SAAS0G,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,SAAS4R,GAAUpP,EAAUuC,GACzB,IAAI5F,EAAOtF,KAEPmG,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd,IAAIqG,EAASjI,EAAKoL,QAElBnD,EAAOY,GAAG1B,aAAY,SAAUjK,GAC5BgV,GAAchV,EAAG+K,EAAQ,iBAAmBA,EAAOmB,UAAW,IAAI,SAAUlM,EAAGoV,GAI3E,IAHA,IAAIC,EAAOD,EAAQC,KACf1X,EAAS0X,EAAK1X,OAETkC,EAAI,EAAGA,EAAIlC,EAAQkC,IAAK,CAC7B,IAAIH,EAAO2V,EAAK3V,KAAKG,GACjBmF,EAAStF,EAAK0E,MAYlB,GARIY,IACAA,EAAS+F,EAAOgK,WAAWnB,YAAY5O,IAG3CA,EAASmB,EAASnB,EAAQtF,EAAKoJ,IAAKjJ,EAAI,QAIzB,IAAXmF,EAEA,YADAT,EAAQS,EAGhB,CAEAT,GACJ,IAAG,SAAUvE,EAAGpC,GACZ0G,EAAO1G,EACX,GACJ,GACJ,IAAG,SAAS0G,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,SAAS6R,GAAS1M,EAAK1E,EAAOsE,EAAU+M,GACpC,IAAI3S,EAAOtF,KAEXsL,EAAMD,EAAaC,GAEnB,IAAInF,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,gBAIAnH,IAAV6G,IACAA,EAAQ,MAIZ,IAAIsR,EAAgBtR,EAEhB2G,EAASjI,EAAKoL,QAClBnD,EAAOgK,WAAW5B,UAAU/O,GAAO,SAAUA,EAAOxG,GAC5CA,EACA0G,EAAO1G,GAEPmN,EAAOY,GAAG1B,aAAY,SAAUjK,GAC5BgV,GAAchV,EAAG+K,EAAQ,0BAA4BA,EAAOmB,UAAnC,8BAAmF,CAACpD,EAAK1E,IAAQ,WACtHG,EAAQmR,EACZ,IAAG,SAAU1V,EAAGpC,GACZ0G,EAAO1G,EACX,GACJ,IAAG,SAAU+X,GAGT,GAAIA,EAASnV,OAASmV,EAASC,UAAW,CAQtC,GAAIH,EAAc,EAEd,YADAlR,EAAQiR,GAAS7Q,MAAM7B,EAAM,CAACgG,EAAK4M,EAAehN,EAAU+M,EAAc,KAG9EnR,EAAOqR,EACX,CACJ,GAER,GACJ,IAAG,SAASrR,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,SAASkS,GAAU/M,EAAK1E,EAAOsE,GAC3B,OAAO8M,GAAS7Q,MAAMnH,KAAM,CAACsL,EAAK1E,EAAOsE,EAAU,GACvD,CAEA,SAASoN,GAAahN,EAAKJ,GACvB,IAAI5F,EAAOtF,KAEXsL,EAAMD,EAAaC,GAEnB,IAAInF,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd,IAAIqG,EAASjI,EAAKoL,QAClBnD,EAAOY,GAAG1B,aAAY,SAAUjK,GAC5BgV,GAAchV,EAAG+K,EAAQ,eAAiBA,EAAOmB,UAAY,iBAAkB,CAACpD,IAAM,WAClFvE,GACJ,IAAG,SAAUvE,EAAGpC,GACZ0G,EAAO1G,EACX,GACJ,GACJ,IAAG,SAAS0G,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAIA,SAASoS,GAAQrN,GACb,IAAI5F,EAAOtF,KAEPmG,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd,IAAIqG,EAASjI,EAAKoL,QAClBnD,EAAOY,GAAG1B,aAAY,SAAUjK,GAC5BgV,GAAchV,EAAG+K,EAAQ,eAAiBA,EAAOmB,UAAW,IAAI,WAC5D3H,GACJ,IAAG,SAAUvE,EAAGpC,GACZ0G,EAAO1G,EACX,GACJ,GACJ,IAAG,SAAS0G,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAIA,SAASqS,GAAStN,GACd,IAAI5F,EAAOtF,KAEPmG,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd,IAAIqG,EAASjI,EAAKoL,QAClBnD,EAAOY,GAAG1B,aAAY,SAAUjK,GAE5BgV,GAAchV,EAAG+K,EAAQ,+BAAiCA,EAAOmB,UAAW,IAAI,SAAUlM,EAAGoV,GACzF,IAAIpQ,EAASoQ,EAAQC,KAAK3V,KAAK,GAAGuW,EAClC1R,EAAQS,EACZ,IAAG,SAAUhF,EAAGpC,GACZ0G,EAAO1G,EACX,GACJ,GACJ,IAAG,SAAS0G,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CASA,SAASuS,GAAMjW,EAAGyI,GACd,IAAI5F,EAAOtF,KAEPmG,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd,IAAIqG,EAASjI,EAAKoL,QAClBnD,EAAOY,GAAG1B,aAAY,SAAUjK,GAC5BgV,GAAchV,EAAG+K,EAAQ,mBAAqBA,EAAOmB,UAAY,wBAAyB,CAACjM,EAAI,IAAI,SAAUD,EAAGoV,GAC5G,IAAIpQ,EAASoQ,EAAQC,KAAK1X,OAASyX,EAAQC,KAAK3V,KAAK,GAAGoJ,IAAM,KAC9DvE,EAAQS,EACZ,IAAG,SAAUhF,EAAGpC,GACZ0G,EAAO1G,EACX,GACJ,GACJ,IAAG,SAAS0G,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,SAASwS,GAAOzN,GACZ,IAAI5F,EAAOtF,KAEPmG,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3CxB,EAAK8L,QAAQlK,MAAK,WACd,IAAIqG,EAASjI,EAAKoL,QAClBnD,EAAOY,GAAG1B,aAAY,SAAUjK,GAC5BgV,GAAchV,EAAG+K,EAAQ,mBAAqBA,EAAOmB,UAAW,IAAI,SAAUlM,EAAGoV,GAG7E,IAFA,IAAIjF,EAAO,GAEFtQ,EAAI,EAAGA,EAAIuV,EAAQC,KAAK1X,OAAQkC,IACrCsQ,EAAK9Q,KAAK+V,EAAQC,KAAK3V,KAAKG,GAAGiJ,KAGnCvE,EAAQ4L,EACZ,IAAG,SAAUnQ,EAAGpC,GACZ0G,EAAO1G,EACX,GACJ,GACJ,IAAG,SAAS0G,EAChB,IAGA,OADAmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAIA,SAASyS,GAAiBzK,GACtB,OAAO,IAAInD,GAAU,SAAUjE,EAASD,GACpCqH,EAAG1B,aAAY,SAAUjK,GACrBA,EAAE0U,WAAW,8FAAoG,IAAI,SAAU1U,EAAGoV,GAG9H,IAFA,IAAIiB,EAAa,GAERxW,EAAI,EAAGA,EAAIuV,EAAQC,KAAK1X,OAAQkC,IACrCwW,EAAWhX,KAAK+V,EAAQC,KAAK3V,KAAKG,GAAGiI,MAGzCvD,EAAQ,CACJoH,GAAIA,EACJ0K,WAAYA,GAEpB,IAAG,SAAUrW,EAAGpC,GACZ0G,EAAO1G,EACX,GACJ,IAAG,SAAU+X,GACTrR,EAAOqR,EACX,GACJ,GACJ,CAEA,SAASW,GAAe3H,EAASjG,GAC7BA,EAAWQ,EAAYvE,MAAMnH,KAAMuB,WAEnC,IAAIsR,EAAgB7S,KAAK8S,SACzB3B,EAA6B,oBAAZA,GAA0BA,GAAW,CAAC,EAClDA,EAAQ7G,OACT6G,EAAQ7G,KAAO6G,EAAQ7G,MAAQuI,EAAcvI,KAC7C6G,EAAQzC,UAAYyC,EAAQzC,WAAamE,EAAcnE,WAG3D,IACIvI,EADAb,EAAOtF,KAsDX,OAjDImG,EAHCgL,EAAQ7G,KAGC,IAAIU,GAAU,SAAUjE,GAC9B,IAAIoH,EAGAA,EAFAgD,EAAQ7G,OAASuI,EAAcvI,KAE1BhF,EAAKoL,QAAQvC,GAEb1E,aAAa0H,EAAQ7G,KAAM,GAAI,GAAI,GAGvC6G,EAAQzC,UAIT3H,EAAQ,CACJoH,GAAIA,EACJ0K,WAAY,CAAC1H,EAAQzC,aAJzB3H,EAAQ6R,GAAiBzK,GAOjC,IAAGjH,MAAK,SAAU6R,GACd,OAAO,IAAI/N,GAAU,SAAUjE,EAASD,GACpCiS,EAAc5K,GAAG1B,aAAY,SAAUjK,GACnC,SAASwW,EAAUtK,GACf,OAAO,IAAI1D,GAAU,SAAUjE,EAASD,GACpCtE,EAAE0U,WAAW,wBAA0BxI,EAAW,IAAI,WAClD3H,GACJ,IAAG,SAAUvE,EAAGpC,GACZ0G,EAAO1G,EACX,GACJ,GACJ,CAGA,IADA,IAAI6Y,EAAa,GACR5W,EAAI,EAAGF,EAAM4W,EAAcF,WAAW1Y,OAAQkC,EAAIF,EAAKE,IAC5D4W,EAAWpX,KAAKmX,EAAUD,EAAcF,WAAWxW,KAGvD2I,EAAUnD,IAAIoR,GAAY/R,MAAK,WAC3BH,GACJ,IAAG,UAAS,SAAUxE,GAClBuE,EAAOvE,EACX,GACJ,IAAG,SAAU4V,GACTrR,EAAOqR,EACX,GACJ,GACJ,IA/CUnN,EAAUlE,OAAO,qBAkD/BmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,IAAI+S,GAAgB,CAChBzF,QAAS,gBACTvC,aAAciG,GACdzD,SAAUC,IACV5B,QAASgG,GACTpG,QAASmG,GACT3F,QAASkG,GACThG,WAAYiG,GACZhG,MAAOiG,GACPpY,OAAQqY,GACRlN,IAAKoN,GACL/F,KAAMgG,GACN/F,aAAckG,IAGlB,SAASK,KACL,IACI,MAA+B,qBAAjBC,cAAgC,YAAaA,gBAEzDA,aAAajH,OACnB,CAAE,MAAO5P,GACL,OAAO,CACX,CACJ,CAEA,SAAS8W,GAAclI,EAASmI,GAC5B,IAAIC,EAAYpI,EAAQ7G,KAAO,IAK/B,OAHI6G,EAAQzC,YAAc4K,EAAc5K,YACpC6K,GAAapI,EAAQzC,UAAY,KAE9B6K,CACX,CAGA,SAASC,KACL,IAAIC,EAAsB,4BAE1B,IAII,OAHAL,aAAajH,QAAQsH,GAAqB,GAC1CL,aAAa/G,WAAWoH,IAEjB,CACX,CAAE,MAAOlX,GACL,OAAO,CACX,CACJ,CAMA,SAASmX,KACL,OAAQF,MAA+BJ,aAAajZ,OAAS,CACjE,CAGA,SAASwZ,GAAexI,GACpB,IAAI7L,EAAOtF,KACPuN,EAAS,CAAC,EACd,GAAI4D,EACA,IAAK,IAAI9O,KAAK8O,EACV5D,EAAOlL,GAAK8O,EAAQ9O,GAM5B,OAFAkL,EAAOgM,UAAYF,GAAclI,EAAS7L,EAAKmM,gBAE1CiI,MAILpU,EAAKoL,QAAUnD,EACfA,EAAOgK,WAAaP,GAEbhM,EAAUjE,WANNiE,EAAUlE,QAOzB,CAIA,SAAS8S,GAAQ1O,GACb,IAAI5F,EAAOtF,KACPmG,EAAUb,EAAK8L,QAAQlK,MAAK,WAG5B,IAFA,IAAIqS,EAAYjU,EAAKoL,QAAQ6I,UAEpBlX,EAAI+W,aAAajZ,OAAS,EAAGkC,GAAK,EAAGA,IAAK,CAC/C,IAAIiJ,EAAM8N,aAAa9N,IAAIjJ,GAEI,IAA3BiJ,EAAItB,QAAQuP,IACZH,aAAa/G,WAAW/G,EAEhC,CACJ,IAGA,OADAL,EAAgB9E,EAAS+E,GAClB/E,CACX,CAKA,SAAS0T,GAAUvO,EAAKJ,GACpB,IAAI5F,EAAOtF,KAEXsL,EAAMD,EAAaC,GAEnB,IAAInF,EAAUb,EAAK8L,QAAQlK,MAAK,WAC5B,IAAIqG,EAASjI,EAAKoL,QACdlJ,EAAS4R,aAAazH,QAAQpE,EAAOgM,UAAYjO,GAUrD,OAJI9D,IACAA,EAAS+F,EAAOgK,WAAWnB,YAAY5O,IAGpCA,CACX,IAGA,OADAyD,EAAgB9E,EAAS+E,GAClB/E,CACX,CAGA,SAAS2T,GAAUnR,EAAUuC,GACzB,IAAI5F,EAAOtF,KAEPmG,EAAUb,EAAK8L,QAAQlK,MAAK,WAc5B,IAbA,IAAIqG,EAASjI,EAAKoL,QACd6I,EAAYhM,EAAOgM,UACnBQ,EAAkBR,EAAUpZ,OAC5BA,EAASiZ,aAAajZ,OAQtB8R,EAAkB,EAEb5P,EAAI,EAAGA,EAAIlC,EAAQkC,IAAK,CAC7B,IAAIiJ,EAAM8N,aAAa9N,IAAIjJ,GAC3B,GAA+B,IAA3BiJ,EAAItB,QAAQuP,GAAhB,CAGA,IAAI3S,EAAQwS,aAAazH,QAAQrG,GAYjC,GANI1E,IACAA,EAAQ2G,EAAOgK,WAAWnB,YAAYxP,IAG1CA,EAAQ+B,EAAS/B,EAAO0E,EAAIoK,UAAUqE,GAAkB9H,UAE1C,IAAVrL,EACA,OAAOA,CAdX,CAgBJ,CACJ,IAGA,OADAqE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAGA,SAAS6T,GAAMvX,EAAGyI,GACd,IAAI5F,EAAOtF,KACPmG,EAAUb,EAAK8L,QAAQlK,MAAK,WAC5B,IACIM,EADA+F,EAASjI,EAAKoL,QAElB,IACIlJ,EAAS4R,aAAa9N,IAAI7I,EAC9B,CAAE,MAAOrC,GACLoH,EAAS,IACb,CAOA,OAJIA,IACAA,EAASA,EAAOkO,UAAUnI,EAAOgM,UAAUpZ,SAGxCqH,CACX,IAGA,OADAyD,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,SAAS8T,GAAO/O,GACZ,IAAI5F,EAAOtF,KACPmG,EAAUb,EAAK8L,QAAQlK,MAAK,WAK5B,IAJA,IAAIqG,EAASjI,EAAKoL,QACdvQ,EAASiZ,aAAajZ,OACtBwS,EAAO,GAEFtQ,EAAI,EAAGA,EAAIlC,EAAQkC,IAAK,CAC7B,IAAI6X,EAAUd,aAAa9N,IAAIjJ,GACW,IAAtC6X,EAAQlQ,QAAQuD,EAAOgM,YACvB5G,EAAK9Q,KAAKqY,EAAQxE,UAAUnI,EAAOgM,UAAUpZ,QAErD,CAEA,OAAOwS,CACX,IAGA,OADA1H,EAAgB9E,EAAS+E,GAClB/E,CACX,CAGA,SAASgU,GAASjP,GACd,IAAI5F,EAAOtF,KACPmG,EAAUb,EAAKqN,OAAOzL,MAAK,SAAUyL,GACrC,OAAOA,EAAKxS,MAChB,IAGA,OADA8K,EAAgB9E,EAAS+E,GAClB/E,CACX,CAGA,SAASiU,GAAa9O,EAAKJ,GACvB,IAAI5F,EAAOtF,KAEXsL,EAAMD,EAAaC,GAEnB,IAAInF,EAAUb,EAAK8L,QAAQlK,MAAK,WAC5B,IAAIqG,EAASjI,EAAKoL,QAClB0I,aAAa/G,WAAW9E,EAAOgM,UAAYjO,EAC/C,IAGA,OADAL,EAAgB9E,EAAS+E,GAClB/E,CACX,CAMA,SAASkU,GAAU/O,EAAK1E,EAAOsE,GAC3B,IAAI5F,EAAOtF,KAEXsL,EAAMD,EAAaC,GAEnB,IAAInF,EAAUb,EAAK8L,QAAQlK,MAAK,gBAGdnH,IAAV6G,IACAA,EAAQ,MAIZ,IAAIsR,EAAgBtR,EAEpB,OAAO,IAAIoE,GAAU,SAAUjE,EAASD,GACpC,IAAIyG,EAASjI,EAAKoL,QAClBnD,EAAOgK,WAAW5B,UAAU/O,GAAO,SAAUA,EAAOxG,GAChD,GAAIA,EACA0G,EAAO1G,QAEP,IACIgZ,aAAajH,QAAQ5E,EAAOgM,UAAYjO,EAAK1E,GAC7CG,EAAQmR,EACZ,CAAE,MAAO3V,GAGU,uBAAXA,EAAE+H,MAA4C,+BAAX/H,EAAE+H,MACrCxD,EAAOvE,GAEXuE,EAAOvE,EACX,CAER,GACJ,GACJ,IAGA,OADA0I,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,SAASmU,GAAenJ,EAASjG,GAI7B,GAHAA,EAAWQ,EAAYvE,MAAMnH,KAAMuB,WAEnC4P,EAA6B,oBAAZA,GAA0BA,GAAW,CAAC,GAClDA,EAAQ7G,KAAM,CACf,IAAIuI,EAAgB7S,KAAK8S,SACzB3B,EAAQ7G,KAAO6G,EAAQ7G,MAAQuI,EAAcvI,KAC7C6G,EAAQzC,UAAYyC,EAAQzC,WAAamE,EAAcnE,SAC3D,CAEA,IACIvI,EADAb,EAAOtF,KAuBX,OAlBImG,EAHCgL,EAAQ7G,KAGC,IAAIU,GAAU,SAAUjE,GACzBoK,EAAQzC,UAGT3H,EAAQsS,GAAclI,EAAS7L,EAAKmM,iBAFpC1K,EAAQoK,EAAQ7G,KAAO,IAI/B,IAAGpD,MAAK,SAAUqS,GACd,IAAK,IAAIlX,EAAI+W,aAAajZ,OAAS,EAAGkC,GAAK,EAAGA,IAAK,CAC/C,IAAIiJ,EAAM8N,aAAa9N,IAAIjJ,GAEI,IAA3BiJ,EAAItB,QAAQuP,IACZH,aAAa/G,WAAW/G,EAEhC,CACJ,IAhBUN,EAAUlE,OAAO,qBAmB/BmE,EAAgB9E,EAAS+E,GAClB/E,CACX,CAEA,IAAIoU,GAAsB,CACtB9G,QAAS,sBACTvC,aAAcyI,GACdjG,SAAUyF,KACVpH,QAAS+H,GACTnI,QAASkI,GACT1H,QAASkI,GACThI,WAAY+H,GACZ9H,MAAOsH,GACPzZ,OAAQga,GACR7O,IAAK0O,GACLrH,KAAMsH,GACNrH,aAAc0H,IAGdE,GAAY,SAAmBC,EAAGC,GAClC,OAAOD,IAAMC,GAAkB,kBAAND,GAA+B,kBAANC,GAAkBC,MAAMF,IAAME,MAAMD,EAC1F,EAEIxZ,GAAW,SAAkB0Z,EAAOC,GACpC,IAAI1Y,EAAMyY,EAAMza,OACZkC,EAAI,EACR,MAAOA,EAAIF,EAAK,CACZ,GAAIqY,GAAUI,EAAMvY,GAAIwY,GACpB,OAAO,EAEXxY,GACJ,CAEA,OAAO,CACX,EAEI5C,GAAUkB,MAAMlB,SAAW,SAAUqb,GACrC,MAA+C,mBAAxCjb,OAAOkI,UAAUC,SAASlG,KAAKgZ,EAC1C,EAIIC,GAAiB,CAAC,EAElBC,GAAgB,CAAC,EAEjBC,GAAiB,CACjBC,UAAW1H,EACX2H,OAAQjC,GACRkC,aAAcb,IAGdc,GAAqB,CAACJ,GAAeC,UAAUzH,QAASwH,GAAeE,OAAO1H,QAASwH,GAAeG,aAAa3H,SAEnH6H,GAAwB,CAAC,gBAEzBC,GAAiB,CAAC,QAAS,UAAW,UAAW,MAAO,OAAQ,SAAU,aAAc,WAAWC,OAAOF,IAE1GG,GAAgB,CAChBpE,YAAa,GACbqE,OAAQL,GAAmB7J,QAC3BlH,KAAM,cAGNgN,KAAM,QACN5I,UAAW,gBACXJ,QAAS,GAGb,SAASqN,GAAcC,EAAqBC,GACxCD,EAAoBC,GAAiB,WACjC,IAAIC,EAAQva,UACZ,OAAOqa,EAAoBxK,QAAQlK,MAAK,WACpC,OAAO0U,EAAoBC,GAAe1U,MAAMyU,EAAqBE,EACzE,GACJ,CACJ,CAEA,SAASC,KACL,IAAK,IAAI1Z,EAAI,EAAGA,EAAId,UAAUpB,OAAQkC,IAAK,CACvC,IAAIyY,EAAMvZ,UAAUc,GAEpB,GAAIyY,EACA,IAAK,IAAIkB,KAAQlB,EACTA,EAAImB,eAAeD,KACfvc,GAAQqb,EAAIkB,IACZza,UAAU,GAAGya,GAAQlB,EAAIkB,GAAMxK,QAE/BjQ,UAAU,GAAGya,GAAQlB,EAAIkB,GAK7C,CAEA,OAAOza,UAAU,EACrB,CAEA,IAAI2a,GAAc,WACd,SAASA,EAAY/K,GAGjB,IAAK,IAAIgL,KAFTvT,EAAgB5I,KAAMkc,GAEIjB,GACtB,GAAIA,GAAegB,eAAeE,GAAgB,CAC9C,IAAIT,EAAST,GAAekB,GACxBC,EAAaV,EAAOjI,QACxBzT,KAAKmc,GAAiBC,EAEjBrB,GAAeqB,IAIhBpc,KAAKqc,aAAaX,EAE1B,CAGJ1b,KAAKyR,eAAiBsK,GAAO,CAAC,EAAGN,IACjCzb,KAAKsc,QAAUP,GAAO,CAAC,EAAG/b,KAAKyR,eAAgBN,GAC/CnR,KAAKuc,WAAa,KAClBvc,KAAKwc,YAAc,KACnBxc,KAAKyc,QAAS,EACdzc,KAAK0Q,QAAU,KAEf1Q,KAAK0c,+BACL1c,KAAK2c,UAAU3c,KAAKsc,QAAQZ,QAAQ,UAAS,WAAa,GAC9D,CAyQA,OAjQAQ,EAAYnU,UAAU+K,OAAS,SAAgB3B,GAI3C,GAA0E,YAAlD,qBAAZA,EAA0B,YAAc1I,EAAQ0I,IAAwB,CAGhF,GAAInR,KAAKyc,OACL,OAAO,IAAI1Z,MAAM,wDAGrB,IAAK,IAAIV,KAAK8O,EAAS,CAKnB,GAJU,cAAN9O,IACA8O,EAAQ9O,GAAK8O,EAAQ9O,GAAGua,QAAQ,MAAO,MAGjC,YAANva,GAAyC,kBAAf8O,EAAQ9O,GAClC,OAAO,IAAIU,MAAM,sCAGrB/C,KAAKsc,QAAQja,GAAK8O,EAAQ9O,EAC9B,CAIA,QAAI,WAAY8O,KAAWA,EAAQuK,QACxB1b,KAAK2c,UAAU3c,KAAKsc,QAAQZ,OAI3C,CAAO,MAAuB,kBAAZvK,EACPnR,KAAKsc,QAAQnL,GAEbnR,KAAKsc,OAEpB,EAMAJ,EAAYnU,UAAUsU,aAAe,SAAsBQ,EAAc3R,EAAUE,GAC/E,IAAIjF,EAAU,IAAI6E,GAAU,SAAUjE,EAASD,GAC3C,IACI,IAAIsV,EAAaS,EAAapJ,QAC1BqJ,EAAkB,IAAI/Z,MAAM,wFAIhC,IAAK8Z,EAAapJ,QAEd,YADA3M,EAAOgW,GAKX,IADA,IAAIC,EAAgBxB,GAAeC,OAAO,gBACjCnZ,EAAI,EAAGF,EAAM4a,EAAc5c,OAAQkC,EAAIF,EAAKE,IAAK,CACtD,IAAI2a,EAAmBD,EAAc1a,GAIjC4a,GAAc/b,GAASoa,GAAuB0B,GAClD,IAAKC,GAAcJ,EAAaG,KAAgE,oBAAnCH,EAAaG,GAEtE,YADAlW,EAAOgW,EAGf,CAEA,IAAII,EAA0B,WAU1B,IATA,IAAIC,EAA8B,SAAqCC,GACnE,OAAO,WACH,IAAIhd,EAAQ,IAAI2C,MAAM,UAAYqa,EAAa,6CAC3CjX,EAAU6E,EAAUlE,OAAO1G,GAE/B,OADA6K,EAAgB9E,EAAS5E,UAAUA,UAAUpB,OAAS,IAC/CgG,CACX,CACJ,EAESkX,EAAK,EAAGC,EAAOhC,GAAsBnb,OAAQkd,EAAKC,EAAMD,IAAM,CACnE,IAAIE,EAAuBjC,GAAsB+B,GAC5CR,EAAaU,KACdV,EAAaU,GAAwBJ,EAA4BI,GAEzE,CACJ,EAEAL,IAEA,IAAIM,EAAmB,SAA0BC,GACzC1C,GAAeqB,IACf7Q,QAAQmS,KAAK,kCAAoCtB,GAErDrB,GAAeqB,GAAcS,EAC7B7B,GAAcoB,GAAcqB,EAI5B1W,GACJ,EAEI,aAAc8V,EACVA,EAAanJ,UAA6C,oBAA1BmJ,EAAanJ,SAC7CmJ,EAAanJ,WAAWxM,KAAKsW,EAAkB1W,GAE/C0W,IAAmBX,EAAanJ,UAGpC8J,GAAiB,EAEzB,CAAE,MAAOjb,GACLuE,EAAOvE,EACX,CACJ,IAGA,OADA4I,EAAoBhF,EAAS+E,EAAUE,GAChCjF,CACX,EAEA+V,EAAYnU,UAAU2T,OAAS,WAC3B,OAAO1b,KAAKyT,SAAW,IAC3B,EAEAyI,EAAYnU,UAAU4V,UAAY,SAAmBvB,EAAYlR,EAAUE,GACvE,IAAIwS,EAAmB7C,GAAeqB,GAAcpR,EAAUjE,QAAQgU,GAAeqB,IAAepR,EAAUlE,OAAO,IAAI/D,MAAM,sBAG/H,OADAoI,EAAoByS,EAAkB1S,EAAUE,GACzCwS,CACX,EAEA1B,EAAYnU,UAAU8V,cAAgB,SAAuB3S,GACzD,IAAI4S,EAAoB9S,EAAUjE,QAAQiQ,IAE1C,OADA7L,EAAoB2S,EAAmB5S,GAChC4S,CACX,EAEA5B,EAAYnU,UAAUqJ,MAAQ,SAAelG,GACzC,IAAI5F,EAAOtF,KAEPmG,EAAUb,EAAKiX,WAAWrV,MAAK,WAK/B,OAJoB,OAAhB5B,EAAKmX,SACLnX,EAAKmX,OAASnX,EAAKkX,eAGhBlX,EAAKmX,MAChB,IAGA,OADAtR,EAAoBhF,EAAS+E,EAAUA,GAChC/E,CACX,EAEA+V,EAAYnU,UAAU4U,UAAY,SAAmBoB,EAAS7S,EAAUE,GACpE,IAAI9F,EAAOtF,KAENP,GAAQse,KACTA,EAAU,CAACA,IAGf,IAAIC,EAAmBhe,KAAKie,qBAAqBF,GAEjD,SAASG,IACL5Y,EAAKgX,QAAQZ,OAASpW,EAAKoW,QAC/B,CAEA,SAASyC,EAAqBzC,GAK1B,OAJApW,EAAK8Y,QAAQ1C,GACbwC,IAEA5Y,EAAKmX,OAASnX,EAAK4L,aAAa5L,EAAKgX,SAC9BhX,EAAKmX,MAChB,CAEA,SAAS4B,EAAWL,GAChB,OAAO,WACH,IAAIM,EAAqB,EAEzB,SAASC,IACL,MAAOD,EAAqBN,EAAiB7d,OAAQ,CACjD,IAAIic,EAAa4B,EAAiBM,GAMlC,OALAA,IAEAhZ,EAAKoL,QAAU,KACfpL,EAAKmX,OAAS,KAEPnX,EAAKqY,UAAUvB,GAAYlV,KAAKiX,GAAsB,SAASI,EAC1E,CAEAL,IACA,IAAI9d,EAAQ,IAAI2C,MAAM,sCAEtB,OADAuC,EAAKiX,WAAavR,EAAUlE,OAAO1G,GAC5BkF,EAAKiX,UAChB,CAEA,OAAOgC,GACX,CACJ,CAKA,IAAIC,EAAuC,OAApBxe,KAAKuc,WAAsBvc,KAAKuc,WAAW,UAAS,WACvE,OAAOvR,EAAUjE,SACrB,IAAKiE,EAAUjE,UAqBf,OAnBA/G,KAAKuc,WAAaiC,EAAiBtX,MAAK,WACpC,IAAIkV,EAAa4B,EAAiB,GAIlC,OAHA1Y,EAAKoL,QAAU,KACfpL,EAAKmX,OAAS,KAEPnX,EAAKqY,UAAUvB,GAAYlV,MAAK,SAAUwU,GAC7CpW,EAAKmO,QAAUiI,EAAOjI,QACtByK,IACA5Y,EAAKoX,+BACLpX,EAAKkX,YAAc6B,EAAWL,EAClC,GACJ,IAAG,UAAS,WACRE,IACA,IAAI9d,EAAQ,IAAI2C,MAAM,sCAEtB,OADAuC,EAAKiX,WAAavR,EAAUlE,OAAO1G,GAC5BkF,EAAKiX,UAChB,IAEApR,EAAoBnL,KAAKuc,WAAYrR,EAAUE,GACxCpL,KAAKuc,UAChB,EAEAL,EAAYnU,UAAU0W,SAAW,SAAkBrC,GAC/C,QAASpB,GAAcoB,EAC3B,EAEAF,EAAYnU,UAAUqW,QAAU,SAAiBM,GAC7C3C,GAAO/b,KAAM0e,EACjB,EAEAxC,EAAYnU,UAAUkW,qBAAuB,SAA8BF,GAEvE,IADA,IAAIC,EAAmB,GACd3b,EAAI,EAAGF,EAAM4b,EAAQ5d,OAAQkC,EAAIF,EAAKE,IAAK,CAChD,IAAI+Z,EAAa2B,EAAQ1b,GACrBrC,KAAKye,SAASrC,IACd4B,EAAiBnc,KAAKua,EAE9B,CACA,OAAO4B,CACX,EAEA9B,EAAYnU,UAAU2U,6BAA+B,WAKjD,IAAK,IAAIra,EAAI,EAAGF,EAAMoZ,GAAepb,OAAQkC,EAAIF,EAAKE,IAClDsZ,GAAc3b,KAAMub,GAAelZ,GAE3C,EAEA6Z,EAAYnU,UAAU4W,eAAiB,SAAwBxN,GAC3D,OAAO,IAAI+K,EAAY/K,EAC3B,EAEO+K,CACX,CAtSkB,GA4Sd0C,GAAiB,IAAI1C,GAEzB7b,EAAOC,QAAUse,EAEjB,EAAE,CAAC,EAAI,KAAK,CAAC,EAAE,CAAC,GAxvFmW,CAwvF/V,EACpB,G,itDCnsFA,MAAMC,OAAQC,EAAAA,iCAAAA,IAAS,IACvB,IAAIC,IAAM,EAEVC,eAAeC,eACb,OAAO,IAAIpZ,SAAQkB,IACjBpC,YAAW,KACToC,GAAQ,EAAM,GACb,IAAK,GAEZ,CAEA,SAASmY,WAAY7J,GAEnB,OADA9J,QAAQ4T,KAAIC,EAAAA,wCAAAA,IAAU,aACO,OAAzBA,EAAAA,wCAAAA,IAAU,cACZC,EAAAA,wCAAAA,IAAU,WAAY,IACtB9T,QAAQ4T,IAAI,kBAAoB9J,EAAEiK,UAC3BjK,EAAEiK,WAEX/T,QAAQ4T,IAAII,KAAKlK,EAAEiK,YAAcF,EAAAA,wCAAAA,IAAU,YAAale,SAASmU,EAAEmK,GAAK,KACjED,KAAKlK,EAAEiK,YAAcF,EAAAA,wCAAAA,IAAU,YAAale,SAASmU,EAAEmK,GAAK,IACrE,CAEA,MAAMC,SAAWT,UAEf,IACE,MAAMxX,eAAwBuC,MAAM2V,wCAAAA,GAAc,qCAAwCX,IAAM,CAACY,OAAQ,SAASC,QAAQ3b,KAC1H,OAAOuD,CACT,CAAE,MAAOjF,GACPgJ,QAAQ4T,IAAI5c,EACd,CACA,MAAO,EAAE,EAGLsd,QAAWC,IACf,MAAMC,EAAgB,IAAJD,EACZE,EAAO,IAAIC,KAAKF,GAChBG,EAAQzU,OAAOuU,EAAKG,WAAa,GAAGC,SAAS,EAAG,KAChDC,EAAM5U,OAAOuU,EAAKH,WAAWO,SAAS,EAAG,KACzCE,EAAON,EAAKO,cAClB,MAAQ,GAAEL,KAASG,KAAOC,GAAM,EAK5BE,YAAeC,IACnB1B,KAAO,GACPU,WAAWvY,MAAMM,IACM,GAAjBA,EAAOrH,SAGXoL,QAAQ4T,IAAI3X,GACZA,EAAOkZ,SAAQ9c,IACbib,MAAMhd,KAAK+B,EAAQ,IAErBe,YAAW,IAAM8b,EAAGtf,OAAOwf,YAAY,KAAI,GAE3C,E,OAGJlB,WAAWvY,MAAMM,IACfqX,MAAM+B,OAAO,EAAG/B,MAAM1e,UAAWqH,EAAO,I,slKCxHnC,MAAMkY,EAAc,4DAGpB,SAASL,EAAU/U,EAAM1D,GAC5BwS,aAAajH,QAAQ7H,EAAM1D,EAC/B,CAGO,SAASwY,EAAU9U,GACtB,OAAO8O,aAAazH,QAAQrH,EAChC,C,4BCNAhK,EAAQ,EAAU,CAACugB,EAAKC,KACpB,MAAM3f,EAAS0f,EAAIE,WAAaF,EAChC,IAAK,MAAOvV,EAAK0V,KAAQF,EACrB3f,EAAOmK,GAAO0V,EAElB,OAAO7f,CAAM,C,oFCHjB,MAAM8f,GAA2B,OAAgB,IAAQ,CAAC,CAAC,YAAY,qBAEvE,G","sources":["webpack://GC-App2/./node_modules/@ionic/storage/dist/esm/index.js","webpack://GC-App2/./node_modules/core-js/internals/array-set-length.js","webpack://GC-App2/./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack://GC-App2/./node_modules/core-js/internals/is-array.js","webpack://GC-App2/./node_modules/core-js/modules/es.array.includes.js","webpack://GC-App2/./node_modules/core-js/modules/es.array.push.js","webpack://GC-App2/./node_modules/localforage/dist/localforage.js","webpack://GC-App2/./src/views/PollsPage.vue","webpack://GC-App2/./src/views/constants.js","webpack://GC-App2/./node_modules/vue-loader/dist/exportHelper.js","webpack://GC-App2/./src/views/PollsPage.vue?341d"],"sourcesContent":["import LocalForage from 'localforage';\n/** @hidden */\nexport const Drivers = {\n    SecureStorage: 'ionicSecureStorage',\n    IndexedDB: LocalForage.INDEXEDDB,\n    LocalStorage: LocalForage.LOCALSTORAGE\n};\nconst defaultConfig = {\n    name: '_ionicstorage',\n    storeName: '_ionickv',\n    dbKey: '_ionickey',\n    driverOrder: [\n        Drivers.SecureStorage,\n        Drivers.IndexedDB,\n        Drivers.LocalStorage\n    ]\n};\nexport class Storage {\n    /**\n     * Create a new Storage instance using the order of drivers and any additional config\n     * options to pass to LocalForage.\n     *\n     * Possible default driverOrder options are: ['indexeddb', 'localstorage'] and the\n     * default is that exact ordering.\n     *\n     * When using Ionic Secure Storage (enterprise only), use ['ionicSecureStorage', 'indexeddb', 'localstorage'] to ensure\n     * Secure Storage is used when available, or fall back to IndexedDB or LocalStorage on the web.\n     */\n    constructor(config = defaultConfig) {\n        this._db = null;\n        this._secureStorageDriver = null;\n        const actualConfig = Object.assign({}, defaultConfig, config || {});\n        this._config = actualConfig;\n    }\n    async create() {\n        const db = LocalForage.createInstance(this._config);\n        this._db = db;\n        await db.setDriver(this._config.driverOrder || []);\n        return this;\n    }\n    /**\n     * Define a new Driver. Must be called before\n     * initializing the database. Example:\n     *\n     * await storage.defineDriver(myDriver);\n     * await storage.create();\n     */\n    async defineDriver(driver) {\n        if (driver._driver === Drivers.SecureStorage) {\n            this._secureStorageDriver = driver;\n        }\n        return LocalForage.defineDriver(driver);\n    }\n    /**\n     * Get the name of the driver being used.\n     * @returns Name of the driver\n     */\n    get driver() {\n        var _a;\n        return ((_a = this._db) === null || _a === void 0 ? void 0 : _a.driver()) || null;\n    }\n    assertDb() {\n        if (!this._db) {\n            throw new Error('Database not created. Must call create() first');\n        }\n        return this._db;\n    }\n    /**\n     * Get the value associated with the given key.\n     * @param key the key to identify this value\n     * @returns Returns a promise with the value of the given key\n     */\n    get(key) {\n        const db = this.assertDb();\n        return db.getItem(key);\n    }\n    /**\n     * Set the value for the given key.\n     * @param key the key to identify this value\n     * @param value the value for this key\n     * @returns Returns a promise that resolves when the key and value are set\n     */\n    set(key, value) {\n        const db = this.assertDb();\n        return db.setItem(key, value);\n    }\n    /**\n     * Remove any value associated with this key.\n     * @param key the key to identify this value\n     * @returns Returns a promise that resolves when the value is removed\n     */\n    remove(key) {\n        const db = this.assertDb();\n        return db.removeItem(key);\n    }\n    /**\n     * Clear the entire key value store. WARNING: HOT!\n     * @returns Returns a promise that resolves when the store is cleared\n     */\n    clear() {\n        const db = this.assertDb();\n        return db.clear();\n    }\n    /**\n     * @returns Returns a promise that resolves with the number of keys stored.\n     */\n    length() {\n        const db = this.assertDb();\n        return db.length();\n    }\n    /**\n     * @returns Returns a promise that resolves with the keys in the store.\n     */\n    keys() {\n        const db = this.assertDb();\n        return db.keys();\n    }\n    /**\n     * Iterate through each key,value pair.\n     * @param iteratorCallback a callback of the form (value, key, iterationNumber)\n     * @returns Returns a promise that resolves when the iteration has finished.\n     */\n    forEach(iteratorCallback) {\n        const db = this.assertDb();\n        return db.iterate(iteratorCallback);\n    }\n    setEncryptionKey(key) {\n        var _a;\n        if (!this._secureStorageDriver) {\n            throw new Error('@ionic-enterprise/secure-storage not installed. Encryption support not available');\n        }\n        else {\n            (_a = this._secureStorageDriver) === null || _a === void 0 ? void 0 : _a.setEncryptionKey(key);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","'use strict';\nvar $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","'use strict';\nvar classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) === 'Array';\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar fails = require('../internals/fails');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// FF99+ bug\nvar BROKEN_ON_SPARSE = fails(function () {\n  // eslint-disable-next-line es/no-array-prototype-includes -- detection\n  return !Array(1).includes();\n});\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 and Safari <= 15.4, FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\n\nvar FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","<template>\r\n    <ion-page>\r\n      <ion-header :translucent=\"true\">\r\n        <ion-toolbar>\r\n          <ion-buttons slot=\"start\">\r\n            <ion-menu-button color=\"primary\"></ion-menu-button>\r\n          </ion-buttons>\r\n          <ion-title>Polls</ion-title>\r\n        </ion-toolbar>\r\n      </ion-header>\r\n  \r\n      <ion-content :fullscreen=\"true\">\r\n        <ion-header collapse=\"condense\">\r\n          <ion-toolbar>\r\n            <ion-title size=\"large\">Polls</ion-title>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n        <ion-card>\r\n          <ion-card-content>\r\n            <strong style=\"font-size: 30px; line-height: 26px;\">Polls</strong>\r\n\r\n          </ion-card-content>\r\n        </ion-card>\r\n        <div id=\"cards\">\r\n          <div v-for=\"(p, i) in polls\" :key=\"i\">\r\n\r\n            <ion-card>\r\n              <img v-if=\"p.image != null && p.image != ''\" style=\"height: 200px;\" alt=\"announcement image\" :src=\"p.image\">\r\n              <ion-card-header>\r\n                <ion-card-title> {{ p.title }} </ion-card-title>\r\n                <ion-card-subtitle> {{ getDate(p.timestamp) }}</ion-card-subtitle>\r\n              </ion-card-header>\r\n\r\n              <ion-card-content>\r\n                <p>\r\n                  {{ p.desc }}\r\n                </p>\r\n                \r\n              </ion-card-content>\r\n              \r\n              <div class=\"voteButton\">\r\n                <ion-button :href=\"'/poll?index=' + p.id\" :disabled=\"isDisabled(p)\" class=\"vote\" >{{ p.button }}</ion-button>\r\n              </div>\r\n            </ion-card>\r\n          </div>\r\n          <ion-infinite-scroll @ionInfinite=\"ionInfinite\">\r\n            <ion-infinite-scroll-content></ion-infinite-scroll-content>\r\n          </ion-infinite-scroll>\r\n        </div>\r\n      </ion-content>\r\n    </ion-page>\r\n  </template>\r\n  \r\n  <script setup>\r\nimport { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar, IonCard, IonCardHeader, IonCardTitle, IonButton, IonCardContent, IonCardSubtitle, IonInfiniteScrollContent, IonInfiniteScroll} from '@ionic/vue';\r\nimport { reactive } from 'vue';\r\nimport { Storage } from '@ionic/storage';\r\nimport { APIENDPOINT, setCookie, getCookie } from './constants';\r\n\r\n\r\nconst polls = reactive([]);\r\nlet off = 0;\r\n\r\nasync function delayedFalse() {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(false);\r\n    }, 1000); // 1000 milliseconds = 1 second\r\n  });\r\n}\r\n\r\nfunction isDisabled (p) {\r\n  console.log(getCookie(\"answered\"));\r\n  if (getCookie(\"answered\") == null) {\r\n    setCookie(\"answered\", []);\r\n    console.log(\"setting button \" + p.disabled);\r\n    return p.disabled;\r\n  }\r\n  console.log(eval(p.disabled) || (getCookie(\"answered\")).includes(p.id + \"\"));\r\n  return eval(p.disabled) || (getCookie(\"answered\")).includes(p.id + \"\");\r\n}\r\n\r\nconst getPolls = async () => {\r\n\r\n  try {\r\n    const result =  (await (await fetch(APIENDPOINT + \"/polls?sortbytime=1&max=10&offset=\" + (off), {method: \"GET\"})).json()).data;\r\n    return result;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return [];\r\n};\r\n\r\nconst getDate = (d) => {\r\n  const timestamp = d * 1000;\r\n  const date = new Date(timestamp);\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const year = date.getFullYear();\r\n  return `${month}/${day}/${year}`;\r\n}\r\n\r\n\r\n\r\nconst ionInfinite = (ev) => {\r\n  off += 10;\r\n  getPolls().then((result) => {\r\n    if (result.length == 0) {\r\n      return;\r\n    }\r\n    console.log(result);\r\n    result.forEach(element => {\r\n      polls.push(element);\r\n    });\r\n    setTimeout(() => ev.target.complete(), 500);\r\n\r\n  });\r\n};\r\n\r\ngetPolls().then((result) => {\r\n  polls.splice(0, polls.length, ...result)\r\n})\r\n\r\n\r\n</script>\r\n  \r\n<style scoped>\r\n  \r\n  ion-card {\r\n    text-align: center;\r\n  }\r\n\r\n  p {\r\n    font-size: large !important;\r\n  }\r\n\r\n</style>\r\n  ","export const APIENDPOINT = \"http://ec2-18-144-101-122.us-west-1.compute.amazonaws.com\";\r\n\r\n// Set a cookie without expiration\r\nexport function setCookie(name, value) {\r\n    localStorage.setItem(name, value);\r\n}\r\n\r\n// Get a cookie\r\nexport function getCookie(name) {\r\n    return localStorage.getItem(name);\r\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import script from \"./PollsPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PollsPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PollsPage.vue?vue&type=style&index=0&id=531007a3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-531007a3\"]])\n\nexport default __exports__"],"names":["Drivers","SecureStorage","IndexedDB","LocalStorage","DESCRIPTORS","isArray","$TypeError","TypeError","getOwnPropertyDescriptor","Object","SILENT_ON_NON_WRITABLE_LENGTH_SET","undefined","this","defineProperty","writable","length","error","module","exports","O","MAX_SAFE_INTEGER","it","classof","Array","argument","$","$includes","fails","addToUnscopables","BROKEN_ON_SPARSE","includes","target","proto","forced","el","arguments","toObject","lengthOfArrayLike","setArrayLength","doesNotExceedSafeInteger","INCORRECT_TO_LENGTH","push","call","properErrorOnNonWritableLength","FORCED","arity","item","len","argCount","i","f","e","t","n","r","s","o","u","a","Error","code","l","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","immediate","task","g","self","window","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","reject","resolve","getThen","obj","then","apply","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","prototype","toString","values","resolved","allResolver","resolveFromAll","outValue","race","response","constructor","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","open","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","name","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","onversionchange","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","arrayBuff","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","store","req","get","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","isCurrentDb","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","_forage","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","array","searchElement","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","polls","reactive","off","async","delayedFalse","isDisabled","log","getCookie","setCookie","disabled","eval","id","getPolls","APIENDPOINT","method","json","getDate","d","timestamp","date","Date","month","getMonth","padStart","day","year","getFullYear","ionInfinite","ev","forEach","complete","splice","sfc","props","__vccOpts","val","__exports__"],"sourceRoot":""}